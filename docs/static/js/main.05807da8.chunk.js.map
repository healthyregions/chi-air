{"version":3,"sources":["utils/addSelectedChartData.js","utils/findDateIndices.js","utils/getCSV.js","utils/getParseCSV.js","utils/getURLParams.js","components/Pages/About.js","components/Pages/Contact.js","components/Pages/Data.js","components/Pages/Map.js","styled_components/index.js","App.js","constants/defaults.js","reducers/index.js","index.js","actions/index.js","components/bottomPanel.js","config/svg.js","components/contextMenu.js","components/csvDownloader.js","components/dataDetails.js","components/dock.js","components/draggable.js","components/Footer.js","components/heroMap.js","components/legend.js","components/infoBox.js","components/tooltip.js","components/mapSection.js","components/mapTooltipContent.js","components/navbar.js","components/notificationBox.js","components/variablePanel.js","components/preloader.js","components/tooltipPopper.js","components/staticNavbar.js","components/scaleable.js","components/geocoder.js","components/Pages/Error.js","components/Pages/Home.js","components/Pages/LoadingMessage.js","config/index.js"],"names":["findDateIndices","dateList","columnList","validIndices","i","length","indexOf","push","url","a","fetch","then","response","ok","text","Promise","reject","status","d3","tempData","getCSV","getParseCSV","getURLParams","params","mapParams","coords","currentData","lastDateIndex","mapCoords","Math","round","latitude","longitude","zoom","source","split","variable","variableName","replace","method","mapType","prop","nProperty","bin","binMode","date","nIndex","slice","dateRange","nRange","nType","overlay","resource","vizType","AboutPage","styled","div","BioSection","leadershipInfo","name","link","img","process","affiliation","title","coreTeamInfo","coalitionDesignInfo","coalitionPartnersInfo","contributorsInfo","formatBio","person","item","xs","md","src","alt","href","target","about","container","spacing","justify","map","h","ContactPage","ContactForm","form","InputBlock","props","fullWidth","colors","blue","white","SuccessMessage","teal","pressInfo","Contact","REACT_APP_EMAIL_FORM_URL","useState","formData","setFormData","formErrors","setFormErrors","isSubmitting","setIsSubmitting","submitted","setSubmitted","generateURL","data","property","returnURL","encodeURIComponent","Date","toISOString","handleSubmit","e","preventDefault","Contact_Name","Contact_Email","Message","prev","submissionURL","handleChange","value","rel","className","onClick","onSubmit","id","labelId","onChange","required","label","placeholder","error","helperText","type","multiline","rows","variant","press","DataPage","BlockIndent","p","lightgray","SectionTitle","h3","Data","to","App","useSelector","state","storedGeojson","isLoading","setIsLoading","dispatch","useDispatch","generateBins","nBins","features","columnData","row","numerator","sort","b","bins","handleData","defaultData","r","json","loadDataAndBins","useEffect","console","log","Object","keys","loaded","style","backgroundImage","position","left","top","zIndex","colorScale","StyledDropDown","FormControl","black","ContentContainer","Grid","buttongray","lightblue","disabled","Gutter","About","React","lazy","Map","basename","fallback","path","component","Home","exact","ErrorPage","Component","INITIAL_STATE","denominator","dType","dProperty","dRange","dIndex","scale","scale3D","fixedScale","zAxisParams","panelState","variables","info","tutorial","lineChart","context","contextPos","x","y","sidebarData","anchorEl","mapLoaded","notification","urlParams","reducer","action","mapParamsObj","payload","centroidsArray","geojsonData","feature","turf","GEOID","properties","geoid","centroids","tempParamsObj","currentGeoid","obj","storedData","geojsonObj","storedLisaData","storedCartogramData","storedMobilityData","centroidsObj","geodaProxy","proxy","dates","currentDataFn","fn","colObj","cols","currDate","currDateIndex","index","startDateIndex","binsObj","breaks","use3D","panelsObj","currentVariable","chartData","values","selectionKeys","selectionIndex","appendedChartData","countCol","sumCol","appendedSelectionNames","appendedSelectionIndex","removedSelectionNames","tempRemoveIndex","splice","removedSelectionIndex","contextPanelsObj","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById","changeVariable","setMapParams","setAnchorEl","setPanelState","setNotification","gray","settings","viewBox","cx","cy","transform","d","selectRect","fill","locate","minus","class","width","height","plus","points","compass","share","Paper","Button","active","CsvDownloaderContainer","darkgray","checkboxSets","subset","readme","CsvDownloader","cases","covid_confirmed_1p3a","covid_confirmed_1p3a_state","covid_confirmed_cdc","covid_confirmed_cdc_state","covid_confirmed_nyt","covid_confirmed_nyt_state","covid_confirmed_usafacts","covid_confirmed_usafacts_state","deaths","covid_deaths_1p3a","covid_deaths_1p3a_state","covid_deaths_cdc","covid_deaths_cdc_state","covid_deaths_nyt","covid_deaths_nyt_state","covid_deaths_usafacts","covid_deaths_usafacts_state","berkeley_predictions","health_context","chr_health_context","chr_health_context_state","chr_health_factors","chr_health_factors_state","chr_life","chr_life_state","testing","covid_tcap_cdc","covid_tcap_cdc_state","covid_testing_cdc","covid_testing_cdc_state","covid_wk_pos_cdc","covid_wk_pos_cdc_state","covid_ccpt_cdc","covid_ccpt_cdc_state","vaccination","vaccine_admin1_cdc","vaccine_admin2_cdc","vaccine_dist_cdc","hospitals_clinics","context_fqhc_clinics_hrsa","context_hospitals_covidcaremap","essential_workers_parent","context_essential_workers_acs","checkboxes","setCheckboxes","isDownloading","setIsDownloading","event","checked","fileList","items","filter","download_url","undefined","dataLinks","docsLinks","blob","dataPromises","docsPromises","all","v","docs","license","zip","JSZip","file","dataFolder","folder","docsFolder","forEach","fileSaver","generateAsync","content","saveAs","GetFiles","ping","checkboxSet","FormControlLabel","control","Checkbox","onOrOff","newSet","FormGroup","checkboxItem","Container","Accordion","MuiAccordion","AccordionSummary","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","AccordionHeader","Typography","dataList","DataDetails","expanded","setExpanded","dataDescriptions","setDataDescriptions","markdownFilePromises","markdownFiles","getMarkdownFiles","dataset","square","panel","newExpanded","aria-controls","header","tags","tag","plugins","gfm","button","isActive","FooterContainer","footer","skyblue","FooterContent","LinkLists","SignupForm","orange","Footer","signUp","novalidate","for","sm","TextField","fitBounds","bounds","BottomPanel","yellow","ivory","LegendContainer","LegendTitle","BinLabels","firstBinZero","BinBars","Legend","color","backgroundColor","binLength","innerWidth","innerHeight","MapContainer","HoverDiv","MapButtonContainer","infoPanel","NavInlineButtonGroup","NavInlineButton","shareNotification","tilted","ShareURL","input","IndicatorBox","GeocoderContainer","MapSection","object","hoverInfo","setHoverInfo","setHighlightGeog","hoverGeog","setHoverGeog","lat","lon","z","bearing","pitch","viewState","setViewState","shared","setMultipleSelect","boxSelect","setBoxSelect","boxSelectDims","setBoxSelectDims","setValue","useForceUpdate","visibilityChange","hidden","msHidden","webkitHidden","addEventListener","SHARED_GEOID","localStorage","getItem","parseInt","SHARED_VIEW","JSON","parse","hasOwnProperty","transitionDuration","transitionInterpolator","FlyToInterpolator","view","GetMapView","deckRef","current","deck","MapView","mapRef","useRef","handleGeolocate","navigator","geolocation","getCurrentPosition","handleZoom","currMapView","handleGeocoder","useCallback","location","center","bbox","COLOR_SCALE","scaleThreshold","domain","range","layers","GeoJsonLayer","pickable","stroked","filled","extruded","getFillColor","f","opacity","onHover","updateTriggers","transitions","material","lineWidthScale","getLineColor","getLineWidth","lineWidthMinPixels","repeat","listener","clientX","ox","clientY","oy","touchListener","removeListeners","removeEventListener","handleBoxSelect","pageX","pageY","pickObjects","layerIds","GeoidList","setItem","stringify","myEfficientFn","func","wait","immediate","timeout","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","viewport","WebMercatorViewport","unproject","west","north","east","south","geometry","coordinates","onKeyDown","selectionStart","ctrlKey","shiftKey","onKeyUp","onMouseDown","onMouseUp","ref","initialViewState","controller","dragRotate","dragPan","doubleClickZoom","touchZoom","touchRotate","keyboard","scrollZoom","inertia","views","pickingRadius","onViewStateChange","reuseMaps","mapStyle","preventStyleDiffing","mapboxApiAccessToken","MAPBOX_ACCESS_TOKEN","SVG","resetTilt","API_KEY","pointerEvents","MapTooltipContent","acs_population","toLocaleString","trees_n","trees_crown_den","toFixed","heatisl","nn_q3_pm2_5","urban_flood_suscep","logtraf","svi_pecentile","asthma_age_adj_rate","NavItems","ul","NavContainer","green","NavBar","paddingRight","VariablePanelContainer","otherPanels","ControlsContainer","DataDescriptions","VariablePanel","InputLabel","htmlFor","Select","variablePresets","MenuProps","MenuItem","PreloaderContainer","Popper","Preloader","isHidden","setIsHidden","display","Navbar","notScaleable","NavbarContent","StaticNavbar","mapLinksOpen","setMapLinksOpen","removeListener","handleNavOpen","strongOrange","StyledOption","span","Geocoder","results","searchState","setSearchState","buildAddress","getMapboxResults","callback","queryMapbox","useMemo","throttle","handleSearch","formatPlaceContext","contextArray","returnString","includes","Autocomplete","freeSolo","disableClearable","filterOptions","autoComplete","clearOnEscape","inputValue","options","getOptionLabel","option","place_name","selectedOption","renderOption","idx","Fragment","renderInput","margin","InputProps","Error","HomePage","HomePageContent","Hero","Features","Feature","BreakQuestion","Arrow","UseCasesContainer","UseCases","NoBreak","Usage","home","autoPlay","muted","loop","PreloaderPage","LoadingMessage","tooltipInfo","red","pink"],"mappings":"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","file":"static/js/main.05807da8.chunk.js","sourcesContent":["const addSelectedChartData = (chartData, geogData) => {\r\n    for (let i=0; i<geogData.length; i++) {\r\n        chartData[i].selectedGeog = geogData[i]\r\n    }\r\n\r\n    return chartData;\r\n}\r\n\r\nexport default addSelectedChartData;","export const findDateIndices = ( dateList, columnList ) => {\r\n    let validIndices = []\r\n    for (let i=0; i<dateList.length; i++) {\r\n        if (columnList.indexOf(dateList[i]) !== -1) validIndices.push(i)\r\n    }\r\n    return validIndices\r\n}\r\n\r\nexport const getDateIndices = ( data, names ) => {\r\n    let rtn = {}\r\n    \r\n    for (let i=0; i < data.length; i++) {\r\n        rtn[names[i]] = data[i][2]\r\n    }\r\n\r\n    return rtn;\r\n}","import * as d3 from 'd3-dsv';\r\n\r\nasync function getCSV(url){\r\n    const tempData = await fetch(url)\r\n      .then(response => {\r\n        return response.ok ? response.text() : Promise.reject(response.status);\r\n      }).then(text => {\r\n        let data = d3.csvParse(text, d3.autoType)\r\n        \r\n        return data\r\n      })\r\n    \r\n      return tempData\r\n}\r\n\r\nexport default getCSV","import * as d3 from 'd3-dsv';\r\nimport { findDateIndices } from '../utils';\r\n\r\nasync function getParseCSV(url, joinCol, accumulate, dateList){\r\n\r\n  const tempData = await fetch(url)\r\n    .then(response => {\r\n      return response.ok ? response.text() : Promise.reject(response.status);\r\n    }).then(text => {\r\n      let data = d3.csvParse(text, d3.autoType);\r\n      let rtn = {};\r\n      let n = data.length;\r\n      let selectedJoinColumn;\r\n      let dateIndices = null; \r\n\r\n      joinCol.forEach(colOption => {\r\n        if (data[0].hasOwnProperty(colOption)) selectedJoinColumn = colOption;\r\n      })\r\n      if (dateList !== undefined) dateIndices = findDateIndices(dateList, Object.keys(data[0]))\r\n\r\n      if (accumulate) {\r\n        while (n>0){\r\n          n--;\r\n          let i = 0;\r\n          let tempArr = new Array(dateList.length)\r\n          while (i < dateList.length){\r\n            tempArr[i] = ((data[n][dateList[i]]||0)+(tempArr[i-1]||0))||null\r\n            i++;\r\n          }\r\n          rtn[data[n][selectedJoinColumn]] = tempArr\r\n        }\r\n      } else if (dateList !== undefined){\r\n        while (n>0){\r\n          n--;\r\n          let i = 0;\r\n          let tempArr = new Array(dateList.length)\r\n          while (i < dateList.length){\r\n            tempArr[i] = (data[n][dateList[i]]||tempArr[i-1])||null\r\n            i++;\r\n          }\r\n          rtn[data[n][selectedJoinColumn]] = tempArr\r\n        }\r\n      } else {\r\n        while (n>0){\r\n          n--;\r\n          rtn[data[n][selectedJoinColumn]] = Object.values(data[n])\r\n        }\r\n      }\r\n      return [rtn, Object.keys(data[0]), dateIndices]\r\n    });\r\n  return tempData;\r\n}\r\n\r\nexport default getParseCSV","const getURLParams = (params) => {\r\n    const { mapParams, coords, currentData, lastDateIndex } = params;\r\n\r\n    let mapCoords = `?lat=${Math.round(coords.latitude*1000)/1000}&lon=${Math.round(coords.longitude*1000)/1000}&z=${Math.round(coords.zoom*10)/10}`;\r\n    let source = `&src=${currentData.split('.geojson')[0]}`\r\n    let variable = mapParams.variableName !== 'Confirmed Count per 100K Population' ? `&var=${mapParams.variableName.replace(/ /g,\"_\")}` : ''\r\n    let method = mapParams.mapType !== 'natural_breaks' ? `&mthd=${mapParams.mapType}` : '';\r\n    let prop = mapParams.nProperty !== null ? `&propCol=${mapParams.nProperty}` : '';\r\n    let bin = mapParams.binMode !== '' ? '&dbin=True' : ''        \r\n    let date = lastDateIndex !== null && mapParams.nIndex !== lastDateIndex.slice(-1,)[0] ? `&date=${mapParams.nIndex}` : '';\r\n    let dateRange = mapParams.nRange !== 7 && mapParams.nType === 'time-series' ? `&range=${mapParams.nRange}` : ''\r\n    let overlay = mapParams.overlay ? `&ovr=${mapParams.overlay}` : '';\r\n    let resource = mapParams.resource ? `&res=${mapParams.resource}` : '';\r\n    let mapType = mapParams.vizType === \"cartogram\" ? `&viz=cartogram` : mapParams.vizType === '3D' ? '&viz=3D' : '';\r\n  \r\n    return `${mapCoords}${source}${variable}${method}${prop}${bin}${date}${dateRange}${overlay}${resource}${mapType}&v=2`\r\n}\r\n\r\nexport default getURLParams;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ContentContainer, Gutter } from '../../styled_components';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { StaticNavbar, Footer } from '../../components';\r\n\r\nconst AboutPage = styled.div`\r\n    background:white;\r\n`\r\nconst BioSection = styled.div`\r\n    padding:40px 0;\r\n    text-align:center;\r\n    img {\r\n        width:100%;\r\n        max-width:200px;\r\n        display:block;\r\n        border-radius:50%;\r\n        margin:40px auto 10px auto;\r\n    }\r\n    p.affiliation {\r\n        display:inline;\r\n    } \r\n    p {\r\n        max-width: 400px;\r\n        margin:0 auto;\r\n    }\r\n`\r\n\r\nconst leadershipInfo = [\r\n    {\r\n        name: 'Marynia Kolak, MS, MFA, PhD',\r\n        link: 'https://makosak.github.io/',\r\n        img: `${process.env.PUBLIC_URL}/img/mk.jpg`,\r\n        affiliation: '(CSDS)',\r\n        title: 'Assistant Director for Health Informatics, Health Geographer, GIScientist'\r\n    },\r\n    {\r\n        name:'Xun Li, PhD',\r\n        link:'https://www.linkedin.com/in/xun-li-794a5b18/',\r\n        img: `${process.env.PUBLIC_URL}/img/xunli2.png`,\r\n        affiliation:'(CSDS)',\r\n        title:'Assistant Director for Data Science & principal software engineer of GeoDa'\r\n    },\r\n    {\r\n        name:'Qinyun Lin, PhD',\r\n        link:'https://www.linkedin.com/in/qinyun-lin-b72763112',\r\n        img: `${process.env.PUBLIC_URL}/img/qlin.png`,\r\n        affiliation:'(CSDS)',\r\n        title:'Postdoctoral Fellow specializing in causal inference, social network analysis & multi-level models',\r\n    },\r\n]\r\n\r\n\r\nconst coreTeamInfo = [\r\n    {\r\n        name:'Dylan Halpern, MCP',\r\n        link:'https://dylanhalpern.com/',\r\n        img: `${process.env.PUBLIC_URL}/img/dylan.png`,\r\n        affiliation:'(CSDS)',\r\n        title:'Principal Software Engineer',\r\n    },\r\n    {\r\n       'name': 'Vidal Anguino, MS',\r\n        'link': 'https://spatial.uchicago.edu/directories/full/Research-Assistants',\r\n        'img': `${process.env.PUBLIC_URL}/img/vidal.jpeg`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Software Engineer'\r\n    },\r\n    {\r\n        'name': 'Susan Paykin, MPP',\r\n        'link': 'https://www.linkedin.com/in/susanpaykin/',\r\n        'img': `${process.env.PUBLIC_URL}/img/susan.jpg`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Senior Research Specialist'\r\n    },\r\n    {\r\n        'name': 'Stephanie Yang',\r\n        'link': 'https://spatial.uchicago.edu/directories/full/Research-Assistants',\r\n        'img': `${process.env.PUBLIC_URL}/img/stephanie.png`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Spatial Data Science Fellow Data Engineer'\r\n    },\r\n    {\r\n        'name': 'Andrés Crucetta',\r\n        'link': 'https://spatial.uchicago.edu/directory/andr%C3%A9s-crucetta',\r\n        'img': `${process.env.PUBLIC_URL}/img/andres.png`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Research Assistant Data Science Specialist'\r\n    },\r\n    {\r\n        'name': 'Kenna Camper',\r\n        'link': 'https://kenna-camper.wixsite.com/portfolio',\r\n        'img': `${process.env.PUBLIC_URL}/img/kenna.png`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Research Assistant Communications Specialist'\r\n    },\r\n    {\r\n        'name': 'Laura Chen',\r\n        'link': 'https://spatial.uchicago.edu/directories/full/Research-Assistants',\r\n        'img': `${process.env.PUBLIC_URL}/img/laura.png`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Research Assistant Communications Specialist'\r\n    }, \r\n]\r\n\r\nconst coalitionDesignInfo = [\r\n    {\r\n        'name': 'Akemi Hong',\r\n        'link': 'http://www.studioakemi.com',\r\n        'img': `${process.env.PUBLIC_URL}/img/akemi.jpeg`,\r\n        'affiliation': '',\r\n        'title': 'Principal, Studio Akemi'\r\n    },\r\n    {\r\n        'name': 'Toni Williams',\r\n        'link': 'https://burness.com/our-people/toni',\r\n        'img': `${process.env.PUBLIC_URL}/img/toni.jpg`,\r\n        'affiliation': '',\r\n        'title': 'Vice President, Burness'\r\n    },\r\n    {\r\n        'name': 'Cecilia Smith, MS, PhD',\r\n        'link': 'https://www.lib.uchicago.edu/about/directory/staff/cecilia-smith/',\r\n        'img': `${process.env.PUBLIC_URL}/img/cecilia.jpg`,\r\n        'affiliation': '',\r\n        'title': 'GIS and Maps Librarian, Univesity of Chicago'\r\n    },\r\n\r\n]\r\nconst coalitionPartnersInfo = [\r\n    {\r\n        'name': 'Lawrence T. Brown, PhD',\r\n        'link': 'https://uwphi.pophealth.wisc.edu/staff/brown-lawrence/',\r\n        'img': `${process.env.PUBLIC_URL}/img/lawrence.png`,\r\n        'affiliation': '(CHR&R)',\r\n        'title': 'Director of County Health Rankings & Roadmaps, Visiting Associate Professor in the University of Wisconsin Population Health Institute'\r\n    },\r\n    {\r\n        'name': 'Marjorie Givens, PhD ',\r\n        'link': 'https://uwphi.pophealth.wisc.edu/staff/givens-phd-marjory/',\r\n        'img': `${process.env.PUBLIC_URL}/img/givens.jpg`,\r\n        'affiliation': ' (CHR&R) ',\r\n        'title': 'Associate Director, Population Health Institute'\r\n    },\r\n    {\r\n        'name': 'Bin Yu, PhD',\r\n        'link': 'https://www.stat.berkeley.edu/~binyu/Site/Welcome.html',\r\n        'img': `${process.env.PUBLIC_URL}/img/bin.jpg`,\r\n        'affiliation': '(Berkeley)',\r\n        'title': \"Chancellor's Distinguished Professor, Principal of Yu Research Group, Departments of Statistics and EECS\"\r\n    },\r\n    {\r\n        'name': 'Roger L. Chaufournier, MHSA',\r\n        'link': 'https://www.linkedin.com/in/roger-chaufournier-0499a22a',\r\n        'img': `${process.env.PUBLIC_URL}/img/roger.jpg`,\r\n        'affiliation': '',\r\n        'title': 'CEO of CSI Solutions'\r\n    },\r\n    {\r\n        'name': 'Kathy Reims, MD',\r\n        'link': 'https://www.linkedin.com/in/kathy-reims-56279217',\r\n        'img': `${process.env.PUBLIC_URL}/img/kreims.jpg`,\r\n        'affiliation': '',\r\n        'title': 'CMO of CSI Solutions'\r\n    },\r\n    {\r\n        'name': 'Greg Wolverton, FHIMSS',\r\n        'link': 'https://www.linkedin.com/in/greg-wolverton-234057a',\r\n        'img': `${process.env.PUBLIC_URL}/img/greg.jpeg`,\r\n        'affiliation': '',\r\n        'title': 'CTO of CSI Solutions'\r\n    },\r\n    {\r\n        'name': 'Brian Yandell, PhD ',\r\n        'link': 'https://datascience.wisc.edu/covid19',\r\n        'img': `${process.env.PUBLIC_URL}/img/yandell.jpg`,\r\n        'affiliation': '(UW-Madison)',\r\n        'title': 'Interim Director at the American Family Insurance Data Science Institute, lead of the UW-Madison COVID Data Science Team'},\r\n    {\r\n        'name': 'Steve Goldstein, PhD ',\r\n        'link': 'https://biostat.wiscweb.wisc.edu/staff/goldstein-steve/',\r\n        'img': `${process.env.PUBLIC_URL}/img/steveg.jpeg`,\r\n        'affiliation': '(UW-Madison)',\r\n        'title': 'Botany, Biostatistics and Medical Informatics'\r\n    },\r\n    {\r\n        'name': 'Kevin Little, PhD',\r\n        'link': 'https://www.iecodesign.com/about-us',\r\n        'img': `${process.env.PUBLIC_URL}/img/kevin.png`,\r\n        'affiliation': '',\r\n        'title': 'Principal, Informing Ecological Design, LLC'\r\n    },\r\n    \r\n]\r\nconst contributorsInfo = [\r\n    {\r\n        'name': 'Julia Koschinsky',\r\n        'link': 'https://www.linkedin.com/in/julia-koschinsky-657599b1',\r\n        'img': `${process.env.PUBLIC_URL}/img/julia.jpeg`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Executive Director of the Center for Spatial Data Science at the University of Chicago.'\r\n    },\r\n    {\r\n        'name': 'Luc Anselin',\r\n        'link': 'https://spatial.uchicago.edu/directory/luc-anselin-phd',\r\n        'img': `${process.env.PUBLIC_URL}/img/luc.png`,\r\n        'affiliation': '(CSDS) ',\r\n        'title': 'Stein-Freiler Distinguished Service Professor of Sociology at the College, Director of the Center for Spatial Data Science, & a Senior Fellow at NORC.'\r\n    },\r\n    {\r\n        'name': 'John Steill ',\r\n        'link': 'https://www.linkedin.com/in/johnsteill/',\r\n        'img': `${process.env.PUBLIC_URL}/img/johns.png`,\r\n        'affiliation': '(UW-Madison)',\r\n        'title': 'Computational Biologist Morgridge Institute of Research'\r\n    },\r\n    {\r\n        'name': 'Steven Wangen ',\r\n        'link': 'https://www.linkedin.com/in/steven-wangen/',\r\n        'img': `${process.env.PUBLIC_URL}/img/steve.png`,\r\n        'affiliation': '(UW-Madison) ',\r\n        'title': 'Assistant Scientist at the Wisconsin Institute for Discovery, and Data Scientist at the American Family Insurance Data Science Institute.'\r\n    },\r\n    {\r\n        'name': 'Erin Abbott',\r\n        'link': 'https://spatial.uchicago.edu/directories/full/Research-Assistants',\r\n        'img': `${process.env.PUBLIC_URL}/img/erin.jpeg`,\r\n        'affiliation': '(CSDS)',\r\n        'title': '3rd year Environmental & Urban Studies major, Geographic Information Science minor, and Pre-health at the University of Chicago.'\r\n    },\r\n    {\r\n        'name': 'Karina Acosta Ordonez',\r\n        'link': 'https://spatial.uchicago.edu/directories/full/all',\r\n        'img': `${process.env.PUBLIC_URL}/img/karina.jpg`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'PhD Student, Visiting Scholar'\r\n    },\r\n    {\r\n        'name': 'Sihan Mao ',\r\n        'link': 'https://www.linkedin.com/in/sihan-mao/',\r\n        'img': `${process.env.PUBLIC_URL}/img/sihano.jpeg`,\r\n        'affiliation': '(CSDS Alumni)',\r\n        'title': 'Senior Data & Policy Analyst, Department of Innovation & Performance, City of Pittsburgh'\r\n    },\r\n    {\r\n        'name': 'Arianna Israel',\r\n        'link': '',\r\n        'img': `${process.env.PUBLIC_URL}/img/ari.jpg`,\r\n        'affiliation': '',\r\n        'title': 'UX Engineer'\r\n    },\r\n    {\r\n        'name': 'Robert Martin',\r\n        'link': '',\r\n        'img': `${process.env.PUBLIC_URL}/img/robert.jpeg`,\r\n        'affiliation': '',\r\n        'title': 'Software Engineer'\r\n    },\r\n    {\r\n        'name': 'Dan Snow, MS',\r\n        'link': '',\r\n        'img': `${process.env.PUBLIC_URL}/img/Dan.png`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Software Engineer'\r\n    },\r\n    {\r\n        'name': 'Moksha Menghaney',\r\n        'link': '',\r\n        'img': `${process.env.PUBLIC_URL}/img/Moksha.jpeg`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Community Mapping Analyst'\r\n    },\r\n    {\r\n        'name': 'Ryan Wang',\r\n        'link': 'https://spatial.uchicago.edu/directories/full/Research-Assistants',\r\n        'img': `${process.env.PUBLIC_URL}/img/ryan.jpeg`,\r\n        'affiliation': '(CSDS)',\r\n        'title': 'Spatial Data Science Fellow Data Analyst'\r\n    },\r\n]\r\n\r\n\r\n\r\nconst formatBio = (person) => \r\n    <Grid item xs={12} md={4}>\r\n        <img src={person.img} alt={`${person.name}`} />\r\n        <p>\r\n            {person.link ? \r\n                <a href={person.link} target=\"noopener noreferrer\">{person.name}</a>\r\n                :\r\n                person.name\r\n            }\r\n            {person.affiliation && ` ${person.affiliation}`}\r\n        </p>\r\n        <p>\r\n            {person.title}\r\n        </p>\r\n    </Grid>\r\n\r\nconst about = () => {\r\n    return (\r\n       <AboutPage>\r\n           <StaticNavbar/>\r\n           <ContentContainer>\r\n               <h1>About Us</h1>\r\n               <hr/>\r\n               <h2>\r\n                   The U.S. COVID-19 Atlas is a county-level clustering surveillance tool to provide quick access to county-level COVID-19 estimates, \r\n                   longitudinal exploration, and statistical cluster detection. It reveals a more detailed pandemic landscape with local hotspots of \r\n                   surging COVID cases that are missed by state-level data.\r\n                </h2>\r\n                <p>\r\n                    In addition to basic visualizations at county &amp; state scales, the Atlas also provides statistical hotspots to support surveillance and \r\n                    decision-making that have helped a wide range of users, from rural health department officials to businesses across the country planning to re-open safely.\r\n                    <br/><br/>\r\n                    It was started in early March and launched less than two weeks later by the University of Chicago’s Center for Spatial Data Science (CSDS) based on its GeoDaWeb platform. \r\n                    A network of volunteers activated to contribute to its development, and the atlas has since expanded as a research coalition across multiple institutions.\r\n                    <br/><br/>\r\n                    Today, the US COVID Atlas Project is a coalition of research partners and contributors that have been integral to developing and expanding the Covid Atlas to meet the needs \r\n                    of health practitioners, planners, researchers, and the public, with support in part by the Robert Wood Johnson Foundation. The project remains a free and opensource GIS platform, \r\n                    building on GeoDa libraries.\r\n                </p>\r\n                <BioSection>\r\n                    <h3>Leadership</h3>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        {leadershipInfo.map(person => formatBio(person))}\r\n                    </Grid>\r\n                    <Gutter h={60}/>\r\n                    <h3>Core Development Team</h3>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        {coreTeamInfo.map(person => formatBio(person))}\r\n                    </Grid>\r\n                    <Gutter h={60}/>\r\n                    <h3>Coalition Design &amp; Communications Team</h3>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        {coalitionDesignInfo.map(person => formatBio(person))}\r\n                    </Grid>\r\n                    <Gutter h={60}/>\r\n                    <h3>Coalition Partners</h3>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        {coalitionPartnersInfo.map(person => formatBio(person))}\r\n                    </Grid>\r\n                    <Gutter h={60}/>\r\n                    <h3>Contributors</h3>\r\n                    <Grid container spacing={1} justify=\"center\">\r\n                        {contributorsInfo.map(person => formatBio(person))}\r\n                    </Grid>\r\n                </BioSection>\r\n           </ContentContainer>\r\n           <Footer/>\r\n       </AboutPage>\r\n    );\r\n}\r\n \r\nexport default about;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ContentContainer, Gutter } from '../../styled_components';\r\nimport { StaticNavbar, Footer } from '../';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { colors } from '../../config';\r\nconst ContactPage = styled.div`\r\n    background:white;\r\n    h1 {\r\n        display:inline-block;\r\n        margin-right:20px;\r\n    }\r\n    a.social-icon {\r\n        img {\r\n            width: 30px;\r\n        }\r\n        display:inline-block;\r\n        margin:5px 10px 0 0;\r\n        opacity:0.6;\r\n        transition:250ms all;\r\n        &:hover {\r\n            opacity:1;\r\n        }\r\n    }\r\n`\r\n\r\nconst ContactForm = styled.form`\r\n    &.locked{\r\n        user-select:none;\r\n        pointer-events:none;\r\n        opacity:0.5;\r\n    }\r\n    border:1px solid black;\r\n    padding:2rem;\r\n    margin:20px 0;\r\n`\r\n\r\nconst InputBlock = styled.div`\r\n    padding:0.5rem 0;\r\n    padding-top:${props => props.fullWidth ? '2rem' : '0.5rem'};\r\n    display:block;\r\n    #message {\r\n        width:100%;\r\n    }\r\n    .MuiInputBase-root, .MuiFormControl-root, .MuiFormLabel-root {\r\n        min-width:75%;\r\n        width:${props => props.fullWidth ? '100%' : 'auto'};\r\n        font-family: 'Lato', sans-serif;\r\n        @media (max-width: 960px) {\r\n            width:100%;\r\n        }\r\n    }\r\n    button#submit-form {\r\n        font-size: 16px;\r\n        font-weight: 700;\r\n        letter-spacing: 1.75px;\r\n        line-height:3;\r\n        text-align: center;\r\n        text-transform:uppercase;\r\n        background-color: ${colors.blue};\r\n        color: ${colors.white};\r\n        padding: 0 20px;\r\n        border-radius: .3rem;\r\n        text-decoration:none;\r\n        border:none;\r\n        float:right;\r\n        display:block;\r\n        cursor:pointer;\r\n        box-shadow:0px 0px 4px rgba(0,0,0,0);\r\n        transition:250ms all;\r\n        &:hover {\r\n            box-shadow:2px 2px 4px rgba(0,0,0,0.35);\r\n        }\r\n        @media (max-width: 960px) {\r\n            margin:0 auto;\r\n            float:initial;\r\n        }\r\n    }\r\n`\r\n\r\nconst SuccessMessage = styled.div`\r\n    padding:20px;\r\n    background:${colors.teal};\r\n    position:relative;\r\n    margin:2rem 0;\r\n    p {\r\n        color:white;\r\n        font-weight:bold;\r\n        margin-right:2rem;\r\n    }\r\n    button {\r\n        position:absolute;\r\n        right:0.5rem;\r\n        top:0.5rem;\r\n        background:none;\r\n        border:none;\r\n        color:white;\r\n        font-size:1.5rem;\r\n        font-weight:bold;\r\n        cursor:pointer;\r\n    }\r\n\r\n`\r\n\r\nconst pressInfo = [\r\n    {\r\n        'name': 'NPR - All Things Considered:',\r\n        'link': 'https://www.npr.org/2020/07/02/886845325/coronavirus-in-the-u-s-where-the-hotspots-are-now-and-where-to-expect-new-ones',\r\n        'text': 'Coronavirus in the US -- Where the hotposts are now and where to expect new ones. ',\r\n        'date': '(July 2)'\r\n    },\r\n    {\r\n        'name': 'Politico:',\r\n        'link': 'https://www.politico.com/newsletters/politico-nightly-coronavirus-special-edition/2020/06/10/dont-call-it-a-second-wave-489488',\r\n        'text': 'POLITICO Nightly: Coronavirus Special Edition, “Don’t Call it a Second Wave ',\r\n        'date': '(June 12)'\r\n    },\r\n    {\r\n        'name': 'Washington Post:',\r\n        'link': 'https://www.washingtonpost.com/news/powerpost/paloma/the-health-202/2020/06/01/the-health-202-the-summer-fight-against-the-coronavirus-will-be-a-local-one/5ed1753188e0fa32f822de79/',\r\n        'text': 'The Health 202: The summer fight against the coronavirus will be a local one ',\r\n        'date': '(June 1)'\r\n    },\r\n    {\r\n        'name': 'Politico:',\r\n        'link': 'https://www.politico.com/newsletters/politico-nightly-coronavirus-special-edition/2020/05/12/pelosis-pandemic-strategy-489203',\r\n        'text': 'POLITICO Nightly: Coronavirus Special Edition, “Pelosi’s Pandemic Strategy',\r\n        'date': '(May 12)'\r\n    },\r\n    {\r\n        'name': 'Washington Post:',\r\n        'link': 'https://www.washingtonpost.com/news/powerpost/paloma/the-health-202/2020/05/05/the-health-202-social-distancing-hasn-t-been-as-effective-in-stemming-u-s-coronavirus-deaths-as-policymakers-had-hoped/5eb04b6d88e0fa594778ea5e/',\r\n        'text': \"Social distancing hasn't been as effective in stemming U.S. coronavirus deaths as policymakers hoped\",\r\n        'date': '(May 5)'\r\n    },\r\n    {\r\n        'name': 'New York Times:',\r\n        'link': 'https://www.nytimes.com/2020/04/10/nyregion/coronavirus-new-yorkers-leave.html',\r\n        'text': 'Did New Yorkers Who Fled to Second Homes Bring the Virus?',\r\n        'date': '(April 10)'\r\n    },\r\n    {\r\n        'name': 'Washington Post:',\r\n        'link': 'https://www.washingtonpost.com/politics/even-as-deaths-mount-officials-see-signs-pandemics-toll-may-not-match-worst-fears/2020/04/07/cb2d2290-78d1-11ea-9bee-c5bf9d2e3288_story.html',\r\n        'text': 'Even as deaths mount, officials see signs pandemic’s toll may not match worst fears',\r\n        'date': '(April 8)'\r\n    },\r\n    {\r\n        'name': 'Washington Post:',\r\n        'link': 'https://www.washingtonpost.com/politics/2020/04/08/leading-model-now-estimates-tens-thousands-fewer-covid-19-deaths-by-summer/',\r\n        'text': 'A leading model now estimates tens of thousands fewer covid-19 deaths by summer ',\r\n        'date': '(April 8)'\r\n    },\r\n    {\r\n        'name': 'CBS This Morning:',\r\n        'link': 'https://www.youtube.com/watch?v=uqGXzWCD9Xk',\r\n        'text': 'How the coronavirus is impacting rural areas',\r\n        'date': '(April 6)'\r\n    },\r\n    {\r\n        'name': 'ABC News:',\r\n        'link': 'https://www.youtube.com/watch?v=uqGXzWCD9Xk',\r\n        'text': 'How the coronavirus is impacting rural areas',\r\n        'date': '(April 6)'\r\n    },\r\n    {\r\n        'name': 'CBS This Morning:',\r\n        'link': 'https://abcnews.go.com/Health/surprising-covid-19-hot-spots-coronavirus-threatens-rural/story?id=69940146',\r\n        'text': 'Surprising COVID-19 hot spots: Why coronavirus still threatens rural areas',\r\n        'date': '(April 4)'\r\n    },\r\n    {\r\n        'name': 'Daily Mail:',\r\n        'link': 'https://www.dailymail.co.uk/news/article-8186581/Americas-hidden-hotspots-selfish-coronavirus-refugees-spread-disease.html',\r\n        'text': \"America's hidden hotspots: Shocking maps reveal how rural areas and small communities are some of the hardest hit by coronavirus as hospitals are overwhelmed just like in New York and New Orleans\",\r\n        'date': '(April 4)'\r\n    },\r\n    {\r\n        'name': 'The Root:',\r\n        'link': 'https://www.theroot.com/8-of-the-10-worst-coronavirus-hot-spots-are-in-the-sout-1842648491',\r\n        'text': '8 of the 10 Worst Coronavirus Hot Spots Are in the South. Apparently, Republican Governors Just Found Out About the Pandemic',\r\n        'date': '(April 3)'\r\n    },\r\n    {\r\n        'name': 'Scientific American:',\r\n        'link': 'https://www.scientificamerican.com/article/map-reveals-hidden-u-s-hotspots-of-coronavirus-infection/?fbclid=IwAR08weiTCQTmzeSd7harTwPDR7dgQEbUZYCr0CdJhEYJp4OK7ps9fgu7hgA',\r\n        'text': 'Map Reveals Hidden U.S. Hotspots of Coronavirus Infection',\r\n        'date': '(April 2)'\r\n    },\r\n    {\r\n        'name': 'Business Insider:',\r\n        'link': 'https://www.businessinsider.com/coronavirus-hotspot-in-the-us-south-states-covid-19-pandemic-2020-4',\r\n        'text': \"New data reveals coronavirus hotspots brewing across the south, where the pandemic is set to 'hit hard'\",\r\n        'date': '(April 2)'\r\n    },\r\n    {\r\n        'name': 'WGN:',\r\n        'link': 'https://wgntv.com/news/medical-watch/small-areas-hit-hard-by-covid-19-find-representation-in-u-of-c-map/',\r\n        'text': 'Small areas hit hard by COVID-19 find representation in U of C map',\r\n        'date': '(March 31)'\r\n    },\r\n    {\r\n        'name': 'Business Insider:',\r\n        'link': 'https://www.businessinsider.com/next-wave-of-coronavirus-national-epidemic-new-orleans-philadelphia-2020-3',\r\n        'text': 'The next wave of coronavirus outbreaks is threatening cities from New Orleans to Philadelphia, and it reveals the US is on pace for a national epidemic',\r\n        'date': '(March 30)'\r\n    },\r\n    {\r\n        'name': 'International Business Times:',\r\n        'link': 'https://www.ibtimes.com/coronavirus-usa-second-wave-outbreak-fall-possible-fauci-warns-2949741',\r\n        'text': 'Coronavirus USA: Second Wave Of Outbreak In Fall Possible, Fauci Warns',\r\n        'date': '(March 30)'\r\n    },\r\n    {\r\n        'name': 'Vox:',\r\n        'link': 'https://www.vox.com/2020/3/28/21197421/usa-coronavirus-covid-19-rural-america',\r\n        'text': 'The Coronavirus May Hit Rural America Later - and Harder',\r\n        'date': '(March 28)'\r\n    },\r\n    {\r\n        'name': 'UChicago News:',\r\n        'link': 'https://news.uchicago.edu/story/state-level-data-misses-growing-coronavirus-hot-spots-us-including-south',\r\n        'text': 'State-level data misses growing coronavirus hot spots in the U.S., including in the South',\r\n        'date': '(March 26)'\r\n    }\r\n]\r\n\r\n\r\nexport default function Contact(){\r\n    const url =  `${process.env.REACT_APP_EMAIL_FORM_URL}`\r\n\r\n    const [formData, setFormData] = useState({\r\n        'Category': 'General',\r\n        'Contact_Name': '',\r\n        'Contact_Email': '',\r\n        'Contact_Phone': '_',\r\n        'Message': ''\r\n    })\r\n    \r\n    const [formErrors, setFormErrors] = useState({\r\n        'Contact_Name': false,\r\n        'Contact_Email': false,\r\n        'Message': false\r\n    })\r\n\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [submitted, setSubmitted] = useState(false)\r\n\r\n    const generateURL = async (data, url) => {\r\n        let returnURL = `${url}?Date=${encodeURIComponent(new Date().toISOString().slice(0,10))}`\r\n        for (const property in data){\r\n            returnURL += `&${encodeURIComponent(property)}=${encodeURIComponent(data[property])}`\r\n        }\r\n        return returnURL\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (formData.Contact_Name === '' || formData.Contact_Email === '' || formData.Message === '') {\r\n            if (formData.Contact_Name === '') setFormErrors(prev => ({...prev, 'Contact_Name':true}))\r\n            if (formData.Contact_Email === '') setFormErrors(prev => ({...prev, 'Contact_Email':true}))\r\n            if (formData.Message === '') setFormErrors(prev => ({...prev, 'Message':true}))\r\n        } else {\r\n            setIsSubmitting(true)\r\n            setFormErrors({       \r\n                'Contact_Name': false,\r\n                'Contact_Email': false,\r\n                'Message': false})\r\n            \r\n            const submissionURL = await generateURL(formData, url);\r\n            const response = await fetch(submissionURL, { method: 'GET' });\r\n    \r\n            setIsSubmitting(false)\r\n            setSubmitted(true)\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (e) => setFormData(prev => ({...prev, [e.target.name]: e.target.value}))\r\n    const handleSelect = (e) => setFormData(prev => ({...prev, 'Category': e.target.value}))\r\n    \r\n    return (\r\n       <ContactPage>\r\n           <StaticNavbar/>\r\n           <ContentContainer>\r\n                <h1>Contact Us</h1>\r\n                <a href=\"https://twitter.com/covid_atlas\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-icon\">\r\n                    <img src={`${process.env.PUBLIC_URL}/icons/twitter-icon-dark.png`} alt=\"Twitter Icon\" />\r\n                </a>\r\n                <a href=\"https://github.com/GeoDaCenter/covid\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"social-icon\">\r\n                    <img src={`${process.env.PUBLIC_URL}/icons/github-icon-dark.png`} alt=\"Twitter Icon\" />\r\n                </a>\r\n                <hr/>\r\n                <p>\r\n                    \r\n                    Contact US COVID Atlas co-leads directly if you have any questions about the Atlas or have media inquiries:<br/>\r\n                </p>\r\n                {submitted && \r\n                    <SuccessMessage>\r\n                        <p>\r\n                            Thanks for your message! Our team will review your message and get back with you as soon as possible. We appreciate your interest and helping us to improve the US Covid Atlas!\r\n                        </p>\r\n                        <button onClick={() => setSubmitted(false)}>×</button>\r\n                    </SuccessMessage>\r\n                }\r\n                <ContactForm className={isSubmitting ? 'locked' : ''} onSubmit={handleSubmit}>\r\n                    <h2>CONTACT FORM</h2>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={4}>\r\n                            <InputBlock>\r\n                                <InputLabel id=\"Category\">Message Type</InputLabel>\r\n                                <Select\r\n                                    labelId=\"Category-label\"\r\n                                    id=\"Category\"\r\n                                    value={formData['Category']}\r\n                                    onChange={handleSelect}\r\n                                    \r\n                                >\r\n                                    <MenuItem value={'General'}>General</MenuItem>\r\n                                    <MenuItem value={'Bug'}>Bug Report or Error</MenuItem>\r\n                                    <MenuItem value={'DataQuestion'}>Data Question</MenuItem>\r\n                                    <MenuItem value={'FeatureRequest'}>Feature Request</MenuItem>\r\n                                    <MenuItem value={'TechOpenSource'}>Technical or Open Source Questions</MenuItem>\r\n                                    <MenuItem value={'Press'}>Press or Media</MenuItem>\r\n                                </Select>\r\n                            </InputBlock>\r\n\r\n                            <InputBlock>\r\n                                <TextField \r\n                                    required \r\n                                    id=\"Contact_Name\" \r\n                                    name=\"Contact_Name\" \r\n                                    label=\"Name (Required)\" \r\n                                    placeholder=\"Your Name\" \r\n                                    onChange={handleChange}\r\n                                    error={formErrors['Contact_Name']}\r\n                                    helperText={formErrors['Contact_Name'] && 'Please enter your name'}\r\n                                     />\r\n                            </InputBlock>\r\n                            \r\n                            <InputBlock>\r\n                                <TextField \r\n                                    required \r\n                                    id=\"Contact_Email\" \r\n                                    type=\"email\" \r\n                                    name=\"Contact_Email\" \r\n                                    label=\"Email (Required)\" \r\n                                    placeholder=\"greetings@you.com\" \r\n                                    onChange={handleChange} \r\n                                    error={formErrors['Contact_Email']}\r\n                                    helperText={formErrors['Contact_Email'] && 'Please enter your email'}\r\n                                    />\r\n                            </InputBlock>\r\n\r\n                            <InputBlock>\r\n                                <TextField label=\"Phone (Optional)\" id=\"Contact_Phone\" type=\"tel\" name=\"Contact_Phone\" placeholder=\"111-876-5309\" onChange={handleChange} />\r\n                            </InputBlock>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8}>\r\n                            <InputBlock fullWidth={true}>\r\n                                <TextField\r\n                                    id=\"message\"\r\n                                    label=\"Message\"\r\n                                    multiline\r\n                                    rows={6}\r\n                                    placeholder=\"Your message...\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"Message\"\r\n                                    onChange={handleChange}\r\n                                    error={formErrors['Message']}\r\n                                    helperText={formErrors['Message'] && 'Please enter a message'}\r\n                                    />\r\n                            </InputBlock>\r\n                            <InputBlock>\r\n                                <button type=\"submit\" id=\"submit-form\">Submit</button>\r\n                            </InputBlock>\r\n                        </Grid>\r\n                    </Grid>\r\n                </ContactForm>\r\n                <p>\r\n                    For additional inquiries, contact the US COVID Atlas team: Marynia Kolak (mkolak at uchicago.edu) or Qinyun Lin (qinyunlin at uchicago.edu)\r\n                </p>\r\n                <Gutter h={40}/>\r\n                <h2>CITATION</h2>\r\n                <hr/>\r\n                <p>\r\n                    Li, Xun, Lin, Qinyun, and Kolak, Marynia. The U.S. COVID-19 Atlas, 2020. https://www.uscovidatlas.org\r\n                    <br/><br/>\r\n                    For a list of all contributors to the Atlas, please visit our <a href=\"https://github.com/GeoDaCenter/covid\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a> page.\r\n                </p>\r\n                <Gutter h={40}/>\r\n                <h2>LEARNING COMMUNITY</h2>\r\n                <hr/>\r\n                <p>\r\n                    The <a href=\"https://covidatlas.healthcarecommunities.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Atlas Learning Community</a> is project by <a href=\"https://www.spreadinnovation.com/\" target=\"_blank\" rel=\"noopener noreferrer\">CSI Solutions</a> to provide Atlas super-users, health practioners, and planners a place to interact. \r\n                    It is moderated by coalition members. Ask questions, provide feedback, and help make the Atlas Coalition stronger!\r\n                </p>\r\n                <Gutter h={40}/>\r\n                <h2>MEDIA COVERAGE</h2>\r\n                <hr/>\r\n                {pressInfo.map(press => \r\n                    <p>\r\n                        <b>{press.name} </b>\r\n                        <a href={press.link} target=\"_blank\" rel=\"noopener noreferrer\">{press.text} </a>\r\n                        {press.date}\r\n                        <br/><br/>\r\n                    </p>\r\n                )}\r\n           </ContentContainer>\r\n           <Footer/>\r\n       </ContactPage>\r\n    );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ContentContainer, Gutter } from '../../styled_components';\r\nimport { StaticNavbar, Footer, DataDetails, CsvDownloader } from '../'; \r\nimport { colors } from '../../config';\r\n\r\nconst DataPage = styled.div`\r\n    background:white;\r\n`\r\n\r\nconst BlockIndent = styled.p`\r\n    margin-left:1rem;\r\n    padding-left:1rem;\r\n    border-left:2px solid ${colors.lightgray}\r\n`\r\n\r\nconst SectionTitle = styled.h3`\r\n    margin: 40px 0 10px 0;\r\n    &:nth-of-type(1){\r\n        margin:10px 0;\r\n    }\r\n`\r\n \r\nfunction Data(){\r\n    return (\r\n       <DataPage>\r\n           <StaticNavbar/>\r\n           <ContentContainer>\r\n                <h1>Data</h1>\r\n                <Gutter h={10}/>\r\n                <p>\r\n                    Below is a high-level description of the currently available datasets in the US Covid Atlas. For further documentation, please see the detailed data descriptions menu below. For data access, see our <NavLink to=\"/api\">API</NavLink> or use the bulk CSV downloader at the bottom of this page.\r\n                </p>\r\n                <Gutter h={10}/>\r\n                \r\n                <h2>CURRENT RELEASE</h2>\r\n                \r\n                <hr/>\r\n                <SectionTitle>Confirmed COVID Cases and Deaths</SectionTitle>\r\n                <p>\r\n                    Because there is no one single validated source for county-level COVID cases and deaths for real-time analysis, \r\n                    we incorporate multiple datasets from multiple projects to allow for comparisons.\r\n                </p>\r\n                <Gutter h={10}/>\r\n                <BlockIndent>\r\n                    <a href=\"https://usafacts.org/visualizations/coronavirus-covid-19-spread-map/?utm_source=MailChimp&utm_campaign=census-covid2\" target=\"_blank\" rel=\"noopener noreferrer\">USAFacts.</a> This dataset is provided by a non-profit organization. The data are aggregated from CDC, state- and local-level public health agencies. \r\n                    County-level data is confirmed by referencing state and local agencies directly.\r\n                    <Gutter h={20}/>\r\n                    <a href=\"https://coronavirus.1point3acres.com/en\" target=\"_blank\" rel=\"noopener noreferrer\">1P3A.</a>This was the initial, crowdsourced data project that served as a volunteer project led by 1P3acres.com and \r\n                    Dr. Yu Gao, Head of Machine Learning Platform at Uber. We access this data stream using a token provided by the group.\r\n                    <Gutter h={20}/>\r\n                    <a href=\"https://github.com/nytimes/covid-19-data\" target=\"_blank\" rel=\"noopener noreferrer\">New York Times.</a> The New York Times has made data available aggregated from dozens of journalists working to collect and monitor data from new conferences. They communicate with public officials to clarify and categorize cases.\r\n                </BlockIndent>\r\n                \r\n                <SectionTitle>Testing</SectionTitle>\r\n                <BlockIndent>\r\n                    <a href=\"https://covid.cdc.gov/covid-data-tracker/\" target=\"_blank\" rel=\"noopener noreferrer\">CDC.</a> The Center for Disease Control provides county-level historic testing data as well as case and death data. Currently, we include testing capacity and testing positivity rates as map variables. Total tests conducted and\r\n                    confirmed cases per testing percent, a measure of testing coverage, are available in the Context panel for selected states or counties.\r\n                    <Gutter h={20}/>\r\n                    <a href=\"https://healthdata.gov/dataset/covid-19-diagnostic-laboratory-testing-pcr-testing-time-series\" target=\"_blank\" rel=\"noopener noreferrer\">HHS.</a> The Department of Health and Human Services provides state-level historic testing data.\r\n                </BlockIndent>\r\n\r\n                <SectionTitle>Vaccination</SectionTitle>\r\n                <BlockIndent>\r\n                    <a href=\"https://covid.cdc.gov/covid-data-tracker/\" target=\"_blank\" rel=\"noopener noreferrer\">CDC.</a> The Center for Disease Control continues to release new snapshot vaccination data including daily doses distributed and administered. As the available vaccine manufacturers continue to change and \r\n                    the distribution pipeline evolves, we continue to explore how best to capture the state of vaccination efforts. Currently, no robust county-level vaccination datasets are available, but we continue to actively explore seek new data.\r\n                </BlockIndent>\r\n                \r\n                <SectionTitle>Health System Capacity</SectionTitle>\r\n                <BlockIndent>\r\n                    <a href=\"https://github.com/covidcaremap/covid19-healthsystemcapacity/tree/v0.2/data\" target=\"_blank\" rel=\"noopener noreferrer\">COVIDCareMap.</a> Healthcare System Capacity includes Staffed beds, Staffed ICU beds, Licensed Beds by County. \r\n                    The data is from 2018 facility reports with additions/edits allowed in real-time.\r\n                </BlockIndent>\r\n\r\n                <SectionTitle>Community Characteristics, Health Context, and Health Factors</SectionTitle>\r\n                <BlockIndent>\r\n                    <a href=\"https://www.census.gov/programs-surveys/acs\" target=\"_blank\" rel=\"noopener noreferrer\">American Community Survey.</a> We incorporate population data used to generate rates and occupation estimates for essential worker percentages. We will add more information as needed in future iterations.\r\n                    <Gutter h={20}/>\r\n                    <a href=\"https://www.countyhealthrankings.org/explore-health-rankings/rankings-data-documentation\" target=\"_blank\" rel=\"noopener noreferrer\">County Health Rankings &amp; Roadmaps (CHR&amp;R).</a> The CHR&amp;R is a \r\n                    collaboration between the Robert Wood Johnson Foundation and the University of Wisconsin Population Health Institute. \r\n                    The goal is to improve health outcomes for all and to close the health gaps between those with the most and least opportunities for good health.\r\n                    <Gutter h={20}/>\r\n                    Based on our discussion with CHR&amp;R, we include following focus areas and related measures for inclusion in the Atlas: \r\n                    income and economic hardship, children living in poverty, food insecurity, median household income, income inequality, access to health care, \r\n                    uninsured, preventable hospital stays, ratio of population to primary care physicians, housing cost and quality, Black/White residential segregation, \r\n                    percentage of 65 and older, obesity and diabetes prevalance, adult smoking, excessive drinking, drug overdose deaths, life expectancy and self-rated health condition.\r\n                </BlockIndent>\r\n\r\n                <SectionTitle>Forecasting statistics</SectionTitle>\r\n                <BlockIndent>\r\n                    <a href=\"https://github.com/Yu-Group/covid19-severity-prediction\" target=\"_blank\" rel=\"noopener noreferrer\">Hospital Severity Index.</a> The <a href=\"https://www.stat.berkeley.edu/~yugroup/people.html\" target=\"_blank\" rel=\"noopener noreferrer\">Yu Group</a> at UC Berkeley Statistics and EECS has compiled, cleaned and continues to update a large corpus of hospital- and county-level \r\n                    data from a variety of public sources to aid data science efforts to combat COVID-19 (see <a href=\"http://covidseverity.com/\" target=\"_blank\" rel=\"noopener noreferrer\">covidseverity.com</a>).\r\n                    <br/><br/>\r\n                    At the hospital level, their data include the location of the hospital, the number of ICU beds, the total number of employees, and the hospital type. \r\n                    At the county level, their data include COVID-19 cases/deaths from USA Facts and NYT, automatically updated every day, along with demographic information, \r\n                    health resource availability, COVID-19 health risk factors, and social mobility information.\r\n                    <br/><br/>\r\n                    An overview of each data set in this corpus is provided <a href=\"https://github.com/Yu-Group/covid-19-geographic-risk-prediction\" target=\"_blank\" rel=\"noopener noreferrer\">here.</a> We will be adding more relevant data sets as they are found. \r\n                    We prepared this data to support healthcare supply distribution efforts through short-term (days) prediction of COVID-19 deaths (and cases) at the county level. \r\n                    We are using the predictions and hospital data to arrive at a covid Pandemic Severity Index (c-PSI) for each hospital. This project is in partnership with <a href=\"https://response4life.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Response4Life.</a>\r\n                    A paper on the current approaches can be found <a href=\"https://arxiv.org/abs/2005.07882\" target=\"_blank\" rel=\"noopener noreferrer\">at this link.</a> The more detailed information with data source descriptions is provided <a href=\"https://github.com/Yu-Group/covid19-severity-prediction\" target=\"_blank\" rel=\"noopener noreferrer\">on the github.</a>\r\n                </BlockIndent>\r\n\r\n                <SectionTitle>Mobility Data</SectionTitle>\r\n                <BlockIndent>\r\n                    <a href=\"https://docs.safegraph.com/docs/social-distancing-metrics\" target=\"_blank\" rel=\"noopener noreferrer\">Safegraph Social Distancing.</a> Safegraph has provided Census Block Group level data that reports mobile phone device activity \r\n                    reported from apps that collect locations data. This data has been made available for COVID-19 related research projects. The data is generated from a series of location pings throughout the day, which determine various behaviors, such as \r\n                    staying completely home, full time work (at a workplace outside of home for 6-8 hours), part time work (at a workplace outside of home for 3-6 hours), and delivery (multiple, short visits). Access to the data consortium is available <a href=\"https://www.safegraph.com/covid-19-data-consortium\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\r\n                </BlockIndent>\r\n                \r\n                <h2>Detailed Data Descriptions</h2>\r\n                <hr />\r\n                <DataDetails />\r\n                <Gutter h={40}/>\r\n                <CsvDownloader/>\r\n               \r\n            </ContentContainer>\r\n            <Footer/>\r\n       </DataPage>\r\n    );\r\n}\r\n \r\nexport default Data;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { \r\n  getParseCSV, mergeData, getColumns, loadJson,\r\n  getDataForBins, getDataForCharts, getDataForLisa, getDateLists,\r\n  getLisaValues, getCartogramValues, getDateIndices } from '../../utils';\r\n\r\nimport { loadDataAndBins } from '../../actions';\r\n\r\nimport { MapSection, NavBar, VariablePanel, Legend,  TopPanel, Preloader,\r\n  DataPanel, Scaleable, Draggable, InfoBox, Popover } from '../../components';  \r\n\r\nimport { colorScales, fixedScales, dataPresets, variablePresets, colors, defaultData } from '../../config';\r\n\r\nfunction App() {\r\n  const {storedGeojson, mapParams } = useSelector(state => state);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useDispatch();  \r\n\r\n  const generateBins = async (data, nBins, mapParams) => {\r\n    const length = data.features.length;\r\n    const columnData = data.features.map(row => row[mapParams.numerator][mapParams.nProperty]).sort((a,b) => a - b)\r\n    let bins = [];\r\n    \r\n    for (let i=0; i<nBins; i++){\r\n      bins.push(columnData[Math.round((length/nBins)*i)])\r\n    }\r\n\r\n    return bins;\r\n  }\r\n\r\n  const handleData = async () => {\r\n    const data = await fetch(`${process.env.PUBLIC_URL}/geojson/${defaultData}`).then(r => r.json());\r\n    const bins = await generateBins(data, 6, mapParams);\r\n    dispatch(loadDataAndBins(data, bins))\r\n    setIsLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(Object.keys(storedGeojson))\r\n    if (!(Object.keys(storedGeojson).length)){\r\n      console.log('loading data')\r\n      handleData()\r\n    }\r\n  },[])\r\n  \r\n  return (\r\n    <div className=\"Map-App\">\r\n      <Preloader loaded={isLoading} />\r\n      <NavBar />\r\n      {isLoading && <div id=\"loadingIcon\" style={{backgroundImage: `url('${process.env.PUBLIC_URL}assets/img/bw_preloader.gif')`}}></div>}\r\n      <header className=\"App-header\" style={{position:'fixed', left: '20vw', top:'100px', zIndex:10}}>\r\n        {/* <button onClick={() => console.log(fullState)}>Log state</button> */}\r\n      </header>\r\n      <div id=\"mainContainer\" className={isLoading ? 'loading' : ''}>\r\n        <MapSection />\r\n        {/* <TopPanel /> */}\r\n        <Legend \r\n          variableName={mapParams.variableName} \r\n          colorScale={mapParams.colorScale}\r\n          bins={mapParams.bins}\r\n          />\r\n        <VariablePanel />\r\n        {/* <DataPanel />\r\n        <Popover />     */}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import styled from 'styled-components';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { colors } from '../config';\r\n\r\nexport const StyledDropDown = styled(FormControl)`\r\n  margin:0 10px 0 0;\r\n  color:${colors.black};\r\n  padding:0;\r\n  .MuiInputBase-root {\r\n    font-family: 'Lato', sans-serif;\r\n  }\r\n  .MuiFormLabel-root {\r\n    color: ${colors.black};\r\n    font-family: 'Lato', sans-serif;\r\n  }\r\n  .Mui-focused {\r\n    color: ${colors.black} !important;\r\n  }\r\n  .MuiInput-underline:before {\r\n    border-bottom:1px solid rgba(255,255, 255, 0.42);\r\n  }\r\n  .MuiInput-underline:after {\r\n    border-bottom: 2px solid ${colors.black};\r\n  }\r\n  .MuiInputBase-root {\r\n    color: ${colors.black};\r\n    .MuiSvgIcon-root {\r\n      color: rgba(255,255,255,0.54);\r\n    },\r\n    .MuiPopover-paper {\r\n      color:${colors.black};\r\n    }\r\n  }\r\n  .MuiFormGroup-root {\r\n    .MuiFormControlLabel-root{\r\n      color:${colors.black};\r\n      span {\r\n        font-family: 'Lato', sans-serif;\r\n      }\r\n      .MuiRadio-root {\r\n        color: ${colors.black}55;\r\n      }\r\n    }\r\n  }\r\n  .MuiRadio-root {\r\n    color:${colors.black};\r\n  }\r\n  .MuiRadio-colorSecondary.Mui-checked {\r\n    color:${colors.black};\r\n  }\r\n  div.radioContainer {\r\n    display:block;\r\n      .MuiFormControlLabel-root {\r\n        margin-right:0;\r\n      }\r\n      button {\r\n        transform:translateY(4px);\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const StyledDropDownNoLabel = styled(StyledDropDown)`\r\n  .MuiFormLabel-root {\r\n    display:none;\r\n  }\r\n  padding:10px 0 5px 20px !important;\r\n  label + .MuiInput-formControl {\r\n    margin-top:0;\r\n  }\r\n`\r\n\r\nexport const SwitchContainer = styled(Grid)`\r\n  padding-top:4px !important;\r\n  p { \r\n    display: inline;\r\n    color:white;\r\n    transform:translateY(5px);\r\n  }\r\n  span.MuiSwitch-track {\r\n      background-color:${colors.buttongray};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n      color:${colors.lightblue};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n      background-color: ${colors.lightblue};\r\n  }\r\n  .MuiSwitch-colorSecondary:hover {\r\n      background-color:${colors.lightblue}55;\r\n  }\r\n`\r\n\r\nexport const BinsContainer = styled.div`\r\n  display:inline-block;\r\n  transform:translateY(10px);\r\n  opacity: ${props => props.disabled ? 0.25 : 1};\r\n  pointer-events: ${props => props.disabled ? 'none' : 'initial'};\r\n  p { \r\n    display: inline;\r\n    color:white;\r\n    transform:translateY(5px);\r\n  }\r\n  span.MuiSwitch-track {\r\n      background-color:${colors.buttongray};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n      color:${colors.lightblue};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n      background-color: ${colors.lightblue};\r\n  }\r\n  .MuiSwitch-colorSecondary:hover {\r\n      background-color:${colors.lightblue}55;\r\n  }\r\n`\r\n\r\nexport const ContentContainer = styled.div`\r\n  width:100%;\r\n  max-width:1140px;\r\n  padding:20px;\r\n  margin:0 auto;\r\n  h1, h2, h3, h4, h5, h6, p {\r\n    color: #0d0d0d;\r\n  }\r\n  h1 {\r\n    font-family: 'Playfair Display', serif;\r\n    font-size: 49px;\r\n    font-weight: 300;\r\n    font-style: italic;\r\n  }\r\n  h2 { \r\n    font-family: 'Lato', sans-serif;\r\n    font-size: 16px;\r\n    line-height: 1.5;\r\n    letter-spacing: 1.75px;\r\n    font-weight: 700;\r\n    font-stretch: normal;\r\n    margin-bottom:20px;\r\n  }\r\n  h3 {\r\n    font-family: 'Playfair Display', serif;\r\n    font-size: 24px;\r\n    font-weight: 300;\r\n    font-style: italic;\r\n  }\r\n  p, a, ul li, ol li {\r\n    font-family: 'Lato', sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    line-height: 1.63;\r\n    letter-spacing: normal;\r\n  }\r\n  ul, ol {\r\n    padding-left:20px;\r\n  }\r\n  a {\r\n    font-weight:bold;\r\n    text-decoration:none;\r\n    color: ${colors.blue};\r\n  }\r\n  hr {\r\n    display: block;\r\n    height: 1px;\r\n    border: 0;\r\n    border-top: 1px solid #c1ebeb;\r\n    margin: 1em 0;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nexport const Gutter = styled.div`\r\n    width:100%;\r\n    display:block;\r\n    height: ${props => props.h}px;\r\n`","import React, { Component, Suspense  } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n \r\nimport {Home, LoadingMessage, ErrorPage} from './components/';\r\n \r\nconst About = React.lazy(() => import('./components/Pages/About'));\r\nconst Contact = React.lazy(() => import('./components/Pages/Contact'));\r\nconst Data = React.lazy(() => import('./components/Pages/Data'));\r\nconst Map = React.lazy(() => import('./components/Pages/Map'));\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (     \r\n       <Router basename={process.env.PUBLIC_URL}>\r\n        <div>\r\n          <Suspense fallback={<LoadingMessage />}>\r\n              <Switch>\r\n                <Route path=\"/\" component={Home} exact/>\r\n                <Route path=\"/map\" component={Map}/>\r\n                <Route path=\"/map.html\" component={Map}/>\r\n                <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/about.html\" component={About}/>\r\n                <Route path=\"/contact\" component={Contact}/>\r\n                <Route path=\"/contact.html\" component={Contact}/>\r\n                <Route path=\"/data\" component={Data}/>\r\n                <Route path=\"/data.html\" component={Data}/>\r\n                <Route component={ErrorPage} />\r\n                <Route />\r\n            </Switch>\r\n          </Suspense>\r\n        </div> \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","export const INITIAL_STATE = {\r\n  storedGeojson: {},\r\n  currentData: 'tree_sst_master_tracts.geojson',\r\n  mapParams: {\r\n    variableName: 'Tree Crown Density',\r\n    numerator: 'properties',\r\n    nType: 'charactertistic',\r\n    nRange: null,\r\n    nProperty: 'trees_crown_den',\r\n    denominator: 'properties',\r\n    dType: null,\r\n    dProperty: null,\r\n    dRange:null,\r\n    dIndex:null,\r\n    scale:1,\r\n    scale3D: 100,\r\n    fixedScale: null,\r\n    colorScale: null,\r\n    zAxisParams: null,\r\n    fixedScale: null,\r\n    colorScale: null,\r\n    storedRange: null,\r\n    bins: [],\r\n    overlay: '',\r\n    colorScale: [\r\n      [255,255,204],\r\n      [217,240,163],\r\n      [173,221,142],\r\n      [120,198,121],\r\n      [49,163,84],\r\n      [0,104,55]\r\n    ],\r\n  },\r\n  panelState: {\r\n    variables:true,\r\n    info:false,\r\n    tutorial:false,\r\n    lineChart:true,\r\n    context: false,\r\n    contextPos: {x:null,y:null}\r\n  },\r\n  sidebarData: {},\r\n  anchorEl: null,\r\n  mapLoaded: false,\r\n  notification: null,\r\n  urlParams: {}\r\n};","import { INITIAL_STATE } from '../constants/defaults';\r\nimport * as turf from '@turf/turf'\r\n\r\nconst generateBins = (data, nBins, mapParams) => {\r\n    const length = data.features.length;\r\n    const columnData = data.features.map(row => row[mapParams.numerator][mapParams.nProperty]).sort((a,b) => a - b)\r\n    let bins = [];\r\n    \r\n    for (let i=0; i<nBins; i++){\r\n      bins.push(columnData[Math.round((length/nBins)*i)])\r\n    }\r\n\r\n    return bins;\r\n}\r\n\r\nvar reducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'DATA_LOAD':\r\n            const mapParamsObj = {\r\n                ...state.mapParams,\r\n                bins: action.payload.bins\r\n            }\r\n            let centroidsArray = [];\r\n            \r\n            for (let i=0; i<action.payload.geojsonData.features.length; i++){\r\n                centroidsArray.push({\r\n                    feature: turf.centroid(action.payload.geojsonData.features[i]),\r\n                    GEOID: action.payload.geojsonData.features[i].properties.geoid\r\n                })\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                storedGeojson: action.payload.geojsonData,\r\n                mapParams: mapParamsObj,\r\n                centroids: centroidsArray\r\n            };\r\n        case 'CHANGE_VARIABLE': \r\n            const tempParamsObj = {\r\n                ...state.mapParams,\r\n                bins:generateBins(state.storedGeojson, 6, {...state.mapParams,...action.payload.params,}),\r\n                ...action.payload.params,\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                mapParams: tempParamsObj\r\n            }\r\n        case 'SET_GEOID': \r\n            return {\r\n                ...state,\r\n                currentGeoid: action.payload.geoid\r\n            };\r\n        case 'SET_STORED_DATA':\r\n            let obj = {\r\n                ...state.storedData,\r\n            }\r\n            obj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedData: obj\r\n            };\r\n        case 'SET_STORED_GEOJSON':\r\n            let geojsonObj = {\r\n                ...state.storedGeojson,\r\n            }\r\n            geojsonObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedGeojson: geojsonObj\r\n            };\r\n        case 'SET_STORED_LISA_DATA':\r\n            // let lisaObj = {\r\n            //     ...state.storedLisaData,\r\n            // }\r\n            // lisaObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedLisaData: action.payload.data\r\n            };\r\n        case 'SET_STORED_CARTOGRAM_DATA':\r\n            // let cartoObj = {\r\n            //     ...state.storedCartogramData,\r\n            // }\r\n            // cartoObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                storedCartogramData: action.payload.data\r\n            };\r\n        case 'SET_STORED_MOBILITY_DATA':\r\n            return {\r\n                ...state,\r\n                storedMobilityData: action.payload.data\r\n            }\r\n        case 'SET_CENTROIDS':\r\n            let centroidsObj = {\r\n                ...state.centroids,\r\n            }\r\n            centroidsObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                centroids: centroidsObj\r\n            };\r\n        case 'SET_CURRENT_DATA':\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data\r\n            }\r\n        case 'SET_GEODA_PROXY':\r\n            return {\r\n                ...state,\r\n                geodaProxy: action.payload.proxy\r\n            }\r\n        case 'SET_DATES':\r\n            return {\r\n                ...state,\r\n                dates: action.payload.data\r\n            }\r\n        case 'SET_DATA_FUNCTION':\r\n            return {\r\n                ...state,\r\n                currentDataFn: action.payload.fn\r\n            }\r\n        case 'SET_COLUMN_NAMES':\r\n            let colObj = {\r\n                ...state.cols\r\n            }\r\n            colObj[action.payload.name] = action.payload.data\r\n            return {\r\n                ...state,\r\n                cols: colObj\r\n            }\r\n        case 'SET_CURR_DATE':\r\n            return {\r\n                ...state,\r\n                currDate: action.payload.date\r\n            }\r\n        case 'SET_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                currDateIndex: action.payload.index\r\n            }\r\n        case 'SET_START_DATE_INDEX':\r\n            return {\r\n                ...state,\r\n                startDateIndex: action.payload.index\r\n            }\r\n        case 'SET_BINS':\r\n            let binsObj = {};\r\n            binsObj['bins'] =  action.payload.bins;\r\n            binsObj['breaks'] =  action.payload.breaks;\r\n            return {\r\n                ...state,\r\n                bins: binsObj\r\n            }\r\n        case 'SET_3D':\r\n            return {\r\n                ...state,\r\n                use3D: !state.use3D\r\n            }\r\n        case 'SET_DATA_SIDEBAR':\r\n            return {\r\n                ...state,\r\n                sidebarData: action.payload.data\r\n            }\r\n        case 'SET_PANELS':\r\n            let panelsObj = {\r\n                ...state.panelState,\r\n                ...action.payload.params\r\n            }\r\n            return {\r\n                ...state,\r\n                panelState: panelsObj \r\n            }\r\n        case 'SET_VARIABLE_NAME':\r\n            return {\r\n                ...state,\r\n                currentVariable: action.payload.name\r\n            }\r\n        case 'SET_SELECTION_DATA':\r\n            return {\r\n                ...state,\r\n                chartData: action.payload.data.values,\r\n                selectionKeys: [action.payload.data.name],\r\n                selectionIndex: [action.payload.data.index]\r\n            }\r\n        case 'APPEND_SELECTION_DATA':\r\n            let appendedChartData = state.chartData;\r\n            let countCol = action.payload.data.name + ' Daily Count'\r\n            let sumCol = action.payload.data.name + ' Total Cases'\r\n\r\n            for (let i=0; i<appendedChartData.length;i++) {\r\n                appendedChartData[i][countCol] = action.payload.data.values[i][countCol]\r\n                appendedChartData[i][sumCol] = action.payload.data.values[i][sumCol]\r\n            }\r\n\r\n            let appendedSelectionNames = [action.payload.data.name, ...state.selectionKeys];\r\n            let appendedSelectionIndex = [action.payload.data.index, ...state.selectionIndex];\r\n\r\n            return {\r\n                ...state,\r\n                chartData: appendedChartData,\r\n                selectionKeys: appendedSelectionNames,\r\n                selectionIndex: appendedSelectionIndex,\r\n            }\r\n        case 'REMOVE_SELECTION_DATA':\r\n            let removedSelectionNames = [...state.selectionKeys]\r\n            let tempRemoveIndex = removedSelectionNames.indexOf(action.payload.data.name)\r\n            removedSelectionNames.splice(tempRemoveIndex, 1)\r\n\r\n            let removedSelectionIndex = [...state.selectionIndex]\r\n            tempRemoveIndex = removedSelectionIndex.indexOf(action.payload.data.index)\r\n            removedSelectionIndex.splice(tempRemoveIndex, 1)\r\n\r\n\r\n            return {\r\n                ...state,\r\n                selectionKeys: removedSelectionNames,\r\n                selectionIndex: removedSelectionIndex,\r\n            }\r\n        case 'SET_ANCHOR_EL':\r\n            return {\r\n                ...state,\r\n                anchorEl: action.payload.anchorEl\r\n            }\r\n        case 'SET_MAP_LOADED':\r\n            return {\r\n                ...state,\r\n                mapLoaded: action.payload.loaded\r\n            }\r\n        case 'SET_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                notification: action.payload.info\r\n            }\r\n        // case 'SET_URL_PARAMS':\r\n        //     const { urlParams, presets } = action.payload;\r\n\r\n        //     let preset = urlParams.var ? presets[urlParams.var.replace(/_/g, ' ')] : {};\r\n\r\n        //     let urlMapParamsObj = {\r\n        //         ...state.mapParams,\r\n        //         binMode: urlParams.dbin ? 'dynamic' : '',\r\n        //         mapType: urlParams.mthd || state.mapParams.mapType,\r\n        //         overlay: urlParams.ovr ||  state.mapParams.overlay,\r\n        //         resource: urlParams.res || state.mapParams.resource,\r\n        //         vizType: urlParams.viz || state.mapParams.vizType\r\n        //     };\r\n\r\n        //     let urlDataParamsObj = {\r\n        //         ...state.mapParams,\r\n        //         ...preset,\r\n        //         nIndex: urlParams.date || state.mapParams.nIndex,\r\n        //         nRange: urlParams.hasOwnProperty('range') ? urlParams.range === 'null' ? null : urlParams.range : state.mapParams.nRange,\r\n        //         nProperty: urlParams.prop || state.mapParams.nProperty\r\n        //     };\r\n            \r\n        //     let urlCoordObj = {\r\n        //         lat: urlParams.lat || '',\r\n        //         lon: urlParams.lon || '',\r\n        //         z: urlParams.z || ''\r\n        //     }\r\n\r\n        //     let urlParamsSource = urlParams.src ? \r\n        //         `${urlParams.src}.geojson` : \r\n        //         state.currentData \r\n\r\n        //     return {\r\n        //         ...state,\r\n        //         currentData: urlParamsSource,\r\n        //         urlParams: urlCoordObj,\r\n        //         mapParams: urlMapParamsObj,\r\n        //         mapParams: urlDataParamsObj\r\n        //     }\r\n        case \"OPEN_CONTEXT_MENU\":\r\n            let contextPanelsObj = {\r\n                ...state.panelState,\r\n                context: true,\r\n                contextPos: {\r\n                    x: action.payload.params.x,\r\n                    y: action.payload.params.y\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                panelState: contextPanelsObj\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport WebFont from 'webfontloader';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer\r\n  ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Lora:400,600', 'Montserrat:500,700', 'sans-serif']\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","// These actions are part of the verbose boilerplate of redux\r\n// As part of the Flux architecture, these connect the dispatch from a component to the reducers\r\n\r\nexport const loadDataAndBins = ( geojsonData, bins ) => {\r\n    return {\r\n        type: 'DATA_LOAD',\r\n        payload: {\r\n            geojsonData,\r\n            bins\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// sets the variables parameters (index and range, numerator, denominator, etc.)\r\nexport const changeVariable = ( params ) => {\r\n    return {\r\n        type: 'CHANGE_VARIABLE',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\n// sets the map parameters (color mode, viz type, etc.)\r\nexport const setMapParams = ( params ) => {\r\n    return {\r\n        type: 'SET_MAP_PARAMS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\n// loads in chart data from current data\r\nexport const setSelectionData = ( data ) => {\r\n    return {\r\n        type: 'SET_SELECTION_DATA',\r\n        payload: {\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\n// sets the anchor element for the inforational tooltip\r\nexport const setAnchorEl = ( anchorEl ) => {\r\n    return {\r\n        type: 'SET_ANCHOR_EL',\r\n        payload: {\r\n            anchorEl\r\n        }\r\n    }\r\n}\r\n\r\n// sets the left, right, and dock panel states\r\nexport const setPanelState = ( params ) => {\r\n    return {\r\n        type: 'SET_PANELS',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}\r\n\r\nexport const setMapLoaded = ( loaded ) => {\r\n    return {\r\n        type: 'SET_MAP_LOADED',\r\n        payload: {\r\n            loaded\r\n        }\r\n    }\r\n}\r\n\r\nexport const setNotification = ( info ) => {\r\n    return {\r\n        type: 'SET_NOTIFICATION',\r\n        payload: {\r\n            info\r\n        }\r\n    }\r\n}\r\n\r\nexport const setUrlParams = ( urlParams, presets ) => {\r\n    return {\r\n        type: 'SET_URL_PARAMS',\r\n        payload: {\r\n            urlParams,\r\n            presets\r\n        }\r\n    }\r\n}\r\n\r\nexport const openContextMenu = ( params ) => {\r\n    return {\r\n        type: 'OPEN_CONTEXT_MENU',\r\n        payload: {\r\n            params\r\n        }\r\n    }\r\n}","// DEPRICATED: Bottom panel container\r\n// Now container in Legend.js\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\n\r\n// import { Legend } from '../components';\r\nimport { colors } from '../config';\r\n\r\n// helper function to get dock offset\r\nconst getChartHeight = () => { try { return document.querySelector('#main-chart-container').offsetHeight} catch { return 0} }\r\n\r\n// Styled components\r\nconst BottomDrawer = styled.div`\r\n    position: fixed;\r\n    bottom:0;\r\n    left:50%;\r\n    background:${colors.gray};\r\n    transform:translateX(-50%);\r\n    width:38vw;\r\n    max-width: 500px;\r\n    box-sizing: border-box;\r\n    padding:0 0 5px 0;\r\n    margin:0;\r\n    box-shadow: 0px 0px 5px rgba(0,0,0,0.7);\r\n    border-radius:0.5vh 0.5vh 0 0;\r\n    transition:250ms all;\r\n    hr {\r\n        opacity:0.5;\r\n    }\r\n    @media (max-width:1024px){\r\n        width:50vw;\r\n        div {\r\n            padding-bottom:5px;\r\n        }\r\n        #binModeSwitch {\r\n            position:absolute !important;\r\n            right: 10px !important;\r\n            top: 10px !important;\r\n        }\r\n        #dateRangeSelector {\r\n            position:absolute !important;\r\n            left: 66% !important;\r\n            transform:translateX(-50%) !important;\r\n            top: 10px !important;\r\n        }\r\n    }\r\n    \r\n    @media (max-width:768px){\r\n    \r\n        width:100%;\r\n        max-width:100%;\r\n        padding:0;\r\n        left:0;\r\n        transform:none;\r\n    }\r\n    @media (max-width:750px) and (orientation: landscape) {\r\n        // bottom all the way down for landscape phone\r\n    }\r\n`\r\n\r\nconst BottomPanel = () => {\r\n\r\n    const panelState = useSelector(state => state.panelState);\r\n\r\n    // offset for the bottom panel based on the chart height, \r\n    // managed through props via styled-components\r\n    const [bottomMargin, setBottomMargin] = useState(0);\r\n\r\n    const handleResize = () => setBottomMargin(getChartHeight())\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    return (\r\n        <BottomDrawer bottom={panelState.chart ? 0 : bottomMargin } id=\"bottomPanel\">\r\n            {/* <DateSlider /> */}\r\n            {/* <hr />\r\n            <MainLineChart />\r\n            <OpenCloseButton onClick={handleBottomOpen} bottom={panelState.chart ? 5 : bottomMargin}>\r\n                <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                    <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n                        <path d=\"M38,33.8L23.9,47.9c-1.2,1.2-1.2,3.1,0,4.2L38,66.2l4.2-4.2l-9-9H71v17c0,0.6-0.4,1-1,1H59v6h11\r\n                        c3.9,0,7-3.1,7-7V30c0-3.9-3.1-7-7-7H59v6h11c0.6,0,1,0.4,1,1v17H33.2l9-9L38,33.8z\"/>\r\n                    </g>\r\n                </svg>\r\n                <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n                    <g>\r\n                        <path d=\"M52.5,21.4c-1.9,0-3.6,1.3-4.1,3.1L37.9,63.7l-6.4-11.1c-1.2-2-3.7-2.7-5.7-1.5c-0.3,0.2-0.6,0.4-0.9,0.7\r\n                            L10.1,66.6c-1.7,1.6-1.7,4.2-0.2,5.9c1.6,1.7,4.2,1.7,5.9,0.2c0.1,0,0.1-0.1,0.1-0.1L27,61.5l8.7,15.1c1.2,2,3.7,2.7,5.7,1.5\r\n                            c0.9-0.6,1.6-1.5,1.9-2.5l9.1-33.9l4.6,17.2c0.6,2.2,2.9,3.5,5.1,2.9c1.1-0.3,2-1,2.5-1.9l10.4-18l8.9,9.4c1.6,1.7,4.2,1.8,5.9,0.3\r\n                            s1.8-4.2,0.3-5.9c0,0-0.1-0.1-0.1-0.1L77.3,32.1c-1.6-1.7-4.2-1.8-5.9-0.2c-0.3,0.3-0.6,0.6-0.8,1L62.5,47l-6-22.5\r\n                            C56,22.7,54.4,21.4,52.5,21.4L52.5,21.4z\"/>\r\n                    </g>\r\n                </svg>\r\n\r\n            </OpenCloseButton> */}\r\n        </BottomDrawer>\r\n    )\r\n\r\n}\r\n\r\nexport default BottomPanel","export const compact = <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 19.6 32\">\r\n        <path d=\"M1,0h17.6c0.6,0,1,0.5,1,1v3.1c0,0.6-0.4,1-1,1H1c-0.6,0-1-0.5-1-1V1C0,0.5,0.4,0,1,0z\"/>\r\n        <path d=\"M1,9h17.6c0.6,0,1,0.5,1,1v3.1c0,0.6-0.4,1-1,1H1c-0.6,0-1-0.5-1-1V10C0,9.4,0.4,9,1,9z\"/>\r\n        <path d=\"M1,17.9h17.6c0.6,0,1,0.5,1,1V22c0,0.6-0.4,1-1,1H1c-0.6,0-1-0.5-1-1v-3.1C0,18.4,0.4,17.9,1,17.9z\"/>\r\n        <path d=\"M1,26.9h17.6c0.6,0,1,0.5,1,1V31c0,0.6-0.4,1-1,1H1c-0.6,0-1-0.5-1-1v-3.1C0,27.3,0.4,26.9,1,26.9z\"/>\r\n    </svg>\r\n\r\nexport const expand = <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 19.6 32\" >\r\n        <path d=\"M1,0h17.6c0.6,0,1,0.5,1,1v3.1c0,0.6-0.4,1-1,1H1c-0.6,0-1-0.5-1-1V1C0,0.5,0.4,0,1,0z\"/>\r\n        <path d=\"M1,9h17.6c0.6,0,1,0.5,1,1v21c0,0.6-0.4,1-1,1H1c-0.6,0-1-0.5-1-1V10C0,9.4,0.4,9,1,9z\"/>\r\n    </svg>\r\n\r\nexport const settings = <svg viewBox=\"0 0 50 50\">\r\n            <circle className=\"cls-1\" cx=\"25.43\" cy=\"24.63\" r=\"15.4\" transform=\"translate(-3.28 3.92) rotate(-8.28)\"/>\r\n            <path className=\"cls-2\" d=\"M28.87,47.49l-7.07,0L22,41.58a17.18,17.18,0,0,0,6.74,0Z\"/>\r\n            <path className=\"cls-2\" d=\"M28.84,7.68a17.18,17.18,0,0,0-6.74,0l-.16-5.89H29Z\"/>\r\n            <path className=\"cls-2\" d=\"M44,38.35l-5,5L35,39a17.33,17.33,0,0,0,4.78-4.76Z\"/>\r\n            <path className=\"cls-2\" d=\"M15.85,10.22A17.19,17.19,0,0,0,11.07,15L6.8,10.92l5-5Z\"/>\r\n            <path className=\"cls-2\" d=\"M48.27,21.17l0,7.08-5.88-.19a17.23,17.23,0,0,0,0-6.75Z\"/>\r\n            <path className=\"cls-2\" d=\"M8.45,21.2a17.37,17.37,0,0,0,0,6.74l-5.89.16,0-7.08Z\"/>\r\n            <path className=\"cls-2\" d=\"M39.12,6l5,5-4.29,4a17.43,17.43,0,0,0-4.75-4.78Z\"/>\r\n            <path className=\"cls-2\" d=\"M11,34.2A17.16,17.16,0,0,0,15.75,39L11.7,43.25l-5-5Z\"/>\r\n    </svg>\r\n\r\nexport const report = <svg viewBox=\"0 0 50 50\">\r\n        <rect x=\"0.03\" y=\"0.19\" width=\"49.93\" height=\"3.85\" rx=\"1\"/>\r\n        <rect x=\"0.03\" y=\"8.4\" width=\"46.19\" height=\"3.85\" rx=\"1\"/>\r\n        <rect x=\"0.03\" y=\"21.12\" width=\"49.93\" height=\"3.85\" rx=\"1\"/>\r\n        <rect x=\"0.03\" y=\"29.58\" width=\"49.93\" height=\"3.85\" rx=\"1\"/><rect x=\"0.03\" y=\"38.04\" width=\"43.69\" height=\"3.85\" rx=\"1\"/>\r\n        <rect x=\"0.03\" y=\"46.15\" width=\"49.93\" height=\"3.85\" rx=\"1\"/>\r\n    </svg>\r\n\r\nexport const chart = <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n        <g>\r\n            <path d=\"M52.5,21.4c-1.9,0-3.6,1.3-4.1,3.1L37.9,63.7l-6.4-11.1c-1.2-2-3.7-2.7-5.7-1.5c-0.3,0.2-0.6,0.4-0.9,0.7\r\n                L10.1,66.6c-1.7,1.6-1.7,4.2-0.2,5.9c1.6,1.7,4.2,1.7,5.9,0.2c0.1,0,0.1-0.1,0.1-0.1L27,61.5l8.7,15.1c1.2,2,3.7,2.7,5.7,1.5\r\n                c0.9-0.6,1.6-1.5,1.9-2.5l9.1-33.9l4.6,17.2c0.6,2.2,2.9,3.5,5.1,2.9c1.1-0.3,2-1,2.5-1.9l10.4-18l8.9,9.4c1.6,1.7,4.2,1.8,5.9,0.3\r\n                s1.8-4.2,0.3-5.9c0,0-0.1-0.1-0.1-0.1L77.3,32.1c-1.6-1.7-4.2-1.8-5.9-0.2c-0.3,0.3-0.6,0.6-0.8,1L62.5,47l-6-22.5\r\n                C56,22.7,54.4,21.4,52.5,21.4L52.5,21.4z\"/>\r\n        </g>\r\n    </svg>\r\n\r\nexport const info =  <svg viewBox=\"0 0 100 100\" x=\"0px\" y=\"0px\">\r\n        <g>\r\n            <path d=\"M 62.0763 27.4552 C 64.0258 25.642 65 23.4406 65 20.8589 C 65 18.2815 64.0258 16.0809 62.0763 14.2511 C 60.1273 12.4207 57.7859 11.5 55.0413 11.5 C 52.3076 11.5 49.9438 12.4207 47.9833 14.2511 C 46.0343 16.0809 45.0487 18.2815 45.0487 20.8589 C 45.0487 23.4406 46.0343 25.642 47.9833 27.4552 C 49.9438 29.2682 52.3076 30.178 55.0413 30.178 C 57.7859 30.178 60.1273 29.2682 62.0763 27.4552 ZM 57.5841 88.0802 C 61.1017 86.4348 62.9616 83.3419 61.1353 81.9274 C 60.0823 81.1132 58.7041 82.4604 57.6963 82.4604 C 55.5343 82.4604 54.0103 82.1065 53.1367 81.3939 C 52.2518 80.6754 51.8261 79.3446 51.8261 77.3796 C 51.8261 76.5942 51.9493 75.4433 52.2182 73.9213 C 52.487 72.395 52.8007 71.0302 53.1367 69.8404 L 57.3153 55.0418 C 57.7073 53.683 57.9988 52.1893 58.1554 50.5672 C 58.301 48.9276 58.3798 47.7935 58.3798 47.1533 C 58.3798 44.0378 57.2817 41.5004 55.0971 39.5465 C 52.9237 37.5991 49.8094 36.6159 45.7765 36.6159 C 43.5361 36.6159 41.1501 36.9472 38.652 37.8117 C 33.7564 39.5293 34.8432 43.7968 35.9296 43.7968 C 38.1364 43.7968 39.6152 44.1722 40.3995 44.9193 C 41.1837 45.6604 41.5868 46.9796 41.5868 48.8828 C 41.5868 49.9269 41.4413 51.1007 41.1947 52.3689 C 40.9369 53.6381 40.635 54.9909 40.2541 56.4111 L 36.053 71.2659 C 35.6947 72.8267 35.4253 74.2246 35.2463 75.4648 C 35.0784 76.7058 35 77.9187 35 79.1091 C 35 82.1578 36.12 84.6722 38.3716 86.6596 C 40.6238 88.6528 44.0854 90.5 48.1405 90.5 C 50.7731 90.5 54.537 89.518 57.5841 88.0802 Z\">\r\n            </path>\r\n        </g>\r\n    </svg>\r\n\r\nexport const verticalGrip = <svg viewBox=\"0 0 12.1 50\" >\r\n        <rect width=\"2.4\" height=\"50\"/>\r\n        <rect x=\"4.9\" width=\"2.4\" height=\"50\"/>\r\n        <rect x=\"9.8\" width=\"2.4\" height=\"50\"/>\r\n    </svg>\r\n\r\nexport const selectRect = <svg viewBox=\"0 0 100 100\">\r\n    <g transform=\"translate(50 50) scale(0.69 0.69) rotate(0) translate(-50 -50)\">\r\n        <svg\r\n            fill=\"#000000\"\r\n            viewBox=\"0 0 8.4666665 8.4666669\"\r\n        >\r\n            <g transform=\"translate(0,-288.53333)\">\r\n                <path\r\n                    d=\"m 0.52916618,289.0625 v 1.05833 H 1.0583328 v -0.52916 h 0.5291667 v -0.52917 z m 1.58750012,0 v 0.52917 h 1.0583333 v -0.52917 z m 1.5875,0 v 0.52917 h 1.0583333 v -0.52917 z m 1.5875,0 v 0.52917 h 1.0583333 v -0.52917 z m 1.5875,0 v 0.52917 H 7.408333 v 0.52916 H 7.9374996 V 289.0625 Z M 0.52916618,290.65 v 1.05833 H 1.0583328 V 290.65 Z m 6.87916682,0 v 1.05833 H 7.9374996 V 290.65 Z m -6.87916682,1.5875 v 1.05833 H 1.0583328 v -1.05833 z m 6.87916682,0 v 1.05833 h 0.5291666 v -1.05833 z m -6.87916682,1.5875 v 1.05833 H 1.0583328 V 293.825 Z m 6.87916682,0 v 1.05833 H 7.9374996 V 293.825 Z m -6.87916682,1.5875 v 1.05833 H 1.5874995 v -0.52916 H 1.0583328 v -0.52917 z m 6.87916682,0 v 0.52917 H 6.8791663 v 0.52916 h 1.0583333 v -1.05833 z m -5.2916667,0.52917 v 0.52916 h 1.0583333 v -0.52916 z m 1.5875,0 v 0.52916 h 1.0583333 v -0.52916 z m 1.5875,0 v 0.52916 h 1.0583333 v -0.52916 z\"\r\n                ></path>\r\n            </g>\r\n        </svg>\r\n    </g>\r\n    </svg>\r\n\r\nexport const locate = <svg viewBox=\"0 0 100 100\">\r\n    <g>\r\n        <path\r\n            d=\"M50.2,34.3c-8.6,0-15.6,7-15.6,15.6c0,8.6,7,15.6,15.6,15.6c8.6,0,15.6-7,15.6-15.6   C65.8,41.3,58.8,34.3,50.2,34.3z M87.9,45.6C86,28.1,72,14.2,54.5,12.2v-8H47v7.9c-18,1.5-32.4,15.7-34.5,33.5H4.3v7.5h8.1   C14,71.5,28.6,86.2,47,87.7v8.1h7.5v-8.2c17.9-2,32-16.5,33.5-34.5h7.9v-7.5H87.9z M50.2,80.3c-16.8,0-30.4-13.7-30.4-30.4   c0-16.8,13.7-30.4,30.4-30.4c16.8,0,30.4,13.7,30.4,30.4C80.7,66.7,67,80.3,50.2,80.3z\"\r\n        ></path>\r\n    </g>\r\n</svg>\r\n\r\nexport const minus = <svg viewBox=\"0 0 100 100\">\r\n        <rect x=\"20\" y=\"43.1\" class=\"st0\" width=\"60\" height=\"13.6\"/>\r\n    </svg>\r\n\r\nexport const plus = <svg viewBox=\"0 0 100 100\" >\r\n            <g>\r\n                <polygon class=\"st0\" points=\"43.1,17.2 56.9,17.2 56.9,42.6 80,42.6 80,57.4 56.9,57.4 56.9,82.8 43.1,82.8 43.1,57.4 20,57.4 \r\n                    20,42.6 43.1,42.6 \t\"/>\r\n            </g>\r\n    </svg>\r\n\r\nexport const compass = <svg viewBox=\"0 0 100 100\">\r\n        <path d=\"M49.8,90.3c-0.5,0-1.4-0.2-2-1.4l-0.1-0.2c0-0.1-0.1-0.1-0.1-0.2L34.2,53.2c-0.6-1.8-0.6-4.8,0-6.4l13.8-35.4\r\n            c0.5-1.3,1.4-1.7,2.2-1.7c0.7,0,1.6,0.3,2.1,1.8l13.6,35.3c0.6,1.8,0.6,4.7,0,6.4L52,88.5C51.4,90.1,50.4,90.3,49.8,90.3\r\n            C49.8,90.3,49.8,90.3,49.8,90.3z M49.8,88.1C49.8,88.1,49.8,88.1,49.8,88.1c0.1,0,0.1-0.1,0.1-0.2l13.8-35.4c0.5-1.3,0.5-3.8,0-5.2\r\n            L50.1,12.1c0-0.1-0.1-0.2-0.1-0.2c0,0,0,0.1-0.1,0.2L36.2,47.4c-0.5,1.3-0.5,3.9,0,5.3L49.8,88.1z\"/>\r\n        <path d=\"M64.7,47.1L51.1,11.8c-0.3-0.8-0.7-1.2-1.1-1.2c-0.4,0-0.9,0.3-1.1,1.1L35.2,47.1c-0.3,0.8-0.4,1.8-0.4,2.9h30.4\r\n            C65.1,48.9,65,47.9,64.7,47.1z\"/>\r\n    </svg>\r\n\r\nexport const share = <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\">\r\n        <path d=\"M22.5,65c4.043,0,7.706-1.607,10.403-4.208l29.722,14.861C62.551,76.259,62.5,76.873,62.5,77.5c0,8.284,6.716,15,15,15   s15-6.716,15-15c0-8.284-6.716-15-15-15c-4.043,0-7.706,1.608-10.403,4.209L37.375,51.847C37.449,51.241,37.5,50.627,37.5,50   c0-0.627-0.051-1.241-0.125-1.847l29.722-14.861c2.698,2.601,6.36,4.209,10.403,4.209c8.284,0,15-6.716,15-15   c0-8.284-6.716-15-15-15s-15,6.716-15,15c0,0.627,0.051,1.241,0.125,1.848L32.903,39.208C30.206,36.607,26.543,35,22.5,35   c-8.284,0-15,6.716-15,15C7.5,58.284,14.216,65,22.5,65z\">\r\n        </path>\r\n    </svg>\r\n\r\nexport const print = <svg viewBox=\"0 0 100 100\"><path d=\"M86.00928,27.09229H78V8.16205A3.16207,3.16207,0,0,0,74.838,5H25.16211A3.16209,3.16209,0,0,0,22,8.16211V27.09229H14a9.02644,9.02644,0,0,0-9,9V69.86353a3.16917,3.16917,0,0,0,3.16919,3.16918H22V91.83789A3.16209,3.16209,0,0,0,25.16211,95H74.83789A3.16209,3.16209,0,0,0,78,91.83789V73.03271H91.822A3.178,3.178,0,0,0,95,69.85474V36.083A8.9907,8.9907,0,0,0,86.00928,27.09229ZM73.99951,91.00006h-48V58.05518h48Zm0-63.90777h-48V9.00006h48ZM81.33325,44.4256A3.66666,3.66666,0,1,1,85,40.759,3.66659,3.66659,0,0,1,81.33325,44.4256Z\"></path><rect x=\"33.56671\" y=\"63.14117\" width=\"32.86621\" height=\"4.2002\"></rect><rect x=\"33.56671\" y=\"72.42731\" width=\"32.86621\" height=\"4.2002\"></rect><rect x=\"33.56671\" y=\"81.71393\" width=\"32.86621\" height=\"4.2002\"></rect></svg>\r\n\r\nexport const twitter = <svg viewBox=\"0 0 248 204\">\r\n    <g>\r\n        <path d=\"M221.95,51.29c0.15,2.17,0.15,4.34,0.15,6.53c0,66.73-50.8,143.69-143.69,143.69v-0.04\r\n            C50.97,201.51,24.1,193.65,1,178.83c3.99,0.48,8,0.72,12.02,0.73c22.74,0.02,44.83-7.61,62.72-21.66\r\n            c-21.61-0.41-40.56-14.5-47.18-35.07c7.57,1.46,15.37,1.16,22.8-0.87C27.8,117.2,10.85,96.5,10.85,72.46c0-0.22,0-0.43,0-0.64\r\n            c7.02,3.91,14.88,6.08,22.92,6.32C11.58,63.31,4.74,33.79,18.14,10.71c25.64,31.55,63.47,50.73,104.08,52.76\r\n            c-4.07-17.54,1.49-35.92,14.61-48.25c20.34-19.12,52.33-18.14,71.45,2.19c11.31-2.23,22.15-6.38,32.07-12.26\r\n            c-3.77,11.69-11.66,21.62-22.2,27.93c10.01-1.18,19.79-3.86,29-7.95C240.37,35.29,231.83,44.14,221.95,51.29z\"/>\r\n    </g>\r\n</svg>\r\n\r\nexport const facebook = <svg viewBox=\"0 0 1024 1024\">\r\n<path d=\"M1024,512C1024,229.2,794.8,0,512,0S0,229.2,0,512c0,255.6,187.2,467.4,432,505.8V660H302V512h130V399.2\r\n\tC432,270.9,508.4,200,625.4,200c56,0,114.6,10,114.6,10v126h-64.6c-63.6,0-83.4,39.5-83.4,80v96h142l-22.7,148H592v357.8\r\n\tC836.8,979.4,1024,767.6,1024,512z\"/>\r\n</svg>\r\n\r\nexport const embed = <svg viewBox=\"0 0 512 512\"><path d=\"M288 368l48 48 160-160-160-160-48 48 112 112z\"></path><path d=\"M224 144l-48-48-160 160 160 160 48-48-112-112z\"></path></svg>","// general imports, state\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { colors } from '../config';\r\nimport * as SVG from '../config/svg';\r\nimport { setPanelState } from '../actions';\r\n\r\nconst MenuContainer = styled(Paper)`\r\n    position:fixed;\r\n    left: ${props=>props.x}px;\r\n    top: ${props=>props.y}px;\r\n    background:${colors.lightgray};\r\n    padding:0 15px 15px 15px;\r\n    border-radius:4px;\r\n    z-index:50000;\r\n    font-family:'Lato', sans-serif;\r\n    svg {\r\n        width:20px;\r\n        height:20px;\r\n    }\r\n    circle.cls-1 {\r\n      fill:none;\r\n      stroke-width:6px;\r\n      stroke:black;\r\n    }\r\n    h2 {\r\n        margin:30px 0 5px 0;\r\n        &:nth-of-type(1) {\r\n            margin-top:15px;\r\n        }\r\n        &.noBottomMargin {\r\n            margin-bottom:0;\r\n        }\r\n    }\r\n    p {\r\n        margin:0;\r\n    }\r\n    span.MuiCheckbox-root {\r\n        padding:2px 12px;\r\n    }\r\n    \r\n`\r\nconst Contextbutton = styled(Button)`\r\n    background-color: ${props => props.active ? colors.lightblue : colors.white} !important;\r\n    .MuiButton-label {\r\n        // font-size:75%;\r\n        text-transform:none;\r\n    }\r\n    p {\r\n        margin-left:5px;\r\n        transform:translateY(2px);\r\n    }\r\n`\r\n\r\nconst recurseParentNode = (element) => {\r\n    if (element.parentNode === null || element.parentNode.id === \"contextMenu\" || element.parentNode.id === \"mainContainer\") {\r\n        return element.parentNode?.id\r\n    } else {\r\n        return recurseParentNode(element.parentNode)\r\n    }\r\n}\r\nconst ContextMenu = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const panelState = useSelector(state => state.panelState);\r\n    const {x, y} = useSelector(state => state.panelState.contextPos);\r\n\r\n    const closePanel = () => dispatch(setPanelState({context:false}));\r\n    \r\n    useEffect(() => {\r\n        if (panelState.context) {\r\n            const listener = (e) => {\r\n                if (recurseParentNode(e.target) !== \"contextMenu\") {\r\n                    closePanel()                  \r\n                }\r\n            }\r\n            const removeListener = (e) => {\r\n                if (recurseParentNode(e.target) !== \"contextMenu\") {\r\n                    document.removeEventListener('mousedown', listener);\r\n                    document.removeEventListener('mousedown', removeListener);\r\n                    document.removeEventListener('wheel', listener);\r\n                    document.removeEventListener('wheel', removeListener);\r\n                    document.removeEventListener('touchstart', listener);\r\n                    document.removeEventListener('touchstart', removeListener);\r\n                }\r\n            }\r\n\r\n            document.addEventListener('mousedown', listener, {passive: true});\r\n            document.addEventListener('mousedown', removeListener, {passive: true});\r\n            document.addEventListener('wheel', listener, {passive: true});\r\n            document.addEventListener('wheel', removeListener, {passive: true});\r\n            document.addEventListener('touchstart', listener, {passive: true});\r\n            document.addEventListener('touchstart', removeListener, {passive: true}); \r\n        }\r\n    }, [panelState.context])\r\n    \r\n    return panelState.context ? \r\n        <MenuContainer x={x} y={y} elevation={8} id=\"contextMenu\">\r\n            <h2>Toggle Panels</h2>     \r\n            <ButtonGroup>\r\n                <Contextbutton \r\n                    title=\"Data and Map Variables\"\r\n                    active={panelState.variables}\r\n                    onClick={() => dispatch(setPanelState({variables:panelState.variables ? false : true}))}\r\n                    >\r\n                    {SVG.settings}\r\n                </Contextbutton>\r\n                <Contextbutton\r\n                    title=\"Report and Context\"\r\n                    active={panelState.info}\r\n                    onClick={() => dispatch(setPanelState({info:panelState.info ? false : true}))}\r\n                >\r\n                    {SVG.report}\r\n                </Contextbutton>\r\n                <Contextbutton\r\n                    title=\"Chart\"\r\n                    active={panelState.lineChart}\r\n                    onClick={() => dispatch(setPanelState({lineChart:panelState.lineChart ? false : true}))}\r\n                >\r\n                    {SVG.chart}\r\n                </Contextbutton>\r\n                <Contextbutton\r\n                    title=\"Atlas Manual and Wiki\"\r\n                    active={panelState.tutorial}\r\n                    onClick={() => dispatch(setPanelState({tutorial:panelState.tutorial ? false : true}))}\r\n                >\r\n                    {SVG.info}\r\n                </Contextbutton>\r\n            </ButtonGroup>\r\n            <h2>Map Selection Control</h2>  \r\n            <FormControlLabel\r\n                control={<Switch  />} //checked={state.checkedA} onChange={handleChange} name=\"checkedA\"\r\n                label=\"Select Multiple\"\r\n            /><br/>  \r\n            <ButtonGroup>\r\n                <Contextbutton>Reset</Contextbutton>\r\n                <Contextbutton>Box</Contextbutton>\r\n                <Contextbutton>Brush</Contextbutton>\r\n            </ButtonGroup>\r\n            <h2>Share</h2>   \r\n            <ButtonGroup>\r\n                <Contextbutton>{SVG.share}</Contextbutton>\r\n                <Contextbutton>{SVG.print}</Contextbutton>\r\n                <Contextbutton>{SVG.twitter}</Contextbutton>\r\n                <Contextbutton>{SVG.facebook}</Contextbutton>\r\n            </ButtonGroup>\r\n            <br/>\r\n            <ButtonGroup>\r\n                <Contextbutton>{SVG.embed} <p>Embed Code</p></Contextbutton>\r\n            </ButtonGroup>\r\n\r\n            <h2 className=\"noBottomMargin\">Save Settings</h2> \r\n            <p>Privacy Policy</p>  \r\n            <FormControlLabel\r\n                control={<Checkbox  />} //checked={state.checkedA} onChange={handleChange} name=\"checkedA\"\r\n                label=\"Map View\"\r\n            /><br/>\r\n            <FormControlLabel\r\n                control={<Checkbox  />} //checked={state.checkedA} onChange={handleChange} name=\"checkedA\"\r\n                label=\"Variable and Source\"\r\n            /><br/>\r\n            <FormControlLabel\r\n                control={<Checkbox  />} //checked={state.checkedA} onChange={handleChange} name=\"checkedA\"\r\n                label=\"Visualization Mode\"\r\n            /><br/>\r\n            <FormControlLabel\r\n                control={<Checkbox  />} //checked={state.checkedA} onChange={handleChange} name=\"checkedA\"\r\n                label=\"Selected Geographies\"\r\n            /><br/>\r\n        </MenuContainer>\r\n    :\r\n        <div></div>\r\n}\r\n\r\nexport default ContextMenu","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FormControl, FormGroup, FormControlLabel, Checkbox, Grid} from '@material-ui/core';\r\nimport { colors } from '../config';\r\nimport { Gutter } from '../styled_components';\r\nimport * as JSZip from 'jszip'\r\n\r\nconst CsvDownloaderContainer = styled.div`\r\n    padding:20px;\r\n    border:1px solid ${colors.darkgray};\r\n    background:${colors.lightblue}11;\r\n    span {\r\n        font-family: 'Lato', Arial, sans-serif;\r\n    }\r\n    .inset {\r\n        margin: 0 0 20px 20px;\r\n    }\r\n    a {\r\n        font-size: 16px;\r\n        font-weight: 700;\r\n        letter-spacing: 1.75px;\r\n        line-height:3;\r\n        text-align: center;\r\n        text-transform:uppercase;\r\n        background-color: ${colors.blue};\r\n        color: ${colors.white};\r\n        padding: 0 20px;\r\n        border-radius: .3rem;\r\n        text-decoration:none;\r\n        border:none;\r\n        margin:0 auto;\r\n        display:block;\r\n        cursor:pointer;\r\n        box-shadow:0px 0px 4px rgba(0,0,0,0);\r\n        transition:250ms all;\r\n        &:hover {\r\n            box-shadow:2px 2px 4px rgba(0,0,0,0.35);\r\n        }\r\n    }\r\n    *.MuiIconButton-colorSecondary.Mui-checked {\r\n        color:${colors.blue};\r\n    }\r\n    &.passive {\r\n        background:${colors.gray} url('${process.env.PUBLIC_URL}/assets/img/preloader.gif') ;\r\n        background-repeat:no-repeat;\r\n        background-position:center center;\r\n        opacity:0.5;\r\n        pointer-events:none;\r\n        button, *.MuiIconButton-colorSecondary.Mui-checked {\r\n            opacity:0.2;\r\n        }\r\n    }\r\n`\r\n\r\nconst checkboxSets = [\r\n    {\r\n        label: 'Cases Data',\r\n        name: 'cases',\r\n        subset: [\r\n            // {\r\n            //     label: 'County - 1point3acres',\r\n            //     name: 'covid_confirmed_1p3a'\r\n            // },\r\n            {\r\n                label: 'County - CDC',\r\n                name: 'covid_confirmed_cdc'\r\n            },\r\n            {\r\n                label: 'County - New York Times',\r\n                name: 'covid_confirmed_nyt'\r\n            },\r\n            {\r\n                label: 'County - USA Facts',\r\n                name: 'covid_confirmed_usafacts'\r\n            },\r\n            // {\r\n            //     label: 'State - 1point3acres',\r\n            //     name: 'covid_confirmed_1p3a_state'\r\n            // },\r\n            {\r\n                label: 'State - New York Times',\r\n                name: 'covid_confirmed_nyt_state'\r\n            },\r\n            {\r\n                label: 'State - USA Facts',\r\n                name: 'covid_confirmed_usafacts_state'\r\n        }]\r\n    },\r\n    {\r\n        label: 'Deaths Data',\r\n        name: 'deaths',\r\n        subset: [\r\n            // {\r\n            //     label: 'County - 1point3acres',\r\n            //     name: 'covid_deaths_1p3a'\r\n            // },\r\n            {\r\n                label: 'County - CDC',\r\n                name: 'covid_deaths_cdc'\r\n            },\r\n            {\r\n                label: 'County - NYT',\r\n                name: 'covid_deaths_nyt'\r\n            },\r\n            {\r\n                label: 'County - USA Facts',\r\n                name: 'covid_deaths_usafacts'\r\n            },\r\n            // {\r\n            //     label: 'State - 1point3acres',\r\n            //     name: 'covid_deaths_1p3a_state'\r\n            // },\r\n            {\r\n                label: 'State - New York Times',\r\n                name: 'covid_deaths_nyt_state'\r\n            },\r\n            {\r\n                label: 'State - USA Facts',\r\n                name: 'covid_deaths_usafacts_state'\r\n        }]\r\n    },\r\n    {\r\n        label: 'Vaccination Data',\r\n        name: 'vaccination',\r\n        subset: [\r\n            {\r\n                label: 'State - First Doses Administered - CDC',\r\n                name: 'vaccine_admin1_cdc'\r\n            },\r\n            {\r\n                label: 'State - Second Doses Administered - CDC',\r\n                name: 'vaccine_admin2_cdc'\r\n            },\r\n            {\r\n                label: 'State - Doses Distributed but not Administered - CDC',\r\n                name: 'vaccine_dist_cdc'\r\n            }]\r\n    },\r\n    {\r\n        label: 'Testing Data',\r\n        name: 'testing',\r\n        subset: [\r\n            {\r\n                label: 'County - Testing Counts - CDC',\r\n                name: 'covid_testing_cdc'\r\n            },\r\n            {\r\n                label: 'County - Testing Capacity Per 100k - CDC',\r\n                name: 'covid_tcap_cdc'\r\n            },\r\n            {\r\n                label: 'County - Testing Positivity - CDC',\r\n                name: 'covid_wk_pos_cdc'\r\n            },\r\n            {\r\n                label: 'County - Confirmed Cases per Testing - CDC',\r\n                name: 'covid_ccpt_cdc'\r\n            },\r\n            {\r\n                label: 'State - Testing Counts - HHS',\r\n                name: 'covid_testing_cdc_state'\r\n            },\r\n            {\r\n                label: 'State - Testing Capacity Per 100k - HHS',\r\n                name: 'covid_tcap_cdc_state'\r\n            },\r\n            {\r\n                label: 'State - Testing Positivity - HHS',\r\n                name: 'covid_wk_pos_cdc_state'\r\n            },\r\n            {\r\n                label: 'State - Confirmed Cases per Testing - HHS',\r\n                name: 'covid_ccpt_cdc_state'\r\n        }]\r\n    },\r\n    {\r\n        label: 'Hospital and Clinics Locations',\r\n        name: 'hospitals_clinics',\r\n        subset: [\r\n            {\r\n                label: 'Federally Qualified Health Clinics - HRSA',\r\n                name: 'context_fqhc_clinics_hrsa'\r\n            },\r\n            {\r\n                label: 'Hospital Locations - CovidCareMap',\r\n                name: 'context_hospitals_covidcaremap'\r\n            }]\r\n    },\r\n    {\r\n        label: 'Essential Workers',\r\n        name: 'essential_workers_parent',\r\n        subset: [\r\n            {\r\n                label: 'Essential Workers - ACS',\r\n                name: 'context_essential_workers_acs'\r\n            }]\r\n    },\r\n    // {\r\n    //     label: 'Health Context',\r\n    //     name: 'health_context',\r\n    //     subset: [\r\n    //         {\r\n    //             label: 'County - Health Context - County Health Rankings',\r\n    //             name: 'chr_health_context'\r\n    //         },\r\n    //         {\r\n    //             label: 'County - Health Factors - County Health Rankings',\r\n    //             name: 'chr_health_factors'\r\n    //         },\r\n    //         {\r\n    //             label: 'County - Life Expectancy - County Health Rankings',\r\n    //             name: 'chr_life'\r\n    //         },\r\n    //         {\r\n    //             label: 'State - Health Context - County Health Rankings',\r\n    //             name: 'chr_health_context_state'\r\n    //         },\r\n    //         {\r\n    //             label: 'State - Health Factors - County Health Rankings',\r\n    //             name: 'chr_health_factors_state'\r\n    //         },\r\n    //         {\r\n    //             label: 'State - Life Expectancy - County Health Rankings',\r\n    //             name: 'chr_life_state'\r\n    //         }]\r\n    // },\r\n\r\n]   \r\n\r\nconst readme = `# readme\r\n\r\n    This archive contains folders for data CSVs (data) and detailed documentation (docs). The US Covid Atlas is an open source project licensed under GPL 3. \r\n\r\n    The data sources included are licensed for open source, non-commercial projects, ***but may have restrictions for commercial uses.*** \r\n\r\n    Please consult the data sources listed in the data documentation before using this data in commercial publications.\r\n`\r\n\r\n\r\nconst CsvDownloader = () => {\r\n    const [checkboxes, setCheckboxes] = useState({\r\n        cases:false,        \r\n            covid_confirmed_1p3a: false,\r\n            covid_confirmed_1p3a_state: false,\r\n            covid_confirmed_cdc: false,\r\n            covid_confirmed_cdc_state: false,\r\n            covid_confirmed_nyt: false,\r\n            covid_confirmed_nyt_state: false,\r\n            covid_confirmed_usafacts: false,\r\n            covid_confirmed_usafacts_state: false,\r\n        deaths:false,\r\n            covid_deaths_1p3a: false,\r\n            covid_deaths_1p3a_state: false,\r\n            covid_deaths_cdc: false,\r\n            covid_deaths_cdc_state: false,\r\n            covid_deaths_nyt: false,\r\n            covid_deaths_nyt_state: false,\r\n            covid_deaths_usafacts: false,\r\n            covid_deaths_usafacts_state: false,\r\n        berkeley_predictions: false,\r\n        health_context: false,\r\n            chr_health_context: false,\r\n            chr_health_context_state: false,\r\n            chr_health_factors: false,\r\n            chr_health_factors_state: false,\r\n            chr_life: false,\r\n            chr_life_state: false,\r\n        testing:false,\r\n            covid_tcap_cdc: false,\r\n            covid_tcap_cdc_state: false,\r\n            covid_testing_cdc: false,\r\n            covid_testing_cdc_state: false,\r\n            covid_wk_pos_cdc: false,\r\n            covid_wk_pos_cdc_state: false,\r\n            covid_ccpt_cdc: false,\r\n            covid_ccpt_cdc_state: false,\r\n        vaccination:false,\r\n            vaccine_admin1_cdc: false,\r\n            vaccine_admin2_cdc: false,\r\n            vaccine_dist_cdc: false,\r\n        hospitals_clinics:false,\r\n            context_fqhc_clinics_hrsa: false,\r\n            context_hospitals_covidcaremap: false,\r\n        essential_workers_parent:false,\r\n            context_essential_workers_acs: false,\r\n      });\r\n\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n    const handleChange = (event) => {\r\n        setCheckboxes(prev => ({ ...prev, [event.target.name]: event.target.checked }));\r\n    };\r\n    const handleSetChange = (index) => {\r\n        setCheckboxes(prev => {\r\n            const onOrOff = prev[checkboxSets[index].name] ? false : true;\r\n\r\n            let newSet = {\r\n                ...prev,\r\n                [checkboxSets[index].name]: onOrOff\r\n            }\r\n            for (let i=0;i<checkboxSets[index].subset.length;i++){\r\n                newSet[checkboxSets[index].subset[i].name] = onOrOff\r\n            }\r\n            return newSet\r\n        });\r\n    }\r\n    \r\n    async function GetFiles(fileList){\r\n        setIsDownloading(true)\r\n        // init zip and folders\r\n        // get links from github\r\n        const dataLinks = await fetch('https://api.github.com/repos/geodacenter/covid/contents/public/csv')\r\n            .then(r=>r.json())\r\n            .then(items => \r\n                items.filter(d => fileList[d.name.split('.csv')[0]])\r\n                    .map(d => ({'name':d.name, 'url': d.download_url}))\r\n                    .filter(x => x !== undefined)\r\n            )\r\n        const docsLinks = await fetch('https://api.github.com/repos/geodacenter/covid/contents/data-docs').then(r=>r.json()).then(items => items.map(d => ({'name':d.name, 'url': d.download_url})))\r\n        \r\n        // declare promises\r\n        const dataPromises = await dataLinks.map(link => fetch(link.url).then(r=>r.blob()))\r\n        const docsPromises = await docsLinks.map(link => fetch(link.url).then(r=>r.blob()))\r\n        \r\n        // fetch data and docs\r\n        const data = await Promise.all(dataPromises).then(values => values.map((v,i) => ({'name':`${dataLinks[i].name.slice(0,-4)}-${new Date().toISOString().slice(0,10)}.csv`, 'data':v})))\r\n        const docs = await Promise.all(docsPromises).then(values => values.map((v,i) => ({'name':docsLinks[i].name, 'data':v})))\r\n        const license = await fetch('https://raw.githubusercontent.com/GeoDaCenter/covid/master/LICENSE').then(r => r.blob())\r\n        \r\n        var zip = new JSZip();\r\n        zip.file('LICENSE.txt', license)\r\n        zip.file('readme.md', readme)\r\n        var dataFolder = zip.folder(\"data\");\r\n        var docsFolder = zip.folder(\"docs\");\r\n        data.forEach(d => dataFolder.file(d.name, d.data))\r\n        docs.forEach(d => docsFolder.file(d.name, d.data))\r\n        import('file-saver').then(fileSaver  => {\r\n            zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n                // see FileSaver.js\r\n                fileSaver.saveAs(content, `us_covid_atlas_data_${new Date().toISOString().slice(0,10)}.zip`);\r\n            });\r\n        })\r\n        setIsDownloading(false)\r\n    }\r\n\r\n    return (\r\n        <CsvDownloaderContainer className={isDownloading ? 'passive' : ''}>\r\n            <h2>Bulk Data Download</h2>\r\n            <Gutter h={20}/>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={8}>\r\n                    <p>This menu allows you to download bulk CSVs of the data available on the Atlas. Select your datasets of interest with the checkboxes below and\r\n                        then click download data to receive a ZIP archive with your CSV files and data documentation. Please note that the full dataset is currently\r\n                        over 70MB, and may be slow to load.     \r\n                    </p>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <a onClick={() => GetFiles(checkboxes)} ping=\"https://theuscovidatlas.org/trackdownloads.html\">Download Data</a>\r\n                </Grid>\r\n            </Grid>\r\n            <Gutter h={20}/>\r\n            <Grid container spacing={5}>\r\n            {checkboxSets.map((checkboxSet, i) => \r\n                    <Grid item xs={12} md={4}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={checkboxes[checkboxSet.name]} onChange={() => handleSetChange(i)} name={checkboxSet.name} />}\r\n                                label={checkboxSet.label}\r\n                            />\r\n                        </FormControl>\r\n                        <br/>\r\n                        <FormControl component=\"fieldset\" className=\"inset\">\r\n                            <FormGroup>\r\n                            {checkboxSet.subset.map(checkboxItem => \r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={checkboxes[checkboxItem.name]} onChange={handleChange} name={checkboxItem.name} />}\r\n                                    label={checkboxItem.label}\r\n                                />\r\n                            )}\r\n                            </FormGroup>\r\n                        </FormControl>\r\n                </Grid>\r\n            )}\r\n            </Grid>\r\n        </CsvDownloaderContainer>\r\n    )\r\n}\r\n\r\nexport default CsvDownloader","import React, { useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport * as gfm from 'remark-gfm';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { colors } from '../config';\r\n\r\nconst Container = styled.div`\r\n    h3 {\r\n        margin:20px 0 5px 0;\r\n        font-family: 'Lato', sans-serif;\r\n        font-style:normal;\r\n        font-weight:bold;\r\n        font-size:16px;\r\n    }\r\n    p {\r\n        margin-bottom:5px;\r\n    }\r\n    table {\r\n        width:100%;\r\n        margin: 0 0 20px 0;\r\n        padding:0;\r\n        \r\n        thead tr th:nth-of-type(1),\r\n        tbody tr td:nth-of-type(1),\r\n        thead tr th:nth-of-type(2),\r\n        tbody tr td:nth-of-type(2) {\r\n            width:25%;\r\n        }\r\n        thead tr th:nth-of-type(3),\r\n        tbody tr td:nth-of-type(3) {\r\n            width:50%;\r\n        }\r\n        // th,td {\r\n        //     border:1px solid black;\r\n        // }\r\n        thead tr {\r\n            background: ${colors.lightblue}88;\r\n        }\r\n        tbody tr:nth-of-type(even) {\r\n            background:${colors.lightgray}55;\r\n        }\r\n    }\r\n`\r\n\r\nconst Accordion = styled(MuiAccordion)`\r\n`\r\n\r\nconst AccordionSummary = styled(MuiAccordionSummary)`\r\n`\r\n\r\nconst AccordionDetails = styled(MuiAccordionDetails)`\r\n`\r\n\r\nconst AccordionHeader = styled(Typography)`\r\n    span.tag {\r\n        padding:4px 8px;\r\n        margin:5px;\r\n        border-radius:12px;\r\n        font-size:65%;\r\n        background:${colors.lightgray};\r\n        text-transform:uppercase;\r\n        font-weight:bold;\r\n    }\r\n`\r\n\r\nconst dataList = [\r\n    {\r\n        'header': 'USA Facts',\r\n        'tags':['Cases','Deaths','County','State'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/usafacts.md'\r\n    },\r\n    {\r\n        'header': 'New York Times',\r\n        'tags':['Cases','Deaths','County','State'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/new-york-times.md'\r\n    },\r\n    {\r\n        'header': '1 Point 3 Acres',\r\n        'tags':['Cases','Deaths','County','State'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/_1p3a.md'\r\n    },\r\n    {\r\n        'header': 'Center for Disease Control',\r\n        'tags':['Testing','Vaccination','County'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/center-for-disease-control.md'\r\n    },\r\n    {\r\n        'header': 'Health and Human Services',\r\n        'tags':['Testing','State'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/health-and-human-services.md'\r\n    },\r\n    {\r\n        'header': 'County Health Rankings and Roadmaps',\r\n        'tags':['Context'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/county-health-rankings.md'\r\n    },\r\n    {\r\n        'header': 'Yu Group at UC Berkeley',\r\n        'tags':['Forecasting'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/yu-group.md'\r\n    },\r\n    {\r\n        'header': 'Safegraph Social Distancing',\r\n        'tags':['Mobility'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/safegraph_sd.md'\r\n    },\r\n    {\r\n        'header': 'American Community Survey',\r\n        'tags':['Context', 'Essential Workers', 'Population'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/american-community-survey.md'\r\n    },\r\n    {\r\n        'header': 'Hospitals and Clinics',\r\n        'tags':['Context', 'Point Data'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/hospitals-and-clinics.md'\r\n    },\r\n    {\r\n        'header': 'Geographies',\r\n        'tags':['Boundaries', 'Geometry', 'County', 'State'],\r\n        'content': 'https://raw.githubusercontent.com/GeoDaCenter/covid/master/data-docs/geographies.md'\r\n    }\r\n\r\n]  \r\n\r\nconst DataDetails = () => {\r\n    const [expanded, setExpanded] = useState('');\r\n    const [dataDescriptions, setDataDescriptions] = useState([])\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    async function getMarkdownFiles(dataList){\r\n        const markdownFilePromises = await dataList.map(data => fetch(data.content).then(r=>r.text()))\r\n        Promise.all(markdownFilePromises).then(markdownFiles => {\r\n            setDataDescriptions(markdownFiles)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMarkdownFiles(dataList)\r\n    },[])\r\n    \r\n    return (\r\n        <Container>\r\n            {dataList.map((dataset, index) => \r\n                    <Accordion square expanded={expanded === `panel${index}`} onChange={handleChange(`panel${index}`)}>\r\n                        <AccordionSummary aria-controls={`panel${index}d-content`} id={`panel${index}d-header`}>\r\n                        <AccordionHeader>\r\n                            {dataset.header}\r\n                            {dataset.tags.map(tag => <span className=\"tag\">{tag}</span>)}\r\n                        </AccordionHeader>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <div>\r\n                                <ReactMarkdown plugins={[gfm]}>{dataDescriptions[index]}</ReactMarkdown>\r\n                            </div>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DataDetails","// Dock for panel buttons \r\n// Current usage: Line Chart and Wiki/Manual Modal\r\n\r\n// Import main libraries\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// Import helper libraries\r\nimport styled from 'styled-components';\r\n\r\n// Import config and actions\r\nimport { chart, info } from '../config/svg';\r\nimport { colors } from '../config';\r\nimport { setPanelState } from '../actions';\r\n\r\n\r\n// Container\r\nconst DockContainer = styled.div`\r\n    position:absolute;\r\n    left:calc(100% + 2px);\r\n    top:-2px;\r\n    display:flex;\r\n    @media (max-width:1024px) {\r\n        position:fixed;\r\n        display:block;\r\n        left:0px;\r\n        top:210px;\r\n    }\r\n    @media (max-width:600px) {\r\n        top:260px;\r\n    }\r\n`\r\n\r\n// Buttons styling\r\nconst DockButton = styled.button`\r\n    background:${props => props.isActive ? colors.lightgray : colors.gray};\r\n    border:none;\r\n    outline:none;\r\n    padding:10px;\r\n    height:40px;\r\n    box-sizing:border-box;\r\n    font-family:'Lato', sans-serif;\r\n    font-weight:bold;\r\n    margin:2px 2px 0 0;\r\n    box-shadow: 2px 0px 5px rgba(0,0,0,0.7);\r\n    cursor:pointer;\r\n    border-radius: 5px;\r\n    transition:150ms transform, 150ms background;\r\n    font-size:115%;\r\n    display:inline-block;\r\n    svg {\r\n        width:20px;\r\n        height:20px;\r\n        fill:${props => props.isActive ? colors.darkgray : colors.white};\r\n    }\r\n    &:hover {\r\n        background:${props => props.isActive ? colors.white : colors.darkgray};\r\n        svg {\r\n            fill:${props => props.isActive ? colors.darkgray : colors.lightgray};\r\n        }\r\n    }\r\n    @media (max-width:1024px) {\r\n        height:40px;\r\n        width:40px;\r\n        margin-top:10px;\r\n        display:block;\r\n        border-radius:0;\r\n    }\r\n    \r\n    @media (max-width:600px) {\r\n        height:30px;\r\n        width:30px;\r\n        padding:0;\r\n        svg {\r\n            width:20px;\r\n            height:20px;\r\n        }\r\n    }\r\n`\r\n\r\n// Dock component\r\nconst Dock = () => {\r\n    // Redux accessor and dispatch\r\n    const panelState = useSelector(state => state.panelState);\r\n    const dispatch = useDispatch();\r\n\r\n    // Handle open and close\r\n    const handlePanelButton = (panel) => dispatch(setPanelState({[panel]: panelState[panel] ? false : true}))\r\n    \r\n    return (\r\n        <DockContainer>\r\n            <DockButton\r\n                title=\"Show Line Chart\"\r\n                id=\"showLineChart\"\r\n                isActive={panelState.lineChart}\r\n                onClick={() => handlePanelButton('lineChart')}\r\n            >   \r\n                {chart}\r\n            </DockButton>\r\n            <DockButton\r\n                title=\"Show Tutorial\"\r\n                id=\"showTutorial\"\r\n                isActive={panelState.tutorial}\r\n                onClick={() => handlePanelButton('tutorial')}\r\n            >\r\n                {info}\r\n            </DockButton>\r\n        </DockContainer>\r\n    )\r\n} \r\n\r\nexport default Dock","// This components (often wrapping Scaleable()) houses a move-able panel\r\n\r\n// Import libraries\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components'\r\n\r\n// Import config and actions\r\nimport { colors } from '../config';\r\nimport { setPanelState } from '../actions';\r\n\r\n// Styles - Container\r\nconst DragContainer = styled.div`\r\n    position:fixed;\r\n    overflow:hidden;\r\n    background:${colors.gray};\r\n    padding:20px 20px 0 20px;\r\n    box-sizing: border-box;\r\n    box-shadow: 0px 0px 5px rgba(0,0,0,0.7);\r\n    border-radius: 0.5vh;\r\n    &.collapsed {\r\n        display:none;\r\n    };\r\n`\r\n\r\n// Drag button (crosshair)\r\nconst DragButton = styled.button`\r\n    position:absolute;\r\n    left:5px;\r\n    top:5px;\r\n    background:none;\r\n    outline:none;\r\n    border:none;\r\n    cursor:move;\r\n    svg {\r\n        fill:white;\r\n        width:20px;\r\n        height:20px;\r\n    }\r\n`\r\n\r\n// Hide panel // collapse button\r\nconst CollapseButton = styled.button`\r\n    position: absolute;\r\n    top: 3px;\r\n    right: 5px;\r\n    font-size: 200%;\r\n    cursor: pointer;\r\n    padding:0;\r\n    background:none;\r\n    outline:none;\r\n    border:none;\r\n    color:white;\r\n    p {\r\n        font-size:50%;\r\n        display:inline;\r\n        font-family:'Montserrat', sans-serif;\r\n        line-height:1;\r\n    }\r\n    svg {\r\n        fill:white;\r\n        width:40px;\r\n        height:30px;\r\n    }\r\n`\r\n\r\nconst Draggable = (props) => {\r\n    // Redux Dispatch and selector\r\n    const dispatch = useDispatch();\r\n    const open = useSelector(state => state.panelState[props.title]);\r\n\r\n    // Local state, dragging \r\n    const [X, setX] = useState(props.defaultX);\r\n    const [Y, setY] = useState(props.defaultY);\r\n    const [isDragging, setIsDragging] = useState(false)\r\n\r\n    // Listener and touch listeners for moving\r\n    // On touch/mouseup, the listeners remove themselves\r\n    const listener = (e) => {\r\n        setX(prevWidth => prevWidth+e.movementX)\r\n        setY(prevHeight => prevHeight+e.movementY)\r\n    }\r\n\r\n    const touchListener = (e) => {\r\n        setX(e?.targetTouches[0]?.clientX-15)\r\n        setY(e?.targetTouches[0]?.clientY-15)\r\n    }\r\n\r\n    const removeListener = () => {\r\n        window.removeEventListener('mousemove', listener)\r\n        window.removeEventListener('mouseup', removeListener)\r\n        setIsDragging(false)\r\n    }\r\n\r\n    const removeTouchListener = () => {\r\n        window.removeEventListener('touchmove', touchListener);\r\n        window.removeEventListener('touchend', removeTouchListener);\r\n    }\r\n    \r\n    const handleDown = () => {\r\n        window.addEventListener('mousemove', listener)\r\n        window.addEventListener('mouseup', removeListener)\r\n        setIsDragging(true)\r\n    }\r\n\r\n    const handleTouch = () => {\r\n        window.addEventListener('touchmove', touchListener)\r\n        window.addEventListener('touchend', removeTouchListener)\r\n    }\r\n\r\n    // End Listeners\r\n\r\n    // Hide Panel\r\n    const handleCollapse = () => dispatch(setPanelState({[props.title]: false}))\r\n\r\n    // Props change when window changes, updates local state here\r\n    useEffect(() => {\r\n        setX(props.defaultX);\r\n        setY(props.defaultY);\r\n    },[open, props.defaultX, props.defaultY])\r\n\r\n    // Component return\r\n    return (\r\n        <DragContainer style={{left:`${X}px`, top: `${Y}px`, zIndex: props.z || 1}} className={open ? '' : 'collapsed'} isDragging={isDragging}>\r\n            {props.content}\r\n            <DragButton \r\n                id=\"resize\"\r\n                onMouseDown={handleDown}\r\n                onTouchStart={handleTouch}\r\n                style={{zIndex:10}}\r\n            >\r\n                <svg viewBox=\"0 0 64 64\" x=\"0px\" y=\"0px\"><g><path d=\"M53.39,32.57a1.52,1.52,0,0,0-.33-1.63l-5.84-5.85a1.51,1.51,0,0,0-2.13,2.13l3.29,3.28H33.5V15.62l3.28,3.29a1.51,1.51,0,0,0,2.13-2.13l-5.85-5.84a1.5,1.5,0,0,0-2.12,0l-5.85,5.84a1.51,1.51,0,0,0,2.13,2.13l3.28-3.29V30.5H15.62l3.29-3.28a1.51,1.51,0,0,0-2.13-2.13l-5.84,5.85a1.5,1.5,0,0,0,0,2.12l5.84,5.85a1.51,1.51,0,0,0,2.13-2.13L15.62,33.5H30.5V48.38l-3.28-3.29a1.51,1.51,0,0,0-2.13,2.13l5.85,5.84a1.5,1.5,0,0,0,2.12,0l5.85-5.84a1.51,1.51,0,0,0-2.13-2.13L33.5,48.38V33.5H48.38l-3.29,3.28a1.51,1.51,0,0,0,2.13,2.13l5.84-5.85A1.51,1.51,0,0,0,53.39,32.57Z\"></path></g></svg>\r\n            </DragButton>\r\n            <CollapseButton onClick={handleCollapse}>×</CollapseButton>\r\n        </DragContainer>\r\n    )\r\n}\r\n\r\nexport default Draggable;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { colors } from '../config';\r\n\r\n\r\nconst FooterContainer = styled.footer`\r\n    width:100%;\r\n    background: ${colors.teal};\r\n    p {\r\n        color:${colors.lightgray};\r\n        font-size:1rem;\r\n    }\r\n    h6 {\r\n        margin-top: 0;\r\n        margin-bottom: 12px;\r\n        font-size:1rem;\r\n        font-weight: 600;\r\n        font-stretch: normal;\r\n        font-style: normal;\r\n        line-height: normal;\r\n        letter-spacing: normal;\r\n        color: ${colors.white};\r\n    }\r\n    a {\r\n        text-decoration:none;\r\n        color:${colors.skyblue};\r\n        opacity:0.8;\r\n        &:hover {\r\n            opacity:1;\r\n        }\r\n    }   \r\n    img {\r\n        margin-bottom:10px;\r\n        @media (max-width: 960px) {\r\n            max-width:50%;\r\n            display:block;\r\n            margin:40px auto;\r\n        }\r\n    }\r\n    hr.footerHr {\r\n        margin:20px 0;\r\n    }\r\n`\r\nconst FooterContent = styled.div`\r\n    width:100%;\r\n    max-width:1140px;\r\n    margin:0 auto;\r\n`\r\n\r\nconst LinkLists = styled(Grid)`\r\n    width:100%;\r\n    padding:50px;\r\n    ul {\r\n        list-style:none;\r\n        li {\r\n            line-height:1.5;\r\n        }\r\n    }\r\n    p.copyright {\r\n        font-size:.9rem;\r\n        color:${colors.lightgray};\r\n    }\r\n    @media (max-width: 960px) {\r\n        text-align:center;\r\n    }\r\n    \r\n`\r\n\r\nconst SignupForm = styled.div`\r\n    max-width:800px;\r\n    margin:0 auto;\r\n    padding:40px;\r\n    text-align:center;\r\n    h1.signup {\r\n        width:100%;\r\n        font-size:2rem;\r\n    }\r\n    h2 {\r\n        color: ${colors.lightgray};\r\n        font-size:1.25rem;\r\n        font-weight:200;\r\n    }\r\n    form {\r\n        max-width:600px;\r\n        margin:0 auto;\r\n    }\r\n    .MuiOutlinedInput-root {\r\n        display:inline-block;\r\n        background:white;\r\n        width:100%;\r\n    }\r\n    .SubmitEmailBox {\r\n        width:100%;\r\n        height:100%;\r\n        display:inline-block;\r\n        background-color: ${colors.orange};\r\n        color: #0d0d0d;\r\n        border:none;\r\n        outline:none;\r\n        border-radius:5px;\r\n        font-weight:bold;\r\n        font-family:'Lato', sans-serif;\r\n        cursor:pointer;\r\n    }\r\n    .sr-only {\r\n        visibility: hidden;\r\n    }\r\n`\r\n\r\nconst Footer = ( props ) => {\r\n    return (\r\n        <FooterContainer>\r\n            <FooterContent>\r\n                {props.signUp && \r\n                    <SignupForm>\r\n                        <h1 className=\"signup\">Sign up for the Newsletter</h1>                    \r\n                        <h2>We'll keep you up to date with new updates, features, and insights on the COVID-19 pandemic. Follow the US COVID Atlas team on Medium too.</h2>\r\n            \r\n                        <form action=\"https://github.us10.list-manage.com/subscribe/post?u=5ed730d26727290870ec65153&amp;id=74f209d5ed\" method=\"post\" id=\"mc-embedded-subscribe-form\" name=\"mc-embedded-subscribe-form\" class=\"validate form-inline vertical-center\" target=\"_blank\" novalidate=\"\">\r\n                            <label class=\"sr-only\" for=\"inlineFormInputGroupUsername2\">Email</label>                            \r\n                            <Grid container spacing={1}>\r\n                                                                \r\n                                {/* <input type=\"email\" class=\"form-control EnterEmailBox\" name=\"b_5ed730d26727290870ec65153_74f209d5ed\" placeholder=\"Enter email address\" /> */}\r\n                                <Grid item xs={8} sm={10}>\r\n                                    <TextField id=\"outlined-basic\" variant=\"outlined\" type=\"email\" class=\"form-control EnterEmailBox\" name=\"b_5ed730d26727290870ec65153_74f209d5ed\" placeholder=\"Enter email address\"/>\r\n                                </Grid>\r\n                                <Grid item xs={4} sm={2}>\r\n                                    <input type=\"submit\" value=\"SUBSCRIBE\" name=\"subscribe\" id=\"mc-embedded-subscribe\" class=\"btn btn-lg SubmitEmailBox\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </SignupForm>\r\n                    }\r\n                    \r\n                {props.signUp && <hr className=\"footerHr\" />}\r\n                <LinkLists container spacing={1}>\r\n                    <Grid item xs={6} md={3}>\r\n                        <p>\r\n                            <h6>Explore</h6>\r\n                            <ul>\r\n                                <li><NavLink to=\"/map\">The Atlas</NavLink></li>\r\n                                <li><NavLink to=\"/data\">Data</NavLink></li>\r\n                                <li><NavLink to=\"/methods\">Methods</NavLink></li>\r\n                                <li><NavLink to=\"/faq\">Help + Faq</NavLink></li>\r\n                            </ul>\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={4}>\r\n                        <p>\r\n                            <h6>About</h6>\r\n                            <ul>\r\n                                <li><NavLink to=\"/about\">Our Team</NavLink></li>\r\n                                <li><NavLink to=\"/contact\">Contact Us</NavLink></li>\r\n                                <li><a href=\"https://geodacenter.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">GeoDa Open Software</a></li>\r\n                                <li><a href=\"https://covidatlas.healthcarecommunities.org\" target=\"_blank\" rel=\"noopener noreferrer\">Learning Community</a></li>\r\n                                <li><NavLink to=\"/conduct\">Code of Conduct</NavLink></li>\r\n                            </ul>\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={5}>\r\n                        <img src={`${process.env.PUBLIC_URL}/img/csds-university-wordmark-white.png`} width=\"100%;\" alt=\"Center for Spatial Data Science logo\" />\r\n                        <p className=\"copyright\">\r\n                            Brought to you by the Center for Spatial Data Science <a href=\"https://spatial.uchicago.edu/\" target=\"_blank\" rel=\"noopener noreferrer\">@UChicago</a>. Powered by <a href=\"https://geodacenter.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">GeoDa</a>. Funded in part by the <a href=\"https://www.rwjf.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Robert Wood Johnson Foundation</a>.\r\n                        </p>\r\n                        <br/>\r\n                        <p className=\"copyright\">\r\n                            <a href=\"http://netlify.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Powered by Netlify</a>\r\n                        </p>\r\n                    </Grid>\r\n                </LinkLists>\r\n            </FooterContent>\r\n        </FooterContainer>\r\n    )\r\n}\r\n\r\nexport default Footer","// general imports, state\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// deck GL and helper function import\r\nimport DeckGL from '@deck.gl/react';\r\nimport { PolygonLayer } from '@deck.gl/layers';\r\nimport { fitBounds } from '@math.gl/web-mercator';\r\n\r\nimport { getCSV } from '../utils';\r\n\r\nconst MapContainer = styled.div`\r\n    width:600px;\r\n    height:400px;\r\n    position:relative;\r\n    pointer-events:none;\r\n    cursor:default;\r\n    p.caption {\r\n        position:absolute;\r\n        bottom:0;\r\n        right:0;\r\n        color:white;\r\n        text-align:right;\r\n        font-size:0.8rem;\r\n        span {\r\n            font-weight:bold;\r\n        }\r\n    }\r\n    @media (max-width:960px){\r\n        display:none;\r\n    }\r\n\r\n`\r\n// US bounds\r\nconst bounds = fitBounds({\r\n    width: 600,\r\n    height: 400,\r\n    bounds: [[-130.14, 53.96],[-67.12, 19]]\r\n})\r\n\r\nconst colorscale = [\r\n    [255,255,204,200],\r\n    [255,237,160,200],\r\n    [254,217,118,200],\r\n    [254,178,76,200],\r\n    [253,141,60,200],\r\n    [252,78,42,200],\r\n    [227,26,28,200],\r\n    [177,0,38,200],\r\n]\r\n\r\nconst getColor = (val, bins, colors) => {\r\n    for (let i = 0; i < bins.length; i++) {\r\n        if (val < bins[i]) return colors[i]\r\n    }\r\n    return colors[7]\r\n}\r\n\r\nexport default function HeroMap(){\r\n\r\n    const [geoData, setGeoData] = useState([]);\r\n    const [dateList, setDateList] = useState([]);\r\n    const [dataBins, setDataBins] = useState([]);\r\n    const [currDate, setCurrDate] = useState({\r\n        current:'2020-01-30',\r\n        previous:'2020-01-23'\r\n    });\r\n    const [intervalFn, setIntervalFn] = useState(null);\r\n\r\n\r\n    // map view location\r\n    const fixedViewstate = {\r\n        latitude: bounds.latitude,\r\n        longitude: bounds.longitude,\r\n        zoom: bounds.zoom,\r\n        bearing:45,\r\n        pitch:45\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getGeoData = async () => {\r\n            const data = await fetch(`${process.env.PUBLIC_URL}/geojson/county_usfacts.geojson`)\r\n                .then(r => r.json())\r\n                .then(r => {\r\n                    let returnArray = [];\r\n\r\n                    for ( let i = 0; i < r.features.length; i++ ) {\r\n                        for ( let n = 0; n < r.features[i].geometry.coordinates.length; n++) {\r\n                            returnArray.push({\r\n                                geom: r.features[i].geometry.coordinates[n],\r\n                                GEOID: r.features[i].properties.GEOID,\r\n                                population: r.features[i].properties.population\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    return returnArray\r\n                })\r\n            return data\r\n        }\r\n\r\n        const formatData = async (data) => {\r\n            let returnObj = {}\r\n\r\n            for (let i = 0; i < data.length; i++) {\r\n                returnObj[data[i].countyFIPS] = data[i]\r\n            }\r\n\r\n            return returnObj;\r\n        }\r\n\r\n        const getDates = async (data) => {\r\n\r\n            const keys = Object.keys(data);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (!Number.isNaN(Date.parse(keys[i]))) {\r\n                    return(keys.slice(i,))\r\n                }\r\n            }\r\n        }\r\n\r\n        const getBins = async (data, dates, geoData) => {\r\n            const finalDate = dates.slice(-1,)[0];\r\n            const weekBefore = dates.slice(-7,)[0];\r\n            let populations = {};\r\n            const values = Object.values(data)\r\n\r\n            for (let i=0; i<geoData.length; i++){\r\n                populations[geoData[i].GEOID] = geoData[i].population;\r\n            };\r\n\r\n            const valArray = values.map(d => (((d[finalDate]-d[weekBefore])/7)/populations[d.countyFIPS])*100000);\r\n\r\n            valArray.sort(function(a, b) {\r\n                return a - b;\r\n            });\r\n\r\n            let quantileArray = []\r\n\r\n            for (let i=0; i<8; i++){\r\n                quantileArray.push(\r\n                    valArray[\r\n                        Math.round(\r\n                            (valArray.length/100)*(12.5*i)\r\n                        )\r\n                    ]\r\n                )\r\n            }\r\n            \r\n            return quantileArray;\r\n        };\r\n\r\n        const joinData = async (geoData, data) => {\r\n            for (let i=0; i<geoData.length; i++) {\r\n                geoData[i]['data'] = data[geoData[i].GEOID]\r\n            }\r\n            return geoData\r\n        }\r\n\r\n        const handleInitialDataLoad = async () => {\r\n            const data = await getCSV(`${process.env.PUBLIC_URL}/csv/covid_confirmed_usafacts.csv`);\r\n            const dates = await getDates(data[0]);\r\n            const geoData = await getGeoData();\r\n            const formattedData = await formatData(data);\r\n            const bins = await getBins(formattedData, dates, geoData);\r\n            const joinedData = await joinData(geoData, formattedData);\r\n            \r\n            setDataBins(bins);\r\n            setGeoData(joinedData);\r\n            setDateList(dates);\r\n        }\r\n\r\n        handleInitialDataLoad()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        clearInterval(intervalFn);\r\n        setIntervalFn(setInterval(() => setCurrDate(prev => {\r\n            if (dateList.indexOf(prev.current)+1 < dateList.length) {\r\n                return {\r\n                    current: dateList[(dateList.indexOf(prev.current)+1)],\r\n                    previous: dateList[(dateList.indexOf(prev.current)-6)%dateList.length]\r\n                }\r\n            } else {\r\n                return {\r\n                    current: '2020-01-30',\r\n                    previous: '2020-01-23'\r\n                }\r\n            }\r\n        }\r\n        ), 125));\r\n    }, [dateList])\r\n\r\n    const layer = new PolygonLayer({\r\n        id: 'home choropleth',\r\n        data: geoData,\r\n        getFillColor: d => getColor((((d.data[currDate.current]-d.data[currDate.previous])/7)/d.population)*100000, dataBins, colorscale),\r\n        getPolygon: d => d.geom,\r\n        getElevation: d => (((((d.data[currDate.current]-d.data[currDate.previous])/7)/d.population)*100000)/dataBins[7])*25000,\r\n        pickable: false,\r\n        stroked: false,\r\n        filled: true,\r\n        wireframe: true,\r\n        extruded: true,\r\n        opacity: 0.8,\r\n        material:false, \r\n        updateTriggers: {\r\n            getFillColor: currDate,\r\n            getElevation: currDate\r\n        }  \r\n    })\r\n\r\n    return (\r\n        <MapContainer>\r\n            <DeckGL\r\n                layers={layer}\r\n                initialViewState={fixedViewstate}\r\n                controller={false}\r\n            />\r\n            <p className=\"caption\">\r\n                <span>{currDate.current}</span>\r\n                <br/> \r\n                7-Day Average of New Cases per Capita by County (Source: USA Facts) \r\n            </p>\r\n        </MapContainer>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport styled from 'styled-components';\r\n\r\nimport { colors } from '../config';\r\nimport { Gutter } from '../styled_components';\r\nimport Tooltip from './tooltip';\r\n\r\nconst BottomPanel = styled.div`\r\n    position: fixed;\r\n    bottom:0;\r\n    left:50%;\r\n    background:${colors.ivory};\r\n    transform:translateX(-50%);\r\n    width:38vw;\r\n    max-width: 500px;\r\n    box-sizing: border-box;\r\n    padding:0 0 5px 0;\r\n    margin:0;\r\n    box-shadow: 0px 0px 5px ${colors.gray}55;\r\n    border-radius:0.5vh 0.5vh 0 0;\r\n    transition:250ms all;\r\n    color:${colors.black};\r\n    hr {\r\n        opacity:0.5;\r\n    }\r\n    @media (max-width:1024px){\r\n        width:50vw;\r\n        div {\r\n            padding-bottom:5px;\r\n        }\r\n        #binModeSwitch {\r\n            position:absolute !important;\r\n            right: 10px !important;\r\n            top: 10px !important;\r\n        }\r\n        #dateRangeSelector {\r\n            position:absolute !important;\r\n            left: 66% !important;\r\n            transform:translateX(-50%) !important;\r\n            top: 10px !important;\r\n        }\r\n    }\r\n\r\n    @media (max-width:768px){\r\n\r\n        width:100%;\r\n        max-width:100%;\r\n        padding:0;\r\n        left:0;\r\n        transform:none;\r\n    }\r\n    @media (max-width:750px) and (orientation: landscape) {\r\n        // bottom all the way down for landscape phone\r\n    }\r\n    user-select:none;\r\n`\r\n\r\nconst LegendContainer = styled.div`\r\n    width:100%;\r\n    padding:10px;\r\n    margin:0;\r\n    box-sizing: border-box;\r\n    div.MuiGrid-item {\r\n        padding:5px 5px 0 5px;\r\n    }\r\n`\r\n\r\n\r\nconst LegendTitle = styled.h3`\r\n    text-align: center;\r\n    font-family:'Lora', serif;\r\n    padding:0;\r\n    font-weight:bold;\r\n    margin:0;\r\n`\r\n\r\nconst BinLabels = styled.div`\r\n    width:100%;\r\n    display: flex;\r\n    margin-top:0px;\r\n    box-sizing: border-box;\r\n    padding: 2px 8.3%;\r\n    .bin { \r\n        height:10px;\r\n        display: inline;\r\n        border:0;\r\n        margin:0;\r\n        flex:2;\r\n        font-size:10px;\r\n        text-align: center;\r\n    }\r\n    .bin:nth-of-type(1) {\r\n        transform: ${props => props.firstBinZero ? 'translateX(-45%)' : 'none'};\r\n    }\r\n    .tooltipText {\r\n        margin-top:-5px;\r\n        padding-bottom:25px;\r\n    }\r\n`\r\nconst BinBars = styled.div`\r\n    width:100%;\r\n    display: flex;\r\n    margin-top:3px;\r\n    box-sizing: border-box;\r\n    .bin { \r\n        height:5px;\r\n        display: inline;\r\n        flex:1;\r\n        border:0;\r\n        margin:0;\r\n    }\r\n    .bin:nth-of-type(1) {\r\n        transform: ${props => props.firstBinZero ? 'scaleX(0.35)' : 'none'};\r\n    }\r\n`\r\n\r\n\r\nconst Legend =  (props) => {\r\n    \r\n    return (\r\n        <BottomPanel id=\"bottomPanel\">\r\n            <LegendContainer>\r\n                <Grid container spacing={2} id='legend-bins-container'>\r\n                    <Grid item xs={12}>\r\n                        <LegendTitle>\r\n                            {props.variableName}\r\n                        </LegendTitle>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        {props.colorScale !== undefined &&  \r\n                            <span>\r\n                                <BinBars>\r\n                                    {props.colorScale.map(color => <div className=\"bin color\" key={`${color[0]}${color[1]}`}style={{backgroundColor:`rgb(${color[0]},${color[1]},${color[2]})`}}></div>)}\r\n                                </BinBars>\r\n                                <BinLabels binLength={props.bins.length}> \r\n                                    {props.bins.slice(1,).map(bin => <div className='bin labe'>{Math.round(bin*100)/100}</div>)}                                   \r\n                                </BinLabels>\r\n                            </span>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </LegendContainer>\r\n        </BottomPanel>\r\n    )\r\n}\r\n\r\nexport default Legend","// This component has the wiki/manual/info\r\n\r\n// Library import\r\nimport React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\n// MUI import\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n// Config/component import\r\nimport { colors } from '../config';\r\nimport { pages } from '../wiki';\r\nimport { StyledDropDown } from '../styled_components';\r\n\r\n//// Component Styling\r\n// Main container for component\r\nconst InfoContainer = styled.div`\r\n    background: ${colors.gray};\r\n    color: ${colors.white};\r\n    padding: 0;\r\n    overflow: hidden;\r\n    display: ${props => props.active ? 'initial' : 'none'};\r\n    border-radius: 4px;\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    svg {\r\n        width: 25px;\r\n        height: 25px;\r\n        padding: 0;\r\n        fill: ${colors.white};\r\n        display: inline;\r\n        transition: 250ms all;\r\n        cursor: pointer;\r\n    }\r\n    a {\r\n       color: ${colors.yellow}; \r\n       text-decoration:none;\r\n    }\r\n    @media (max-width:1024px) {\r\n        right:50%;\r\n        bottom:50%;\r\n        transform: translate(50%, 50%);\r\n        overflow:hidden;\r\n    }\r\n    hr {\r\n        margin: 5px 0;\r\n    }\r\n`\r\n\r\n// Left hand side list of available pages\r\n// On mobile, this is replaced by a select drop down\r\nconst Drawer = styled.div`\r\n    position:absolute;\r\n    left:10px;\r\n    top:25px;\r\n    max-width:120px;\r\n    @media(max-width:1024px) {\r\n        width:100%;\r\n    }\r\n`\r\n\r\n// Buttons on left-hand side drawer\r\nconst DrawerButton = styled.button`\r\n    display:block;\r\n    text-align:left;\r\n    background:none;\r\n    color:${props => props.active ? colors.lightblue : colors.white};\r\n    border:none;\r\n    outline:none;\r\n    line-height:2;\r\n    transition:250ms;\r\n    font-family:'Lato', sans-serif;\r\n    opacity: ${props => props.active ? 1 : 0.6};\r\n    &:hover {\r\n        opacity:1;\r\n    }\r\n    @media(max-width:1024px) {\r\n        display:none;\r\n    }\r\n`\r\n\r\n// Container for main content \r\nconst BodyContainer = styled.div`\r\n    position:absolute;\r\n    left: 120px;\r\n    padding: 0 50px 50px 0;\r\n    box-sizing:border-box;\r\n    top:25px;\r\n    transform:translateX(25px);\r\n    overflow-y:scroll;\r\n    height:calc(100% - 25px);\r\n    width:calc(100% - 105px);\r\n    font-size:115% !important;\r\n    line-height:1.75 !important;\r\n    .social-container {\r\n        a {\r\n            img {\r\n                width: 30px;\r\n                height: 22.5px;\r\n                padding: 5px 10px 0px 0px;\r\n                transition: all 250ms ease 0s;\r\n                opacity: 0.7;\r\n                &:hover {\r\n                    opacity:1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    button.hoverButton {\r\n        background:none;\r\n        border:none;\r\n        font-size:100% !important;\r\n        border-bottom:1px solid ${colors.yellow};\r\n        outline:none;\r\n        color:${colors.yellow};\r\n        padding:0;\r\n        &:after {\r\n            content:' ⚼';\r\n        }\r\n    }\r\n    @media (max-width:1024px) {\r\n        left:0;\r\n        width:calc(100% + 15px);\r\n        height:calc(100% - 75);\r\n        top:75px;\r\n        font-size:100% !important;\r\n    }\r\n    ul, ul li{\r\n        margin:revert;\r\n        padding:revert;\r\n    }\r\n`\r\n\r\n// Yellow highlighted button to show interface element when going through tutorial\r\nconst TutorialButton = styled.button`\r\n    background:none;\r\n    outline:none;\r\n    box-sizing:border-box;\r\n    border:1px solid white;\r\n    cursor:pointer;\r\n    text-align:left;\r\n    padding:5px;\r\n    width:calc(50% - 10px);\r\n    margin: 5px;\r\n    display:inline-block;\r\n    color:${colors.white};\r\n    font-family:'Lato', sans-serif;\r\n    padding:10px;\r\n    transition:250ms all;\r\n    &:hover {\r\n        background: ${colors.yellow};\r\n        color: ${colors.gray};\r\n    }\r\n    h3, p {\r\n        padding:0;\r\n        margin:0;\r\n    }\r\n`\r\n\r\n// Mobile only: drop down to select article instead of list of pages\r\nconst PagesDropDown = styled(StyledDropDown)`\r\n    position:absolute;\r\n    top:0;\r\n    visibility:hidden;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    @media (max-width:1024px) {\r\n        visibility:visible;\r\n    }\r\n`\r\n// End styles\r\n\r\n// Tutorials\r\nconst tutorialInfo = [\r\n    {\r\n        \"title\":\"Choropleth Maps\",\r\n        \"subtitle\": \"Explore counts and percentages of cases, deaths, hosipital beds, and testing data.\",\r\n        \"link\": \"choropleth-tutorial\"\r\n    },\r\n    {\r\n        \"title\":\"Hotspots\",\r\n        \"subtitle\": \"Find groups of counties and states affected by the virus.\",\r\n        \"link\": \"hotspot-tutorial\"\r\n    },\r\n    {\r\n        \"title\":\"Emerging Trends\",\r\n        \"subtitle\": \"Locate areas that will soon be significantly affected by COVID.\",\r\n        \"link\": \"emerging-tutorial\"\r\n    },\r\n    {\r\n        \"title\":\"Change Over Time\",\r\n        \"subtitle\": \"See the history of the virus by county and state.\",\r\n        \"link\": \"change-tutorial\"\r\n    },\r\n]\r\n\r\n// Infobox component\r\nconst InfoBox = () => {\r\n\r\n    // Redux -- just panel state open/closed\r\n    const panelOpen = useSelector(state => state.panelState.tutorial)\r\n\r\n    // Selected Article (local state)\r\n    const [currArticle, setCurrArticle] = useState(\"welcome\")\r\n    \r\n    // Handle selection based on article name\r\n    const handleSelect = (e) => setCurrArticle(e.target.value)\r\n\r\n    return (\r\n        <InfoContainer active={panelOpen}>\r\n            {/* List of available articles :: On click sets article */}\r\n            <Drawer>\r\n                {Object.keys(pages).map(page => \r\n                    pages[page][\"pageName\"] !== null ? \r\n                    <DrawerButton \r\n                            onClick={() => setCurrArticle(page)}\r\n                            active={currArticle === page}\r\n                        >\r\n                                {pages[page][\"pageName\"]}\r\n                    </DrawerButton>\r\n                    : ''\r\n                )}\r\n            </Drawer>\r\n            <PagesDropDown id=\"selectPage\">\r\n                {/* Mobile only - select instead of drawer */}\r\n                    <Select \r\n                        value={currArticle} \r\n                        id=\"numerator-select\"\r\n                        onChange={handleSelect}\r\n                    >\r\n                        \r\n                        {Object.keys(pages).map(page => \r\n                            pages[page][\"pageName\"] !== null ? \r\n                            <MenuItem \r\n                                value={page} \r\n                                key={page}\r\n                                >\r\n                                        {pages[page][\"pageName\"]}\r\n                            </MenuItem>\r\n                            : \r\n                            <MenuItem \r\n                                value={page} \r\n                                key={page}\r\n                                style={{display:'none'}}\r\n                                >\r\n                                        {pages[page][\"pageName\"]}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </PagesDropDown>\r\n            <BodyContainer>\r\n                {pages[currArticle]['content']}\r\n                {(currArticle === \"getting-started\") && \r\n                    tutorialInfo.map(tutorial => \r\n                        <TutorialButton onClick={() => setCurrArticle(tutorial.link)}>\r\n                            <h3>{tutorial.title}</h3>\r\n                            <p>{tutorial.subtitle}</p>\r\n                        </TutorialButton>\r\n                    )\r\n                }\r\n                {currArticle.includes('tutorial') && <TutorialButton onClick={() => setCurrArticle('getting-started')}>Return to Tutorials</TutorialButton>}\r\n            </BodyContainer>\r\n        </InfoContainer>\r\n    )\r\n}\r\n\r\nexport default InfoBox;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setAnchorEl } from '../actions';\r\n\r\nconst TooltipContainer = styled.button`\r\n    width:12.5px;\r\n    height:12.5px;\r\n    background:url('${process.env.PUBLIC_URL}/assets/img/info.png');\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    outline:none;\r\n    border:none;\r\n    padding:0;\r\n    margin:4px;\r\n    transform:translateY(4px);\r\n    display:inline-grid;\r\n`\r\n\r\nconst Tooltip = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleMouseOver = (event) => {\r\n        dispatch(setAnchorEl(event.currentTarget))\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        dispatch(setAnchorEl(null))\r\n    }\r\n\r\n    return (\r\n        <TooltipContainer id={props.id} key={props.id} onMouseEnter={handleMouseOver} onMouseLeave={handleMouseLeave} />\r\n    )\r\n}\r\n\r\nexport default Tooltip","// general imports, state\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {scaleThreshold} from 'd3-scale';\r\nimport {WebMercatorViewport} from '@deck.gl/core';\r\n\r\n// deck GL and helper function import\r\nimport DeckGL from '@deck.gl/react';\r\nimport {MapView, FlyToInterpolator} from '@deck.gl/core';\r\nimport { GeoJsonLayer, PolygonLayer, ScatterplotLayer, IconLayer, TextLayer } from '@deck.gl/layers';\r\nimport {fitBounds} from '@math.gl/web-mercator';\r\nimport MapboxGLMap from 'react-map-gl';\r\n\r\n// component, action, util, and config import\r\nimport { MapTooltipContent, Geocoder } from '../components';\r\nimport { setSelectionData } from '../actions';\r\nimport { mapFn, dataFn, getVarId, getCSV, getCartogramCenter, getDataForCharts, getURLParams } from '../utils';\r\nimport { colors, colorScales, MAPBOX_ACCESS_TOKEN } from '../config';\r\nimport MAP_STYLE from '../config/style.json';\r\nimport * as SVG from '../config/svg'; \r\n\r\n// US bounds\r\nconst bounds = fitBounds({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    bounds: [[-87.971649,41.609282],[-87.521896,42.040624]]\r\n})\r\n\r\n\r\n// component styling\r\nconst MapContainer = styled.div`\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n    width:100%;\r\n    height:100%;\r\n    background:${colors.ivory};\r\n    overflow:hidden;\r\n    @media (max-width:600px) {\r\n        div.mapboxgl-ctrl-geocoder {\r\n            display:none;\r\n        }\r\n    }\r\n`\r\n\r\nconst HoverDiv = styled.div`\r\n    background:${colors.ivory};\r\n    padding:20px;\r\n    color:${colors.black};\r\n    box-shadow: 0px 0px 5px rgba(0,0,0,0.7);\r\n    border-radius:15px;\r\n    h3 {\r\n        margin:5px 0;\r\n    }\r\n    hr {\r\n        margin: 5px 0;\r\n    }\r\n    max-width:50ch;\r\n    line-height:1.5;\r\n    table {\r\n        border-collapse:collapse;\r\n    }\r\n    table tr:nth-of-type(even) {\r\n        background:${colors.lightgray}55;\r\n    }\r\n    table tr td {\r\n        padding:2px 0;\r\n    }\r\n    table tr td:nth-of-type(1) {\r\n        padding-right:10px;\r\n    }\r\n`\r\n\r\nconst MapButtonContainer = styled.div`\r\n    position: absolute;\r\n    right: ${props => props.infoPanel ? 317 : 10}px;\r\n    bottom: 30px;\r\n    z-index: 10;\r\n    transition: 250ms all;\r\n    @media (max-width:768px) {\r\n        bottom:100px;\r\n    }\r\n    @media (max-width: 400px) {\r\n        transform:scale(0.75) translate(20%, 20%);\r\n    }\r\n`\r\n\r\nconst NavInlineButtonGroup = styled.div`\r\n    margin-bottom:10px;\r\n    border-radius:4px;\r\n    overflow:hidden;\r\n    -moz-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n    -webkit-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n    box-shadow: 0 0 0 2px rgba(0,0,0,.1);\r\n`\r\n\r\nconst NavInlineButton = styled.button`\r\n    width:29px;\r\n    height:29px;\r\n    padding:5px;\r\n    display:block;\r\n    fill:rgb(60,60,60);\r\n    background-color: ${props => props.isActive ? colors.lightblue : colors.buttongray};\r\n    outline:none;\r\n    border:none;\r\n    transition:250ms all;\r\n    cursor:pointer;\r\n    :after {\r\n        opacity: ${props => props.shareNotification ? 1 : 0};\r\n        content:'Map Link Copied to Clipboard!';\r\n        background:${colors.buttongray};\r\n        -moz-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n        -webkit-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n        box-shadow: 0 0 0 2px rgba(0,0,0,.1);\r\n        border-radius: 4px;\r\n        position: absolute;\r\n        transform:translate(-120%, -25%);\r\n        padding:5px;\r\n        width:150px;\r\n        pointer-events:none;\r\n        max-width:50vw;\r\n        transition:250ms all;\r\n    }\r\n    svg {\r\n        transition:250ms all;\r\n        transform:${props => props.tilted ? 'rotate(30deg)' : 'none' };\r\n    }\r\n`\r\n\r\nconst ShareURL = styled.input`\r\n    position:fixed;\r\n    left:110%;\r\n`\r\n\r\nconst IndicatorBox = styled.div`\r\n    position:fixed;\r\n    border:1px dashed #FFCE00;\r\n    background:rgba(0,0,0,0.25);\r\n    z-index:5;\r\n`\r\n\r\nconst GeocoderContainer = styled.div`\r\n    position:fixed;\r\n    right:7px;\r\n    top:7px;\r\n    z-index:500;\r\n    width:250px;\r\n    @media (max-width:600px) {\r\n        display:none;\r\n    }\r\n`\r\n\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};\r\n\r\n//create your forceUpdate hook\r\nfunction useForceUpdate(){\r\n    const [, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nfunction MapSection(props){ \r\n    // fetch pieces of state from store    \r\n    const { storedGeojson, panelState, mapParams, urlParams, centroids } = useSelector(state => state);\r\n\r\n    // component state elements\r\n    // hover and highlight geographibes\r\n    const [hoverInfo, setHoverInfo] = useState({x:null, y:null, object:null});\r\n    const [highlightGeog, setHighlightGeog] = useState([]);\r\n    const [hoverGeog, setHoverGeog] = useState(null);\r\n\r\n    // map view location\r\n    const [viewState, setViewState] = useState({\r\n        latitude: +urlParams.lat || bounds.latitude,\r\n        longitude: +urlParams.lon || bounds.longitude,\r\n        zoom: +urlParams.z || bounds.zoom,\r\n        bearing:0,\r\n        pitch:0\r\n    })\r\n\r\n    // share button notification\r\n    const [shared, setShared] = useState(false);\r\n    \r\n    // interaction states\r\n    const [multipleSelect, setMultipleSelect] = useState(false);\r\n    const [boxSelect, setBoxSelect] = useState(false);\r\n    const [boxSelectDims, setBoxSelectDims] = useState({});\r\n    const forceUpdate = useForceUpdate();\r\n    // const [resetSelect, setResetSelect] = useState(null);\r\n    // const [mobilityData, setMobilityData] = useState([]);\r\n\r\n    // local data store for parsed data\r\n    const [currentMapData, setCurrentMapData] = useState({\r\n        data: [],\r\n        params: {}\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let hidden = null;\r\n    let visibilityChange = null;\r\n    if (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support \r\n        hidden = 'hidden';\r\n        visibilityChange = 'visibilitychange';\r\n    } else if (typeof document.msHidden !== 'undefined') {\r\n        hidden = 'msHidden';\r\n        visibilityChange = 'msvisibilitychange';\r\n    } else if (typeof document.webkitHidden !== 'undefined') {\r\n        hidden = 'webkitHidden';\r\n        visibilityChange = 'webkitvisibilitychange';\r\n    }\r\n\r\n    // shared view broadcast\r\n    useEffect(() => { \r\n        document.addEventListener(visibilityChange, () => {\r\n            setBoxSelect(false);\r\n            setMultipleSelect(false);\r\n        });\r\n\r\n        window.addEventListener('storage', () => {\r\n            // When local storage changes, dump the list to\r\n            // the console.\r\n            const SHARED_GEOID =  localStorage.getItem('SHARED_GEOID').split(',').map(d => parseInt(d))\r\n            \r\n            if (SHARED_GEOID !== null) {\r\n                setHighlightGeog(SHARED_GEOID); \r\n            }\r\n            \r\n            const SHARED_VIEW =  JSON.parse(localStorage.getItem('SHARED_VIEW'));\r\n            \r\n            if (SHARED_VIEW !== null && SHARED_VIEW.hasOwnProperty('latitude')) {\r\n                setViewState({\r\n                        longitude: SHARED_VIEW.longitude,\r\n                        latitude: SHARED_VIEW.latitude,\r\n                        zoom: SHARED_VIEW.zoom,\r\n                        transitionDuration: 1000,\r\n                        transitionInterpolator: new FlyToInterpolator()\r\n                    })\r\n            }\r\n        });\r\n\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n        setViewState(view => ({\r\n            ...view,\r\n            latitude: +urlParams.lat || bounds.latitude,\r\n            longitude: +urlParams.lon || bounds.longitude,\r\n            zoom: +urlParams.z || bounds.zoom,\r\n            bearing:0,\r\n            pitch:0\r\n        }));\r\n    }, [urlParams])\r\n\r\n    const GetMapView = () => {\r\n        try {\r\n            const currView = deckRef.current.deck.viewState.MapView\r\n            return currView || {...viewState}\r\n        } catch {\r\n            return {...viewState}\r\n        }\r\n    }\r\n    \r\n    const mapRef = useRef(null);\r\n\r\n    const deckRef = useRef({\r\n        deck: {\r\n            viewState: {\r\n                MapView: {\r\n                    ...viewState\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    const handleShare = async (params) => {\r\n        const shareData = {\r\n            title: 'The US Covid Atlas',\r\n            text: 'Near Real-Time Exploration of the COVID-19 Pandemic.',\r\n            url: `${window.location.href.split('?')[0]}${getURLParams(params)}`,\r\n        }\r\n\r\n        try {\r\n            await navigator.share(shareData)\r\n          } catch(err) {\r\n            let copyText = document.querySelector(\"#share-url\");\r\n            copyText.value = `${shareData.url}`;\r\n            copyText.style.display = 'block'\r\n            copyText.select();\r\n            copyText.setSelectionRange(0, 99999);\r\n            document.execCommand(\"copy\");\r\n            copyText.style.display = 'none';\r\n            setShared(true)\r\n            setTimeout(() => setShared(false), 5000);\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.target.selectionStart === undefined){\r\n            if (e.ctrlKey) setMultipleSelect(true);\r\n            if (e.shiftKey) setBoxSelect(true);\r\n        }\r\n    }\r\n\r\n    const handleKeyUp = (e) => {\r\n        if (e.target.selectionStart === undefined){\r\n            if (!e.ctrlKey) setMultipleSelect(false);\r\n            if (!e.shiftKey) setBoxSelect(false);\r\n        }\r\n    }\r\n\r\n    const handleMapHover = ({x, y, object}) => {\r\n        if (object && object.properties) {\r\n            setHoverGeog(object.properties.geoid)\r\n            setHoverInfo({x, y, object: object.properties})\r\n        } else {\r\n            setHoverGeog(null)\r\n            setHoverInfo({x:null, y:null, object:null})\r\n        }\r\n    }\r\n\r\n    const handleMapClick = (info, e) => {\r\n        console.log(e)\r\n    }\r\n\r\n    const handleGeolocate = async () => {\r\n        navigator.geolocation.getCurrentPosition( position => {\r\n            setViewState({\r\n                    longitude: position.coords.longitude,\r\n                    latitude: position.coords.latitude,\r\n                    zoom:7,\r\n                    transitionDuration: 1000,\r\n                    transitionInterpolator: new FlyToInterpolator()\r\n                })\r\n        }) \r\n    }\r\n\r\n    const handleZoom = (zoom) => {\r\n        const currMapView = GetMapView()\r\n        setViewState({\r\n                ...currMapView,\r\n                zoom: currMapView.zoom + zoom,\r\n                transitionDuration: 250,\r\n                transitionInterpolator: new FlyToInterpolator()\r\n            })\r\n    }\r\n    \r\n    const resetTilt = () => {\r\n        const currMapView = GetMapView()\r\n        setViewState({\r\n                ...currMapView,\r\n                bearing:0,\r\n                pitch:0,\r\n                transitionDuration: 250,\r\n                transitionInterpolator: new FlyToInterpolator()\r\n            })\r\n    }\r\n\r\n    const handleGeocoder = useCallback(location => {\r\n        if (location.center !== undefined) {\r\n            let center = location.center;\r\n            let zoom = 6;\r\n\r\n            if (location.bbox) {\r\n                let bounds = fitBounds({\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight,\r\n                    bounds: [[location.bbox[0],location.bbox[1]],[location.bbox[2],location.bbox[3]]]\r\n                })\r\n                center = [bounds.longitude, bounds.latitude];\r\n                zoom = bounds.zoom*.9;\r\n            };\r\n\r\n            setViewState({\r\n                longitude: center[0],\r\n                latitude: center[1],\r\n                zoom: zoom,\r\n                bearing:0,\r\n                pitch:0,\r\n                transitionDuration: 'auto',\r\n                transitionInterpolator: new FlyToInterpolator()\r\n            })\r\n        }  \r\n      }, []);\r\n\r\n    const COLOR_SCALE = scaleThreshold()\r\n        .domain(mapParams.bins)\r\n        .range(mapParams.colorScale);\r\n\r\n    const layers = [ \r\n        new GeoJsonLayer({\r\n            id: 'choropleth',\r\n            data: storedGeojson,\r\n            pickable: true,\r\n            stroked: false,\r\n            filled: true,\r\n            extruded: false,\r\n            getFillColor: f => COLOR_SCALE(f[mapParams.numerator][mapParams.nProperty]),\r\n            opacity: 1,\r\n            onHover: handleMapHover,\r\n            // onClick: handleMapClick,            \r\n            updateTriggers: {\r\n                getFillColor: [storedGeojson.type, mapParams.variableName, mapParams.bins, mapParams.colorScale],\r\n            },\r\n            transitions: {\r\n                getFillColor: 250\r\n            }\r\n        }),\r\n        new GeoJsonLayer({\r\n            id: 'highlightLayer',\r\n            data: storedGeojson,\r\n            opacity: 0.8,\r\n            material:false,\r\n            pickable: false,\r\n            stroked: true,\r\n            filled:true,\r\n            lineWidthScale: 5,\r\n            getLineColor: d => d.properties.geoid == hoverGeog ? [0,0,0,255] : [100,100,100,0],\r\n            getFillColor: d => d.properties.geoid == hoverGeog ? [255,255,255,120] : [255,255,255,0],\r\n            getLineWidth:1, \r\n            lineWidthMinPixels: 3,        \r\n            updateTriggers: {\r\n                getLineColor: [hoverGeog],\r\n                getFillColor: [hoverGeog],\r\n            },\r\n            transitions: {\r\n                getLineColor: 250,\r\n                getFillColor: 250\r\n            }\r\n        }),\r\n    ]\r\n\r\n    const view = new MapView({repeat: true});\r\n    const handleSelectionBoxStart = () => {\r\n        setBoxSelect(true)\r\n    }\r\n\r\n    const listener = (e) => {\r\n\r\n        setBoxSelectDims(prev => {\r\n            let x;\r\n            let y;\r\n            let width;\r\n            let height;\r\n\r\n            if (e.clientX < prev.ox) {\r\n                x = e.clientX;\r\n                width = prev.ox - e.clientX\r\n            } else {\r\n                x = prev.x;\r\n                width = e.clientX - prev.x\r\n            }\r\n\r\n            if (e.clientY < prev.oy) {\r\n                y = e.clientY;\r\n                height = prev.oy - e.clientY\r\n            } else {\r\n                y = prev.y;\r\n                height = e.clientY - prev.y\r\n            }\r\n\r\n            return { ...prev, x, y, width, height }\r\n        })\r\n    }\r\n    \r\n    const touchListener = (e) => {\r\n        // setX(e?.targetTouches[0]?.clientX-15)\r\n        // setY(e?.targetTouches[0]?.clientY-15)\r\n        // console.log(e)\r\n    }\r\n\r\n    const removeListeners = () => {\r\n        window.removeEventListener('touchmove', touchListener)\r\n        window.removeEventListener('touchend', removeListeners)\r\n        window.removeEventListener('mousemove', listener)\r\n        window.removeEventListener('mouseup', removeListeners)\r\n        setBoxSelectDims({\r\n            x:-50,\r\n            y:-50,\r\n            ox:0,\r\n            oy:0,\r\n            width:0,\r\n            height:0\r\n        })\r\n        setBoxSelect(false)\r\n    }\r\n\r\n    const handleBoxSelect = (e) => {\r\n        try {\r\n            if (e.type === 'mousedown') {\r\n                setBoxSelectDims({\r\n                    x:e.pageX,\r\n                    y:e.pageY,\r\n                    ox:e.pageX,\r\n                    oy:e.pageY,\r\n                    width:0,\r\n                    height:0\r\n                });\r\n                window.addEventListener('touchmove', touchListener);\r\n                window.addEventListener('touchend', removeListeners);\r\n                window.addEventListener('mousemove', listener);\r\n                window.addEventListener('mouseup', removeListeners);\r\n            } else {\r\n    \r\n                const {x, y, width, height } = boxSelectDims;\r\n    \r\n                let layerIds = ['choropleth'];\r\n    \r\n                let features = deckRef.current.pickObjects(\r\n                        {\r\n                            x, y: y-50, width, height, layerIds\r\n                        }\r\n                    )\r\n                let GeoidList = [];\r\n                for (let i=0; i<features.length; i++) {                    \r\n                }\r\n                setHighlightGeog(GeoidList); \r\n                window.localStorage.setItem('SHARED_GEOID', GeoidList);\r\n                window.localStorage.setItem('SHARED_VIEW', JSON.stringify(GetMapView()));\r\n                setBoxSelectDims({});\r\n                removeListeners();\r\n                setBoxSelect(false)\r\n            }\r\n        } catch {\r\n            console.log('bad selection')\r\n        }\r\n    }\r\n    var myEfficientFn = debounce(function(e) {\r\n        if (centroids.length){\r\n            const viewport = new WebMercatorViewport(e.viewState);          \r\n            const [west,north] = viewport.unproject([0, 0]);\r\n            const [east,south] = viewport.unproject([viewport.width, viewport.height]);\r\n\r\n            let returnArray = [];\r\n            for (let i=0; i<centroids.length; i++){\r\n                if (centroids[i].feature.geometry.coordinates[0] < east && \r\n                    centroids[i].feature.geometry.coordinates[0] > west && \r\n                    centroids[i].feature.geometry.coordinates[1] > south && \r\n                    centroids[i].feature.geometry.coordinates[1] < north \r\n                    ){\r\n                        console.log(centroids[i])\r\n                    }\r\n            }\r\n        }\r\n    }, 500);\r\n\r\n    return (\r\n        <MapContainer\r\n            onKeyDown={handleKeyDown}\r\n            onKeyUp={handleKeyUp}\r\n            onMouseDown={e => boxSelect ? handleBoxSelect(e) : null}\r\n            onMouseUp={e => boxSelect ? handleBoxSelect(e) : null}\r\n        >\r\n            {\r\n                // boxSelectDims.hasOwnProperty('x') && \r\n                true && \r\n                <IndicatorBox style={{\r\n                    left:boxSelectDims.x, \r\n                    top:boxSelectDims.y, \r\n                    width: boxSelectDims.width,\r\n                    height: boxSelectDims.height}}\r\n                    />\r\n            }\r\n            <DeckGL\r\n                layers={layers}\r\n                ref={deckRef}\r\n\r\n                initialViewState={viewState}\r\n                controller={\r\n                    {\r\n                        dragRotate: !boxSelect, \r\n                        dragPan: !boxSelect, \r\n                        doubleClickZoom: !boxSelect, \r\n                        touchZoom: !boxSelect, \r\n                        touchRotate: !boxSelect, \r\n                        keyboard: true, \r\n                        scrollZoom: true,\r\n                        inertia: 50\r\n                    }\r\n                }\r\n                views={view}\r\n                pickingRadius={20}\r\n                onViewStateChange={(e) => myEfficientFn(e)}\r\n                \r\n            >\r\n                <MapboxGLMap\r\n                    reuseMaps\r\n                    ref={mapRef}\r\n                    mapStyle={'mapbox://styles/lixun910/ckmf5w2e20sn217oiluj5uzd7'} \r\n                    preventStyleDiffing={true}\r\n                    mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n                    >\r\n                </MapboxGLMap >\r\n            </DeckGL>\r\n            <MapButtonContainer \r\n                infoPanel={panelState.info}\r\n            >\r\n                <NavInlineButtonGroup>\r\n                    <NavInlineButton\r\n                        title=\"Selection Box\"\r\n                        id=\"boxSelect\"\r\n                        isActive={boxSelect}\r\n                        onClick={() => handleSelectionBoxStart()}\r\n                    >\r\n                        {SVG.selectRect}\r\n                    </NavInlineButton>\r\n                </NavInlineButtonGroup>\r\n                <NavInlineButtonGroup>\r\n                    <NavInlineButton\r\n                        title=\"Geolocate\"\r\n                        id=\"geolocate\"\r\n                        onClick={() => handleGeolocate()}\r\n                    >\r\n                        {SVG.locate}\r\n                    </NavInlineButton>\r\n                </NavInlineButtonGroup>\r\n                \r\n                <NavInlineButtonGroup>\r\n                    <NavInlineButton\r\n                    \r\n                        title=\"Zoom In\"\r\n                        id=\"zoomIn\"\r\n                        onClick={() => handleZoom(0.5)}\r\n                    >\r\n                        {SVG.plus}\r\n                    </NavInlineButton>\r\n                    <NavInlineButton\r\n                        title=\"Zoom Out\"\r\n                        id=\"zoomOut\"\r\n                        onClick={() => handleZoom(-0.5)}\r\n                    >\r\n                        {SVG.minus}\r\n                    </NavInlineButton>\r\n                    <NavInlineButton\r\n                        title=\"Reset Tilt\"\r\n                        id=\"resetTilt\"\r\n                        tilted={deckRef.current?.deck.viewState?.MapView?.bearing !== 0 || deckRef.current?.deck.viewState?.MapView?.pitch !== 0}\r\n                        onClick={() => resetTilt()}\r\n                    >\r\n                        {SVG.compass}\r\n                    </NavInlineButton>\r\n                </NavInlineButtonGroup>\r\n                <NavInlineButtonGroup>\r\n                    <NavInlineButton\r\n                        title=\"Share this Map\"\r\n                        id=\"shareButton\"\r\n                        shareNotification={shared}\r\n                        // onClick={() => handleShare({mapParams, dataParams, currentData, coords: GetMapView(), lastDateIndex: dateIndices[currentData][dataParams.numerator]})}\r\n                    >\r\n                        {SVG.share}\r\n                    </NavInlineButton>\r\n                </NavInlineButtonGroup>\r\n                <ShareURL type=\"text\" value=\"\" id=\"share-url\" />\r\n            </MapButtonContainer>\r\n            <GeocoderContainer>\r\n                <Geocoder \r\n                    id=\"Geocoder\"\r\n                    placeholder={\"Search by location\"}\r\n                    API_KEY={MAPBOX_ACCESS_TOKEN}\r\n                    onChange={handleGeocoder}\r\n                />\r\n            </GeocoderContainer>\r\n\r\n            {hoverInfo.object && (\r\n                <HoverDiv style={{position: 'absolute', zIndex: 1, pointerEvents: 'none', left: hoverInfo.x, top: hoverInfo.y}}>\r\n                    <MapTooltipContent content={hoverInfo.object} />\r\n                </HoverDiv>\r\n            )}\r\n        </MapContainer>\r\n    ) \r\n}\r\n\r\nexport default MapSection","import React from 'react';\r\n// This component handles and formats the map tooltip info. \r\n// The props passed to this component should contain an object of the hovered object (from deck, info.object by default)\r\nconst MapTooltipContent = (props) => {\r\n    return (\r\n        <>\r\n            {props.content && <table>\r\n                <tr><td>Population</td><td> {props.content.acs_population && props.content.acs_population.toLocaleString('en')}</td></tr>\r\n                <tr><td>Number of Trees</td><td> {props.content.trees_n && props.content.trees_n.toLocaleString('en')}</td></tr>\r\n                <tr><td>Percent Canopty Cover</td><td> {props.content.trees_crown_den && props.content.trees_crown_den.toFixed(2)}%</td></tr>\r\n                <tr><td>Heat Island Percentile</td><td> {props.content.heatisl && props.content.heatisl.toFixed(2)}</td></tr>\r\n                <tr><td>PM2.5 in Summer (Model Average)</td><td> {props.content.nn_q3_pm2_5 && props.content.nn_q3_pm2_5.toFixed(2)}</td></tr>\r\n                <tr><td>Urban Flood Susceptibility Index</td><td> {props.content.urban_flood_suscep && props.content.urban_flood_suscep.toFixed(2)}</td></tr>\r\n                <tr><td>Logged Traffic Volume</td><td> {props.content.logtraf && props.content.logtraf.toFixed(2)}</td></tr>\r\n                <tr><td>Social Vulnerability Index</td><td> {props.content.svi_pecentile && props.content.svi_pecentile.toFixed(2)}</td></tr>\r\n                <tr><td>Age Adjusted Asthma Cases (Per 10k)</td><td> {props.content.asthma_age_adj_rate && props.content.asthma_age_adj_rate}</td></tr>\r\n                <tr><td>Urban Flood Susceptibility Index</td><td> {props.content.urban_flood_suscep && props.content.urban_flood_suscep.toFixed(2)}</td></tr>\r\n            </table>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MapTooltipContent","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { colors } from '../config';\r\n\r\nconst NavItems = styled.ul`\r\n  @media (max-width:1024px){\r\n    display:none !important;\r\n  }\r\n`\r\n\r\nconst NavContainer = styled.div`\r\n  display: flex;\r\n  width: auto; \r\n  height: 50px; \r\n  position: absolute; \r\n  top: 0px; \r\n  left: 0px;\r\n  z-index:999;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  letter-spacing: 1.75px;\r\n  font-weight: 400;\r\n  font-stretch: normal;\r\n  color: red;\r\n\r\n  a {\r\n    color: gray;\r\n    text-align: center;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    text-decoration: none;\r\n    transition:250ms all;\r\n  }\r\n\r\n  .nav-logo {\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 20px;\r\n    font-size: 20px;\r\n    a {\r\n      font-family: 'Lora', serif;\r\n      font-weight:bold;\r\n      letter-spacing: initial;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n    display: flex;\r\n    height: 100%;\r\n    margin: 0px;\r\n  }\r\n\r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  li:hover a {\r\n    color: ${colors.green};\r\n  }\r\n  \r\n  @media only screen and (max-width: 600px) {\r\n    ul{\r\n      display: none;\r\n    }\r\n  }\r\n\r\n`\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <NavContainer>\r\n            <div className=\"nav-logo\">\r\n              <img src={`${process.env.PUBLIC_URL}/logo.png`} style={{height: '30px', paddingRight: '5px'}} alt=\"US Covid Atlas Logo\" /><a href=\"/\">Chicago Environment Explorer</a>\r\n            </div>\r\n          <NavItems> \r\n            <li><NavLink to=\"/data\">DATA</NavLink></li>\r\n            <li><NavLink to=\"/about\">ABOUT</NavLink></li>\r\n            <li><NavLink to=\"/contact\">CONTACT</NavLink></li>\r\n          </NavItems>\r\n        </NavContainer>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { setNotification } from '../actions'\r\nimport { colors } from '../config'\r\n\r\nconst Notification = styled.div`\r\n    width: 300px;\r\n    max-width: 90vw;\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    z-index: 15;\r\n    background: ${colors.gray};\r\n    color: ${colors.white};\r\n    padding: 0;\r\n    overflow: hidden;\r\n    border-radius: 4px;\r\n    padding:20px 30px 20px 20px;\r\n    -moz-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n    -webkit-box-shadow: 0 0 2px rgba(0,0,0,.1);\r\n    box-shadow: 0 0 0 2px rgba(0,0,0,.1);\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n    transform:translate(-50%, -50%);\r\n`\r\n\r\nconst CloseTutorial = styled.button`\r\n    position: absolute;\r\n    top: 12px;\r\n    right: 10px;\r\n    font-size: 200%;\r\n    cursor: pointer;\r\n    padding:0;\r\n    background:none;\r\n    outline:none;\r\n    border:none;\r\n    color:white;\r\n`\r\n\r\nconst NotificationBox = () => {\r\n    const dispatch = useDispatch();\r\n    const notification = useSelector(state => state.notification);\r\n\r\n    return (\r\n        notification && \r\n        <Notification>\r\n            <div dangerouslySetInnerHTML={{__html: notification}}></div>\r\n            <CloseTutorial onClick={() => dispatch(setNotification(null))}>×</CloseTutorial>\r\n        </Notification>\r\n    )\r\n}\r\n\r\nexport default NotificationBox","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup'; \r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Tooltip from './tooltip';\r\nimport { StyledDropDown, BinsContainer, Gutter } from '../styled_components';\r\nimport { changeVariable, setMapParams, setPanelState } from '../actions'; //variableChangeZ, setNotification, storeMobilityData\r\nimport { fixedScales, colorScales, colors, variablePresets } from '../config';\r\nimport * as SVG from '../config/svg';\r\n\r\nconst VariablePanelContainer = styled.div`\r\n  position:fixed;\r\n  left:10px;\r\n  top:60px;\r\n  height:auto;\r\n  min-width:200px;\r\n  background-color: ${colors.ivory};\r\n  box-shadow: 2px 0px 5px ${colors.gray}44;\r\n  padding:0;\r\n  box-sizing: border-box;\r\n  transition:250ms all;\r\n  font: 'Montserrat', sans-serif;\r\n  color:${colors.black};\r\n  z-index:50;\r\n  border-radius:20px;\r\n  &.hidden {\r\n    transform: translateX(-100%);\r\n  }\r\n  h1,h2,h3,h4 {\r\n    font-family: 'Lora', serif;\r\n    margin: 0 0 10px 0;\r\n  }\r\n  p {\r\n    margin: 10px 0;\r\n  }\r\n  @media (max-width:1024px) {\r\n    min-width:50vw;\r\n  }  \r\n  @media (max-width:600px) {\r\n    width:100%;\r\n    display: ${props => props.otherPanels ? 'none' : 'initial'};\r\n  }\r\n  button#showHideLeft {\r\n    position:absolute;\r\n    left:95%;\r\n    top:20px;\r\n    width:40px;\r\n    height:40px;\r\n    box-sizing:border-box;\r\n    padding:0;\r\n    margin:0;\r\n    background-color: ${colors.ivory};\r\n    box-shadow: 2px 0px 5px ${colors.gray}88;\r\n    outline:none;\r\n    border:none;\r\n    border-radius:20px;\r\n    cursor: pointer;\r\n    transition:500ms all;\r\n    svg { \r\n      width:20px;\r\n      height:20px;\r\n      margin:10px 0 0 0;\r\n      @media (max-width:600px){\r\n        width:20px;\r\n        height:20px;\r\n        margin:5px;\r\n      }\r\n      fill:${colors.gray};\r\n      transform:rotate(0deg);\r\n      transition:500ms all;\r\n      .cls-1 {\r\n        fill:none;\r\n        stroke-width:6px;\r\n        stroke:${colors.gray};\r\n      }\r\n    }\r\n    :after {\r\n      opacity:0;\r\n      font-weight:bold;\r\n      content: 'Variables';\r\n      color:${colors.gray};\r\n      position: relative;\r\n      right:-50px;\r\n      top:-22px;\r\n      transition:500ms all;\r\n      z-index:4;\r\n    }\r\n    @media (max-width:768px){\r\n      top:120px;\r\n    }\r\n    @media (max-width:600px) {\r\n      left:90%;\r\n      width:30px;\r\n      height:30px;\r\n      top:140px;\r\n      :after {\r\n        display:none;\r\n      }\r\n    }\r\n  }\r\n  button#showHideLeft.hidden {\r\n    left:105%;\r\n    svg {\r\n      transform:rotate(90deg);\r\n    }\r\n    :after {\r\n      opacity:1;\r\n    }\r\n  }\r\n  user-select:none;\r\n`\r\n\r\nconst ControlsContainer = styled.div`\r\n  max-height:78vh;\r\n  padding:20px;\r\n\r\n  @media (max-height:899px){\r\n    padding:20px 20px 10vh 20px;\r\n  }\r\n  \r\n  @media (max-width:600px) {\r\n    width:100%;\r\n    padding:0 10px 25vh 10px;\r\n  }\r\n  p.data-description {\r\n    max-width: 40ch;\r\n    font-size:1rem;\r\n    line-height:1.3;\r\n  }\r\n`\r\n\r\nconst DataDescriptions = {\r\n  'Tree Crown Density': <p>\r\n    This metric describes the amount of tree cover in a given census tract. Data on the location and size of trees was collected by the Chicago Region Trees Initiative \r\n    in partnership with the U.S. Forest Service. Using LiDAR technology and multiple geoprocessing steps, polygons representing the surface area covered by a tree’s \r\n    branches and leaves were created. To generate the Tree Crown Density, we  summed the surface area of all trees in a census tract and then divided the total by the \r\n    surface area of the census tracts. If a given census tract has a tree crown density of 0.5, this translates as <i>“Trees cover 50% of the total surface area in this \r\n    census tract.”</i> A higher tree crown density means higher tree coverage.\r\n  </p>,\r\n  'PM2.5 in Summer (2014-18)': <p>\r\n    PM 2.5 refers to atmospheric particulate matter (PM) that has a diameter of less than 2.5 micrometers. We used PM 2.5 estimates from EPA sensors in Cook County and 20 neighboring counties as ground truth. To fill in missing gaps between sensors, we generated a model to take advantage of the multivariate relationship between PM 2.5 and aerosol optical depth (a satellite product). Using multiple air quality predictors (such as vegetation, land use, wind speed, temperature, precipitation, aerosol optical depth, point emissions, areal emissions, and more) we estimated PM 2.5 from 2014-2018 at a 1-km resolution using a three-stage model and neural net, replicating previous work and extending it to the local region.  Model performance for this iteration of the model had an R-squared of 0.572 after the first stage with 10-fold cross validation. As the model improves, it will be updated in the tool. \r\n    <br/><br/>\r\n    For the site selection tool, we cropped the output to the City of Chicago, and aggregated data to the census-tract level; centroids of 1-km grid were assigned to intersecting tracts. We used the average results from Summer 2014-2018, representing peak PM 2.5 trends that occur on a yearly basis, and prepare it as an individual layer.\r\n  </p>,\r\n  'Surface Temperature': <p>\r\n    Some neighborhoods are warmer than others on average, due to complex built and physical environment features, and this is especially pronounced in the summer months. The Urban Heat Island data displays this effect on a map. NASA routinely monitors surface temperatures across the globe by satellites. We used average summer surface temperature in 2018 to rank census tracts in Chicago by average temperature as a proxy for the urban heat island effect. \r\n    <br/><br/>\r\n    Tracts with indices closer to 1 are the hottest areas in the city. Tracts with indices closer to 0 are the coldest census tracts in the city. Suppose a given census tract (Tract A) has an urban heat island index value of 0.25. This translates as “25% of Chicago census tracts are colder than Tract A.” Note: This also means “75% of Chicago census tracts are warmer than Tract A”. \r\n  </p>,\r\n  'Traffic Volume': <p>\r\n    This measure corresponds to logged average annual average daily traffic counts by street segment, by census tract. We use recent Illinois Department of Transportation (IDOT) traffic data available as road segments containing Annual Average Daily Traffic (AADT) counts. We cropped the data to the City of Chicago (9,373 road segments), simplified to point locations, and calculated total AADT within each Census Tract. These numbers were subsequently log transformed to normalize the distribution for more meaningful analysis.\r\n  </p>,\r\n  'Social Vulnerability Index': <p>\r\n    Social Vulnerability Index is a composite variable of seven socio-economic indicators that represent an average “rank” of vulnerability, generated by the CDC using American Community Survey 2018 5-year estimates.. The SVI was generated from multiple variables demonstrating including Percent of the population that is dependent (0-4 & 65+), Percent with a bachelor’s degree (negatively weighted), Percent of the population that is White; Not Hispanic (negatively weighted), Unemployment rate, Percent of the population with a disability, Percent of renters that are cost burdened, and Percent of homeowners that are cost burdened. These indicators at the census tract level were transformed, normalized into z-scores, and equally weighted to produce a single estimate. An SVI z-score (Vul) greater than zero indicates an area is more vulnerable on average than half of the tracts in the study area.  Thus areas with higher scores have more vulnerability.\r\n  </p>,\r\n}\r\n\r\nconst VariablePanel = (props) => {\r\n\r\n  const dispatch = useDispatch();    \r\n\r\n  const { mapParams, panelState } = useSelector(state => state); \r\n\r\n  const handleMapOverlay = (event) =>{\r\n    dispatch(\r\n      setMapParams(\r\n        {\r\n          overlay: event.target.value\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n\r\n  const handleOpenClose = () => {\r\n    if (panelState.variables) {\r\n      dispatch(setPanelState({variables:false}))\r\n    } else {\r\n      dispatch(setPanelState({variables:true}))\r\n    }\r\n  }\r\n  \r\n  const handleVariable = (e) => dispatch(changeVariable(variablePresets[e.target.value]))\r\n\r\n  return (\r\n    <VariablePanelContainer className={panelState.variables ? '' : 'hidden'} otherPanels={panelState.info} id=\"variablePanel\">\r\n      <ControlsContainer>\r\n        <h2>Map Variables</h2>\r\n        <StyledDropDown id=\"newVariableSelect\">\r\n          <InputLabel htmlFor=\"newVariableSelect\">Variable</InputLabel>\r\n          <Select\r\n            value={mapParams.variableName}\r\n            onChange={handleVariable}\r\n            MenuProps={{id:'variableMenu'}}\r\n            >\r\n            {Object.keys(variablePresets).map(variable => <MenuItem value={variable} key={variable}>{variable}</MenuItem>)}\r\n          </Select>\r\n        </StyledDropDown>\r\n        <Gutter h={20}/>\r\n        \r\n        <h2>Data Description</h2>\r\n        <p className=\"data-description\">{DataDescriptions[mapParams.variableName]}</p>\r\n\r\n        <Gutter h={20}/>\r\n        <h2>Boundary Overlay</h2>\r\n        <StyledDropDown>\r\n          <InputLabel htmlFor=\"overlay-select\">Overlay</InputLabel>\r\n          <Select  \r\n            id=\"overlay-select\"\r\n            value={mapParams.overlay}\r\n            onChange={handleMapOverlay}\r\n          >\r\n            <MenuItem value=\"\" key={'None'}>None</MenuItem> \r\n            {/* <MenuItem value={'native_american_reservations'} key={'native_american_reservations'}>Native American Reservations</MenuItem> */}\r\n          </Select>\r\n        </StyledDropDown>\r\n\r\n      </ControlsContainer>\r\n      <button onClick={handleOpenClose} id=\"showHideLeft\" className={panelState.variables ? 'active' : 'hidden'}>{SVG.settings}</button>\r\n    </VariablePanelContainer>\r\n  );\r\n}\r\n\r\nexport default VariablePanel;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { colors } from '../config';\r\n\r\nconst PreloaderContainer = styled.div`\r\n    position:fixed;\r\n    width:100%;\r\n    height:100%;\r\n    z-index:500;\r\n    top:0;\r\n    left:0;\r\n    background:${colors.gray};\r\n    transition: 500ms opacity;\r\n    img {\r\n        width:100px;\r\n        height:86px;\r\n        position:fixed;\r\n        left:50%;\r\n        top:50%;\r\n        transform:translate(-50%, -50%);\r\n    }\r\n    @keyframes fade {\r\n        0% {fill-opacity:1};\r\n        50% {fill-opacity:0.25};\r\n        100% {fill-opacity:1};\r\n    }\r\n    &.fadeOut {\r\n        opacity:0;\r\n        pointer-events:none;\r\n    }\r\n`;\r\n\r\nconst Preloader = ( props ) => {\r\n    const [isHidden, setIsHidden] = useState(false);\r\n\r\n    if (props.loaded) {\r\n        setTimeout(() => {\r\n            setIsHidden(true)\r\n        }, 500)\r\n    }\r\n\r\n    return (\r\n        <PreloaderContainer className={props.loaded ? 'fadeOut' : ''} style={{display: (isHidden ? 'none' : 'initial')}} id=\"preloaderContainer\">\r\n            <img src={`${process.env.PUBLIC_URL}/assets/img/preloader.gif`} alt=\"Preloader\" />\r\n        </PreloaderContainer>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport styled from 'styled-components';\r\nimport Popper from '@material-ui/core/Popper';\r\n\r\nimport { tooltipInfo, colors } from '../config';\r\nimport { setAnchorEl } from '../actions';\r\n\r\nconst TooltipContentDiv = styled(Popper)`\r\n    z-index:10000;\r\n    max-width:200px;\r\n    background:none;\r\n    padding:0;\r\n    margin:0;\r\n    pointer-events: none;\r\n    div.tooltipContentContainer {\r\n        background:black;\r\n        padding:10px;\r\n        margin:0;\r\n        borderRadius: 4px;\r\n        color:white;\r\n        // transform:translateX(65%);\r\n        box-shadow: 0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12);\r\n        pointer-events: all;\r\n        a {\r\n            color: ${colors.yellow};\r\n            text-decoration:none;\r\n        }\r\n    }\r\n`\r\n\r\nconst Popover = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const anchorEl = useSelector(state => state.anchorEl);\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popper' : undefined;\r\n    \r\n    const handleMouseOver = (event) => {\r\n        dispatch(setAnchorEl(anchorEl))\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        dispatch(setAnchorEl(null))\r\n    }\r\n    \r\n    return (\r\n        <TooltipContentDiv \r\n            id={id} \r\n            open={open} \r\n            anchorEl={anchorEl}\r\n            disablePortal={false}\r\n            modifiers={{\r\n                flip: {\r\n                enabled: true,\r\n                },\r\n                preventOverflow: {\r\n                enabled: true,\r\n                boundariesElement: 'window',\r\n                }\r\n            }}\r\n            onMouseEnter={handleMouseOver} \r\n            onMouseLeave={handleMouseLeave}\r\n            >\r\n            <div className=\"tooltipContentContainer\">\r\n                {anchorEl && tooltipInfo[anchorEl.id]}\r\n            </div>\r\n        </TooltipContentDiv>\r\n    )\r\n}\r\n\r\nexport default Popover","import React, {useState} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { colors } from '../config';\r\n\r\nconst Navbar = styled.div`\r\n    width:100vw;\r\n    background: ${colors.skyblue};\r\n    top:0;\r\n    left:0;\r\n    padding: 20px 16px;\r\n`\r\n\r\nconst NavbarContent = styled.div`\r\n    width:100%;\r\n    max-width:1140px;\r\n    margin:0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    img {\r\n        height:50px;\r\n    }\r\n    img.logo {\r\n        @media(max-width:768px){\r\n            max-width:75%;\r\n        }\r\n    }\r\n    nav {\r\n        button, a  {\r\n            background:none;\r\n            outline:none;\r\n            border:none;\r\n            cursor:pointer;\r\n            text-transform:uppercase;\r\n            font-family: Lato, sans-serif;\r\n            font-size: 16px;\r\n            line-height: 1.5;\r\n            letter-spacing: 1.75px;\r\n            font-weight: 700;\r\n            font-stretch: normal;\r\n            color: #0d0d0d;\r\n            text-decoration:none;\r\n            &:hover {\r\n                opacity:0.7;\r\n            }\r\n        }\r\n        ul {\r\n            li {\r\n                display:inline;\r\n                list-style:none;\r\n                padding: 8px;\r\n                transition:250ms all;\r\n                button:after {\r\n                    display: inline-block;\r\n                    margin-left: .255em;\r\n                    vertical-align: .255em;\r\n                    content: \"\";\r\n                    border-top: .3em solid;\r\n                    border-right: .3em solid transparent;\r\n                    border-bottom: 0;\r\n                    border-left: .3em solid transparent;\r\n                }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    ul#mapLinks {\r\n        position:absolute;\r\n        background: ${colors.teal};\r\n        border-radius:5px;\r\n        box-shadow:2px 2px 2px rgba(0,0,0,0.5);position: absolute;\r\n        padding: .5rem 0;\r\n        margin: .125rem 0 0;\r\n        font-size: 1rem;\r\n        li, a {\r\n            display: block;\r\n            width: 100%;\r\n            padding: .25rem 1.5rem;\r\n            clear: both;\r\n            font-weight: 400;\r\n            color:white;\r\n            text-align: inherit;\r\n            white-space: nowrap;\r\n            background-color: transparent;\r\n            border: 0;\r\n        }\r\n    }\r\n    .mainNav {\r\n        @media(max-width:768px) {\r\n            display:none;\r\n        }\r\n    }\r\n    .mobileNav {\r\n        display:none;\r\n        @media(max-width:768px) {\r\n            display:initial;\r\n        }\r\n        ul#mapLinks {\r\n            right:16px;\r\n            li, a {\r\n                font-size:1.25rem;\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n\r\nconst StaticNavbar = () => {\r\n    const [ mapLinksOpen, setMapLinksOpen ] = useState(false)\r\n\r\n    const listener = (e) => {\r\n        setMapLinksOpen(false)\r\n    }\r\n\r\n    const removeListener = () => {\r\n        window.removeEventListener('click', listener)\r\n        window.removeEventListener('click', removeListener)\r\n    }\r\n\r\n    const handleNavOpen = (e) => {\r\n        if (!mapLinksOpen) {\r\n            setTimeout(() => {\r\n                window.addEventListener('click', listener)\r\n                window.addEventListener('click', removeListener)\r\n            }, 250);\r\n        }\r\n        setMapLinksOpen(prev => !prev)\r\n    }\r\n    \r\n    return (\r\n       <Navbar>\r\n            <NavbarContent>\r\n                <NavLink to=\"/\">\r\n                    <img \r\n                        src={`${process.env.PUBLIC_URL}/img/us-covid-atlas-cluster-logo.svg`}\r\n                        alt=\"US Covid Atlas Logo\"\r\n                        className=\"logo\"\r\n                    />\r\n                </NavLink>\r\n                <nav className=\"mainNav\">\r\n                    <ul>\r\n                        <li>     \r\n                            <button onClick={handleNavOpen}>Map</button>\r\n                            {mapLinksOpen && \r\n                            <ul id=\"mapLinks\">\r\n                                <NavLink to=\"/map\">Explore</NavLink>\r\n                                <NavLink to=\"/data\">Data</NavLink>\r\n                                <NavLink to=\"/api\">API</NavLink>\r\n                                <NavLink to=\"/methods\">Methods</NavLink>\r\n                                <NavLink to=\"/faq\">Help + Faq</NavLink>\r\n                            </ul>}\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/insights\">Insights</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/about\">About</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/contact\">Contact</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                \r\n                <nav className=\"mobileNav\">\r\n                    <button onClick={handleNavOpen}>\r\n                        <img src={`${process.env.PUBLIC_URL}/icons/hamburger.svg`} alt=\"Open navigation icon\"/>\r\n                    </button>\r\n                    {mapLinksOpen && \r\n                    <ul id=\"mapLinks\">\r\n                        <NavLink to=\"/map\">Explore</NavLink>\r\n                        <NavLink to=\"/data\">Data</NavLink>\r\n                        <NavLink to=\"/api\">API</NavLink>\r\n                        <NavLink to=\"/methods\">Methods</NavLink>\r\n                        <NavLink to=\"/insights\">Insights</NavLink>\r\n                        <NavLink to=\"/faq\">Help + Faq</NavLink>\r\n                        <NavLink to=\"/about\">About</NavLink>\r\n                        <NavLink to=\"/contact\">Contact</NavLink>\r\n                    </ul>}\r\n                </nav>\r\n            </NavbarContent>\r\n       </Navbar>\r\n    );\r\n}\r\n \r\nexport default StaticNavbar;","import React, { useState, useEffect } from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nconst ResizeButton = styled.button`\r\n    position:absolute;\r\n    right:10px;\r\n    bottom:10px;\r\n    background:none;\r\n    outline:none;\r\n    border:none;\r\n    transform: rotate(90deg);\r\n    cursor:nw-resize;\r\n    display:${props => props.notScaleable ? 'none' : 'initial'};\r\n`\r\n\r\nconst Scaleable = (props) => {\r\n    \r\n    const [width, setWidth] = useState(props.defaultWidth);\r\n    const [height, setHeight] = useState(props.defaultHeight);\r\n    const [currXYPos, setCurrXYPos] = useState(false);\r\n\r\n    const listener = (e) => {\r\n        setWidth(prevWidth => prevWidth+e.movementX)\r\n        setHeight(prevHeight => prevHeight+e.movementY)\r\n    }\r\n\r\n    const touchListener = (e) => {\r\n        setWidth(prev => (e?.targetTouches[0]?.clientX-currXYPos[0]) || prev)\r\n        setHeight(prev => (e?.targetTouches[0]?.clientY-currXYPos[1]) || prev)\r\n    }\r\n\r\n    const removeListener = () => {\r\n        window.removeEventListener('mousemove', listener)\r\n        window.removeEventListener('mouseup', removeListener)\r\n    }\r\n\r\n    const removeTouchListener = () => {\r\n        window.removeEventListener('touchmove', touchListener);\r\n        window.removeEventListener('touchend', removeTouchListener);\r\n    }\r\n    \r\n    const handleDown = () => {\r\n        window.addEventListener('mousemove', listener)\r\n        window.addEventListener('mouseup', removeListener)\r\n    }\r\n\r\n    const handleTouch = (e) => {\r\n        setCurrXYPos([+e.target.parentNode.parentNode.parentNode.style.left.slice(0,-2), +e.target.parentNode.parentNode.parentNode.style.top.slice(0,-2)])\r\n        window.addEventListener('touchmove', touchListener)\r\n        window.addEventListener('touchend', removeTouchListener)\r\n    }\r\n    \r\n    const open = useSelector(state => state.panelState[props.title]);\r\n\r\n    useEffect(() => {\r\n        setWidth(props.defaultWidth)\r\n        setHeight(props.defaultHeight)\r\n    }, [open, props.defaultHeight, props.defaultWidth])\r\n\r\n    return (\r\n        <div style={{width: width, height: height, minHeight: props.minHeight, minWidth: props.minWidth}}>\r\n            {props.content}\r\n            <ResizeButton \r\n                id=\"resize\"\r\n                notScaleable={props.notScaleable}\r\n                onMouseDown={handleDown}\r\n                onTouchStart={handleTouch}\r\n                style={{zIndex:10}}\r\n            >\r\n                <svg height='20px' width='20px'  fill=\"white\" viewBox=\"0 0 8.4666667 8.4666667\" x=\"0px\" y=\"0px\"><g transform=\"translate(0,-288.53333)\"><path d=\"m 5.5562495,289.59166 v 0.52916 h 0.94878 l -1.665015,1.66502 0.3741367,0.37414 1.665015,-1.66502 v 0.94878 h 0.5291667 v -1.85208 z m -2.303735,3.78168 -1.665015,1.66501 v -0.94878 H 1.0583328 v 1.85209 h 1.8520834 v -0.52917 h -0.94878 l 1.665015,-1.66501 z\"></path></g></svg>\r\n            </ResizeButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scaleable;","// general imports, state\r\nimport React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport throttle from 'lodash/throttle';\r\nimport styled from 'styled-components';\r\nimport { colors } from '../config';\r\n\r\nconst Container = styled.div`\r\n    flex:auto;\r\n    width:100%;\r\n    .MuiFormControl-root {\r\n        margin:0;\r\n    }\r\n    .MuiAutocomplete-inputRoot {\r\n        background:white;\r\n        height:36px;\r\n        border-radius:0px;\r\n        padding:0 35px;\r\n    }\r\n    .MuiAutocomplete-inputRoot[class*=\"MuiInput-root\"] .MuiAutocomplete-input:first-child {\r\n        padding:0;\r\n    }\r\n    .MuiInput-underline:hover:not(.Mui-disabled):before {\r\n        border-bottom:2px solid ${colors.yellow};\r\n    }\r\n    .MuiInput-underline:after {\r\n        border-bottom:2px solid ${colors.strongOrange};\r\n\r\n    }\r\n    .MuiFormControl-root .MuiInputBase-adornedEnd:before {\r\n        display: block;\r\n        content: ' ';\r\n        background-image: url(\"${process.env.PUBLIC_URL}/assets/img/search.svg\");\r\n        background-size: 20px 20px;\r\n        height: 20px;\r\n        width: 20px;\r\n        transform:translate(8px, -9px);\r\n        border-bottom:none !important;\r\n    }\r\n\r\n`\r\n\r\nconst StyledOption = styled.span`\r\n    span {\r\n        display:block;\r\n        font-size:12px;\r\n        &:first-child {\r\n            font-size:16px;\r\n            font-weight:bold;\r\n        }\r\n\r\n    }\r\n`\r\n\r\nconst Geocoder = ( props ) => {\r\n\r\n    const [searchState, setSearchState] = useState({\r\n        results: [],\r\n        value: '',\r\n    })\r\n\r\n    const loadResults = (results) => {\r\n        setSearchState(prev => ({\r\n            ...prev,\r\n            results\r\n        }))\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setSearchState({\r\n            results: [],\r\n            value: '',\r\n        })\r\n    }\r\n    \r\n    const buildAddress = (text) => `https://api.mapbox.com/geocoding/v5/mapbox.places/${text}.json?access_token=${props.API_KEY}&country=US&autocomplete=true&types=region%2Cdistrict%2Cpostcode%2Clocality%2Cplace%2Caddress`\r\n\r\n    const getMapboxResults = async (text, callback) => fetch(buildAddress(text)).then(r => r.json()).then(r => callback(r.features))\r\n\r\n    const queryMapbox = React.useMemo(\r\n        () =>\r\n          throttle((text, callback) => {\r\n                getMapboxResults(text, callback)\r\n          }, 200),\r\n        [],\r\n      );\r\n      \r\n    //   \r\n    const handleSearch = async (e) => {\r\n        if (e.target.value.length > 3) {\r\n            queryMapbox(e.target.value, (r) => loadResults(r))\r\n\r\n        }\r\n    }\r\n\r\n    const formatPlaceContext = (contextArray) => {\r\n        let returnString = ``\r\n        for (let i=0; i<contextArray.length; i++) {\r\n            if (\r\n                contextArray[i].id.includes('region')\r\n                ||\r\n                contextArray[i].id.includes('country')\r\n                ||\r\n                contextArray[i].id.includes('place')\r\n                ||\r\n                contextArray[i].id.includes('neighborhood')\r\n            ) {\r\n                returnString += `${contextArray[i].text}, `\r\n            }\r\n        }\r\n        return returnString.slice(0,-2)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Autocomplete\r\n                id=\"geocoder search\"\r\n                freeSolo\r\n                disableClearable\r\n                filterOptions={(x) => x}\r\n                autoComplete\r\n                clearOnEscape\r\n                inputValue={searchState.value}\r\n                options={searchState.results}\r\n                getOptionLabel={option => option.place_name}\r\n                onChange={(source, selectedOption) => {\r\n                    clearInput();\r\n                    props.onChange(selectedOption);\r\n                }}\r\n                renderOption={(option, idx) => (\r\n                <React.Fragment>\r\n                    <StyledOption id={idx}>\r\n                        <span>{option.place_name.split(',')[0]}</span>\r\n                        <span>{formatPlaceContext(option.context)}</span>\r\n                    </StyledOption>\r\n                </React.Fragment>\r\n                )}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                    {...params}\r\n                    margin=\"normal\"\r\n                    placeholder={props.placeholder}\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    onChange={(e) => {               \r\n                        setSearchState(prev => ({\r\n                            ...prev,\r\n                            value: e.target.value,\r\n                        }));\r\n                        handleSearch(e)}\r\n                    }\r\n                    />\r\n                )}\r\n                style={props.style}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Geocoder","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ContentContainer } from '../../styled_components';\r\nimport { StaticNavbar, Footer } from '../';\r\n\r\nconst ErrorPage = styled.div`\r\n    background:white;\r\n    min-height:100vh;\r\n    text-align:center;\r\n    img.errorImg {\r\n        padding:60px;\r\n    }\r\n`\r\n\r\nconst Error = () => {\r\n\r\n    return (\r\n       <ErrorPage >\r\n            <StaticNavbar/>\r\n            <ContentContainer>\r\n                <h1>Error 404</h1>\r\n                <img className=\"errorImg\" src={`${process.env.PUBLIC_URL}/icons/regional-hot-spots@3x.png`} alt=\"Error Page Missing\"/>\r\n                <h2>We can't get you where you're going.</h2>\r\n                <p>\r\n                    Sorry, we can't find the page you're looking for. It may have moved or recently changed.\r\n                    <br/><br/>\r\n                    Please use the navigation bar or footer to explore the Atlas.\r\n                </p>\r\n            </ContentContainer>\r\n            <Footer/>\r\n       </ErrorPage>\r\n    );\r\n}\r\n \r\nexport default Error;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { StaticNavbar, Footer } from '../../components';\r\nimport { colors } from '../../config';\r\nimport { Gutter } from '../../styled_components';\r\n\r\nconst HomePage = styled.div`\r\n    h1 {    \r\n        font-family: 'Playfair Display', serif;\r\n        font-size: 49px;\r\n        font-weight: 300;\r\n        text-align: center;\r\n        font-style: italic;\r\n        color: #d8d8d8;\r\n        width: 80vw;\r\n        max-width: 940px;\r\n        margin: 0 auto 40px auto;\r\n    }\r\n    .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {\r\n        margin-bottom: .5rem;\r\n        font-weight: 500;\r\n        line-height: 1.2;\r\n    }\r\n    hr {\r\n        max-width:1140px;\r\n        margin:6em auto;\r\n        border: 0;\r\n        border-top: 1px solid ${colors.skyblue};\r\n    } \r\n    p {\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n        color: #212529;\r\n    }\r\n`\r\n\r\nconst HomePageContent = styled.div`\r\n    width:100%;\r\n    margin:0 auto;\r\n`\r\n\r\nconst Hero = styled.div`\r\n    width:100%;\r\n    max-width:1140px;\r\n    text-align:center;\r\n    color: ${colors.lightgray};\r\n    margin:0 auto;\r\n    padding:50px 10px 0 10px;\r\n    p {\r\n        \r\n        font-family: 'Lato', sans-serif;\r\n        font-size: 20px;\r\n        font-weight: 300;\r\n        font-stretch: normal;\r\n        font-style: normal;\r\n        line-height: 1.6;\r\n        letter-spacing: normal;\r\n        color: #ededed;\r\n    }\r\n    #button-cta {\r\n        font-size: 16px;\r\n        font-weight: 700;\r\n        letter-spacing: 1.75px;\r\n        line-height:5;\r\n        text-align: center;\r\n        text-transform:uppercase;\r\n        background-color: ${colors.orange};\r\n        color: #0d0d0d;\r\n        padding: 1rem 1.5rem;\r\n        margin:1rem;\r\n        border-radius: .3rem;\r\n        text-decoration:none;\r\n    }\r\n    .small-text {\r\n        font-size:0.75rem;\r\n        a {\r\n            font-size:0.75rem;\r\n            color:${colors.orange};\r\n            text-decoration:none;\r\n        }\r\n    }\r\n    video {\r\n        margin-bottom:20px;\r\n        width:100%;\r\n        max-width:600px;\r\n    }\r\n    .map-caption {\r\n        font-size:0.9rem;\r\n        text-align:left;\r\n\r\n    }\r\n\r\n`\r\n\r\nconst Features = styled.div`\r\n    max-width:1140px;\r\n    width:100%;\r\n    margin: 0 auto 60px auto;\r\n    h2 {\r\n        font-family: 'Playfair Display', serif;\r\n        font-size: 28px;\r\n        text-align:center;\r\n        font-weight: normal;\r\n        font-stretch: normal;\r\n        font-style: italic;\r\n        line-height: 1.5;\r\n        letter-spacing: normal;\r\n        text-align: center;\r\n        color: ${colors.skyblue};\r\n        margin-bottom:40px;\r\n    }\r\n`\r\n\r\nconst Feature = styled(Grid)`\r\n    text-align:center;\r\n    h5 {\r\n        font-family: 'Playfair Display', serif;\r\n        font-size: 19px;\r\n        font-weight: normal;\r\n        font-stretch: normal;\r\n        font-style: normal;\r\n        line-height: normal;\r\n        letter-spacing: normal;\r\n        color: ${colors.skyblue};\r\n        margin-bottom:20px;\r\n    }\r\n    img {\r\n        margin:20px auto;\r\n        width:100%;\r\n        max-width:130px;\r\n    }\r\n    p {\r\n        color:white;\r\n        font-family: Lato;\r\n        font-size: 16px;\r\n        font-weight: 300;\r\n        font-stretch: normal;\r\n        font-style: normal;\r\n        line-height: 1.63;\r\n        letter-spacing: normal;\r\n        color: ${colors.white};\r\n        @media(max-width:960px) {\r\n            max-width:400px;\r\n            margin:0 auto 40px auto;\r\n        }\r\n    }\r\n`\r\n\r\nconst BreakQuestion = styled.div`\r\n    width:100%;\r\n    background-color:${colors.skyblue};\r\n    padding:20px;\r\n    h3 {\r\n        font-family: 'Playfair Display', serif;\r\n        font-size: 28px;\r\n        font-weight: normal;\r\n        font-stretch: normal;\r\n        font-style: italic;\r\n        line-height: 1.5;\r\n        letter-spacing: normal;\r\n        text-align: center;\r\n        color: ${colors.gray};\r\n    }\r\n`\r\n\r\nconst Arrow = styled.div`\r\n    width: 35px;\r\n    height: 35px;\r\n    background-color: ${colors.skyblue};\r\n    position:absolute;\r\n    left:50%;\r\n    transform: translate(-50%, 0px) rotate(-45deg);\r\n`\r\n\r\nconst UseCasesContainer = styled.div`\r\n    background:white;\r\n    width:100%;\r\n    padding: 40px 20px;\r\n    padding-top:40px;\r\n`\r\nconst UseCases = styled.div`\r\n    width:100%;\r\n    max-width:1140px;\r\n    margin:0 auto;\r\n    @media (max-width:960px){\r\n        text-align:center;\r\n    }\r\n    video, img {\r\n        width:100%;\r\n        max-width:400px;\r\n        margin:0 auto;\r\n        display:block;\r\n    }\r\n    h5 {\r\n        font-size:1.5rem;\r\n    }\r\n    p {\r\n        max-width:600px;\r\n        font-size:16px;\r\n        line-height:1.7;\r\n        @media (max-width:960px){\r\n            margin: 0 auto;\r\n        }\r\n    }\r\n`\r\n\r\nconst NoBreak = styled.span`\r\n    white-space: nowrap;\r\n`\r\n\r\nconst Usage = styled.span`\r\n    background:${props => colors[props.color]};\r\n    padding:10px 15px;\r\n    border-radius:15px;\r\n    font-weight:bold;\r\n    line-height:4;\r\n    font-size:1rem;\r\n    transform:translateY(-100%);\r\n`\r\nconst home = () => {\r\n    return (\r\n       <HomePage>\r\n           <StaticNavbar/>\r\n           <HomePageContent>\r\n                <Hero>\r\n                    <h1>Near Real-Time Exploration of the <NoBreak>COVID-19</NoBreak> Pandemic</h1>\r\n                    <p>\r\n                        The US COVID Atlas is a visualization tool led by a University of Chicago research coalition.\r\n                        In a quickly changing pandemic landscape, our tool connects COVID case data and community indicators \r\n                        across the United States from its beginning to today. The Atlas helps you access current \r\n                        county-level data and spatial analysis to better understand the spread in communities \r\n                        and to bolster planning efforts.\r\n                        <br/><br/>\r\n\r\n                        Version 2 brings new data, visualization modes, and tools to find insights about the pandemic.\r\n                    </p>\r\n                    <NavLink to=\"/map\" id=\"button-cta\">Explore the Atlas V2</NavLink>\r\n                    <p className=\"small-text\">\r\n                        Not ready to make the switch? <a href=\"./vintage/map.html\">Explore the original US Covid Atlas</a>\r\n                    </p>\r\n                    <video autoPlay={true} muted={true} loop={true}> \r\n                        <source src={`${process.env.PUBLIC_URL}/img/cover.mp4`} type=\"video/mp4\"/>\r\n                        Your browser does not support the video tag.\r\n                    </video>\r\n                    <p className=\"map-caption\">\r\n                        Choropleth map showing COVID-19 spreading from July 1st to the end of December 2020, based on confirmed case per 100,000 persons at the county level. The Atlas is updated by 3pm each afternoon with the latest available data.                \r\n                    </p>\r\n                </Hero>\r\n                <hr/>\r\n                <Features>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <h2>Atlas Features</h2>\r\n                        </Grid>\r\n                        <Feature item xs={12} md={3}>\r\n                            <img src={`${process.env.PUBLIC_URL}/icons/regional-hot-spots.png`} alt=\"Regional hotspots of COVID cases\" />\r\n                            <h5>Track regional hotspots <NoBreak>in real-time</NoBreak></h5>\r\n                            <p>\r\n                                Statistical clusters of both confirmed and daily new COVID cases &amp; deaths, \r\n                                with and without population adjustment.\r\n                            </p>\r\n                        </Feature>\r\n                        <Feature item xs={12} md={3}>\r\n                            <img src={`${process.env.PUBLIC_URL}/icons/spread-over-time-2@2x.png`} alt=\"COVID spread across the continental US\" />\r\n                            <h5>Watch COVID-19 spread across the country</h5>\r\n                            <p>\r\n                                Watch the spread of accumulated or daily new COVID cases using a time slider and live time-animation.\r\n                            </p>\r\n                        </Feature>\r\n                        <Feature item xs={12} md={3}>\r\n                            <img src={`${process.env.PUBLIC_URL}/icons/county-level-data@2x.png`} alt=\"County level COVID Map\" />\r\n                            <h5>Zoom in to focus down to the county level</h5>\r\n                            <p>\r\n                                Uncover trends of the pandemic by comparing different data sources, variables, and spatial analytic insights.\r\n                            </p>\r\n                        </Feature>\r\n                        <Feature item xs={12} md={3}>\r\n                            <img src={`${process.env.PUBLIC_URL}/icons/comm-health-context@2x.png`} alt=\"Community Health Context Map\" />\r\n                            <h5>Tap into community and health contexts</h5>\r\n                            <p>\r\n                                Connect to relevant social, economic, and health indicators to provide meaningful community context.\r\n                            </p>\r\n                            \r\n                        </Feature>\r\n                    </Grid>\r\n                </Features>\r\n                <BreakQuestion>\r\n                    <h3>\r\n                        How can the Atlas better equip you to respond to the pandemic?\r\n                    </h3>\r\n                    <Arrow/>\r\n                </BreakQuestion>\r\n                <UseCasesContainer>\r\n                    <UseCases>\r\n                        <Grid container spacing={5}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <video autoPlay={true} muted={true} loop={true}> \r\n                                    <source src={`${process.env.PUBLIC_URL}/img/use_case1.mp4`} type=\"video/mp4\" />\r\n                                    Your browser does not support the video tag.\r\n                                </video>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Usage color=\"yellow\">Usage #1</Usage>\r\n                                <h5>Identify Regional Hotspots for Mitigation</h5>\r\n                                <p>\r\n                                    Use spatial statistics to detect hot spots with raw case data or by adjusting for population. \r\n                                    Because of the infectious nature of COVID, high numbers of cases anywhere will be of concern. \r\n                                    At the same time, identifying areas that have a disporotionately high number of cases \r\n                                    within the population is necessary to locate areas hit hardest by the pandemic.\r\n                                </p>\r\n                            </Grid>\r\n                            <Gutter h={80}/>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Usage color=\"orange\">Usage #2</Usage>\r\n                                <h5>Track patterns to better plan ahead</h5>\r\n                                <p>\r\n                                    Visualize change over time to better understand the distribution and spread of COVID in the US throughout the pandemic. \r\n                                    Move the time slider yourself or click the play button and watch the spread of COVID. \r\n                                    Analyze patterns of the spread to support planning for resource allocation.\r\n                                </p>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <img src={`${process.env.PUBLIC_URL}/img/Landingpage_usage2.gif`} alt=\"Use Case 2: Tracking COVID Patterns over time\" />\r\n                            </Grid>\r\n                            <Gutter h={80}/>\r\n                            <Grid item xs={12} md={6}>\r\n                                <img src={`${process.env.PUBLIC_URL}/img/Landingpage_usage3.gif`} alt=\"Use Case 3: Forecasting viral spreads\" />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Usage color=\"yellow\">Usage #3</Usage>\r\n                                <h5>Interact and forecast viral spread at state and county levels</h5>\r\n                                <p>\r\n                                    Switch between the state and county thematic maps (ie. choropleth maps) to find COVID at a local level. \r\n                                    Then, select and track hotspots over time using the Local Moran's I statistic. \r\n                                    Use a powerful visual analytic tool to find COVID spillovers along state borders, emerging from one county to areas nearby, and more.\r\n                                </p>\r\n                            </Grid>\r\n                            <Gutter h={80}/>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Usage color=\"orange\">Usage #4</Usage>\r\n                                <h5>Make visible vulnerable communities</h5>\r\n                                <p>\r\n                                    Click on counties to get more information about community health factors and socioeconomic indicators \r\n                                    like average length of life in an area, percent uninsured, or income inequality metrics. \r\n                                    In the main selection panel, overlay segregated cities or Native American Reservation boundaries to identify uniquely vulnerable locales.\r\n                                </p>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <img src={`${process.env.PUBLIC_URL}/img/Landingpage_usage4.gif`} alt=\"Use Case 4: Make visible vulnerable communities\" />\r\n                            </Grid>\r\n                            <Gutter h={80}/>\r\n                            <Grid item xs={12} md={6}>\r\n                                <img src={`${process.env.PUBLIC_URL}/img/Landingpage_usage5.gif`} alt=\"Use Case 5: Forecasting viral spreads\" />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Usage color=\"yellow\">Usage #5</Usage>\r\n                                <h5>Identify emerging risk</h5>\r\n                                <p>\r\n                                    Watch hotspots progress or diminish over time, and identify areas of emerging risk early. Some hotspots begin as spatial outliers -- \r\n                                    shown as pink in the map, meaning cases are high in that county but low in neighboring counties. \r\n                                    If cases continue to grow and spillover nearby counties, the areas will turn red. \r\n                                    Mature hotspots are clusters of counties that remain red over time and continue to grow.\r\n                                </p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </UseCases>\r\n                </UseCasesContainer>\r\n           </HomePageContent>\r\n           <Footer signUp={true} />\r\n       </HomePage>\r\n    );\r\n}\r\n \r\nexport default home;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ContentContainer } from '../../styled_components';\r\nimport { colors } from '../../config';\r\n\r\nconst PreloaderPage = styled.div`\r\n    background:${colors.gray};\r\n    min-height:100vh;\r\n    h2 {\r\n        position:fixed;\r\n        left:50%;\r\n        top:60%;\r\n        transform:translateX(-50%);\r\n        color:white;\r\n    }\r\n    img {\r\n        width:100px;\r\n        height:86px;\r\n        position:fixed;\r\n        left:50%;\r\n        top:50%;\r\n        transform:translate(-50%, -50%);\r\n    }\r\n`\r\n\r\nconst LoadingMessage = () => {\r\n\r\n    return (\r\n       <PreloaderPage>\r\n           <ContentContainer className=\"transferInfo\">\r\n                <h2>loading...</h2>\r\n                <img src={`${process.env.PUBLIC_URL}/assets/img/preloader.gif`} alt=\"Preloader\" />\r\n           </ContentContainer>\r\n       </PreloaderPage>\r\n    );\r\n}\r\n \r\nexport default LoadingMessage;","\r\nexport const defaultData = 'tree_sst_master_tracts.geojson';\r\n\r\nexport const dataPresets = {\r\n    'tree_sst_master_tracts.geojson': {\r\n        plainName: 'Tract Level Tree Data', // Plain english name for dataset\r\n        geojson: 'tree_sst_master_tracts.geojson', // geospatial data to join to\r\n        csvs: [],  // list of CSVs to join\r\n        tableNames: [], // table names in order of CSVs\r\n        joinCols: ['GEOID'], // geospatial data join column and then list of valid table join columns\r\n        accumulate: [], // CSV names to accumulate over time\r\n        dateList: {} // date lists to parse: isoDateList (eg. '2020-01-01') or usDateList (eg. '01/01/20')\r\n    }\r\n}\r\n\r\nexport const tooltipInfo = {\r\n};\r\n\r\nexport const variablePresets = {\r\n    \"Tree Crown Density\": {\r\n        variableName:\"Tree Crown Density\",\r\n        numerator: 'properties',\r\n        nType: 'charactertistic',\r\n        nRange: null,\r\n        nProperty: 'trees_crown_den',\r\n        denominator: 'properties',\r\n        dType: null,\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n        scale3D: 100,\r\n        fixedScale: null,\r\n        colorScale: [\r\n          [255,255,204],\r\n          [217,240,163],\r\n          [173,221,142],\r\n          [120,198,121],\r\n          [49,163,84],\r\n          [0,104,55]\r\n        ],\r\n    },\r\n    \r\n    \"PM2.5 in Summer (2014-18)\": {\r\n        variableName:\"PM2.5 in Summer (2014-18)\",\r\n        numerator: 'properties',\r\n        nType: 'charactertistic',\r\n        nRange: null,\r\n        nProperty: 'nn_q3_pm2_5',\r\n        denominator: 'properties',\r\n        dType: null,\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n        scale3D: 100,\r\n        fixedScale: null,\r\n        colorScale: null,\r\n        colorScale: [\r\n          [247,247,247],\r\n          [217,217,217],\r\n          [189,189,189],\r\n          [150,150,150],\r\n          [99,99,99],\r\n          [37,37,37],\r\n        ],\r\n    },\r\n    \r\n    \"Surface Temperature\": {\r\n        variableName:\"Surface Temperature\",\r\n        numerator: 'properties',\r\n        nType: 'charactertistic',\r\n        nRange: null,\r\n        nProperty: 'heatisl',\r\n        denominator: 'properties',\r\n        dType: null,\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n        scale3D: 100,\r\n        fixedScale: null,\r\n        colorScale: null,\r\n        colorScale: [\r\n          [255,255,178],\r\n          [254,217,118],\r\n          [254,178,76],\r\n          [253,141,60],\r\n          [240,59,32],\r\n          [189,0,38],\r\n        ],\r\n    },\r\n\r\n    \"Traffic Volume\": {\r\n        variableName:\"Traffic Volume\",\r\n        numerator: 'properties',\r\n        nType: 'charactertistic',\r\n        nRange: null,\r\n        nProperty: 'logtraf',\r\n        denominator: 'properties',\r\n        dType: null,\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n        scale3D: 100,\r\n        fixedScale: null,\r\n        colorScale: null,\r\n        colorScale: [\r\n          [241,238,246],\r\n          [212,185,218],\r\n          [201,148,199],\r\n          [223,101,176],\r\n          [221,28,119],\r\n          [152,0,67]\r\n        ],\r\n    },\r\n\r\n    \"Social Vulnerability Index\": {\r\n        variableName:\"Social Vulnerability Index\",\r\n        numerator: 'properties',\r\n        nType: 'charactertistic',\r\n        nRange: null,\r\n        nProperty: 'svi_pecentile',\r\n        denominator: 'properties',\r\n        dType: null,\r\n        dProperty: null,\r\n        dRange:null,\r\n        dIndex:null,\r\n        scale:1,\r\n        scale3D: 100,\r\n        fixedScale: null,\r\n        colorScale: null,\r\n        colorScale: [\r\n          [246,239,247],\r\n          [208,209,230],\r\n          [166,189,219],\r\n          [103,169,207],\r\n          [28,144,153],\r\n          [1,108,89],\r\n        ],\r\n    },\r\n}\r\n\r\nexport const fixedScales = {\r\n}\r\n\r\n// mapbox API token\r\nexport const MAPBOX_ACCESS_TOKEN = 'pk.eyJ1IjoibGl4dW45MTAiLCJhIjoiY2locXMxcWFqMDAwenQ0bTFhaTZmbnRwaiJ9.VRNeNnyb96Eo-CorkJmIqg';\r\n\r\nexport const colors = {\r\n    white: '#ffffff',\r\n    black: '#00000',\r\n    darkgray:'#1a1a1a',\r\n    gray:'#2b2b2b',\r\n    buttongray: '#f5f5f5',\r\n    lightgray: '#d8d8d8',\r\n    yellow: '#FFCE00',\r\n    lightblue: '#A1E1E3',\r\n    red: '#EC1E24',\r\n    strongOrange: '#F16622',\r\n    orange:'#F37E44',\r\n    skyblue: '#c1ebeb',\r\n    blue: '#007bff',\r\n    teal: '#00575c',\r\n    // orange: '#f37e43',\r\n    pink: '#e83e8c',\r\n    ivory: '#F9F9ED',\r\n    green:'#97DB4F'\r\n}\r\n"],"sourceRoot":""}